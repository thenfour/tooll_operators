{
  "Name": "XXXXSKCue",
  "_id": "36844fc6-9ea5-4cf4-93b1-13d6df3648eb",
  "Namespace": "user.tenfour",
  "Description": "v5 or so.use as just a placeholder for cues\r\n\r\nConverts stream to project, and beats to time.\r\nCan use a stream time as a basis, so you can define markers by beats from a previous cue.\r\n\r\nOutputs a LibToollTenfour.CueInfo object.\r\n",
  "Inputs": [
    {
      "Name": "ProjectTime",
      "MetaInstanceID": "55c6629a-a1ed-4c8b-9217-ed9f41e1a4b2",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "ProjectBeat",
      "MetaInstanceID": "31e66c7f-a0f6-4853-8eae-eeac6a1f0e1b",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Color.R",
      "MetaInstanceID": "e10abc1c-bb5d-44f9-a483-aea979608d89",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.53"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Color.G",
      "MetaInstanceID": "a7007f2b-a2e8-43f0-95cd-ac4d1d7d1e9c",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.48"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Color.B",
      "MetaInstanceID": "2c789e37-7e36-464c-9aca-3216dbdab110",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.68"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Color.A",
      "MetaInstanceID": "c1e49a4f-99bf-42a3-a5f8-cbab06ae9891",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "StreamTimeOffset",
      "MetaInstanceID": "8b48d185-4255-4f00-9acc-04d3459d22ed",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    }
  ],
  "Outputs": [
    {
      "Name": "Cue",
      "MetaInstanceID": "cce84730-d573-4412-ac05-478905c2f1e1",
      "MetaID": "9701d534-b3ff-4889-a250-84aece4a7d76"
    }
  ],
  "OperatorParts": [
    {
      "MetaInstanceID": "c456749b-c03a-4c61-8952-3437fff58ee8",
      "MetaID": "73e64b34-fed1-4e08-b5b2-ab8c00a27ed4",
      "Name": "XXXXSKCueFunc",
      "Version": "74350cc5-c180-439c-815b-b600c36a49fb",
      "Type": "Generic",
      "IsMultiInput": "True",
      "Script": [
        "using System;",
        "using System.Collections.Generic;",
        "using System.Linq;",
        "using System.Text;",
        "using SharpDX;",
        "",
        "// projectbeat",
        "// projecttime",
        "// streamtime",
        "// streambeat",
        "// relativetime",
        "",
        "namespace Framefield.Core.ID73e64b34_fed1_4e08_b5b2_ab8c00a27ed4",
        "{",
        "    public class Class_SKCue : OperatorPart.Function,",
        "        Framefield.Core.OperatorPartTraits.ITimeMarker,",
        "        Framefield.Core.OperatorPartTraits.ITimeAccessor",
        "    {",
        "        //>>> _inputids",
        "        private enum InputId",
        "        {",
        "            ProjectTime = 0,",
        "            ColorR = 1,",
        "            ColorG = 2,",
        "            ColorB = 3,",
        "            ColorA = 4,",
        "            ProjectBeat = 5,",
        "            StreamTimeOffset = 6",
        "        }",
        "        //<<< _inputids",
        "        ",
        "        //>>> _outputids",
        "        private enum OutputId",
        "        {",
        "            Cue = 0",
        "        }",
        "        //<<< _outputids",
        "",
        "    \t// for itimemmarker",
        "        public double Time {",
        "            get",
        "            {",
        "                double projectTime = GetInputValue((int)InputId.ProjectTime);",
        "                double projectBeat = GetInputValue((int)InputId.ProjectBeat);",
        "                double streamTimeOffset = GetInputValue((int)InputId.StreamTimeOffset);",
        "                ",
        "                var server = Framefield.Core.OperatorPartContext.SKServerState.Server;",
        "                if (server != null && server.Transport != null) {",
        "                    LibToollTenfour.CueInfo cue = server.Transport.CreateCue(streamTimeOffset, projectTime, projectBeat);",
        "                    return cue.ProjectTime;",
        "                }",
        "                return 0;",
        "            }",
        "            set",
        "            {",
        "                SetInputValue((int)InputId.ProjectTime, value);",
        "                SetInputValue((int)InputId.ProjectBeat, 0);",
        "            }",
        "        }",
        "",
        "",
        "        public Color4 Color {",
        "            get {",
        "                return new Color4((float)GetInputValue((int)InputId.ColorR),",
        "                                  (float)GetInputValue((int)InputId.ColorG),",
        "                                  (float)GetInputValue((int)InputId.ColorB),",
        "                                  (float)GetInputValue((int)InputId.ColorA));",
        "            }",
        "            set {",
        "                SetInputValue((int)InputId.ColorA, (double)value.Alpha);",
        "                SetInputValue((int)InputId.ColorR, (double)value.Red);",
        "                SetInputValue((int)InputId.ColorG, (double)value.Green);",
        "                SetInputValue((int)InputId.ColorB, (double)value.Blue);",
        "            }",
        "        }",
        "        ",
        "        ",
        "        public override OperatorPartContext Eval(OperatorPartContext context, List<OperatorPart> inputs, int outputIdx) {",
        "            //>>> _params",
        "            var ProjectTime = inputs[(int)InputId.ProjectTime].Eval(context).Value;",
        "            var ColorR = inputs[(int)InputId.ColorR].Eval(context).Value;",
        "            var ColorG = inputs[(int)InputId.ColorG].Eval(context).Value;",
        "            var ColorB = inputs[(int)InputId.ColorB].Eval(context).Value;",
        "            var ColorA = inputs[(int)InputId.ColorA].Eval(context).Value;",
        "            var Color = new Color4(ColorR, ColorG, ColorB, ColorA);",
        "            var ProjectBeat = inputs[(int)InputId.ProjectBeat].Eval(context).Value;",
        "            var StreamTimeOffset = inputs[(int)InputId.StreamTimeOffset].Eval(context).Value;",
        "            //<<< _params",
        "            ",
        "            var skstate = Framefield.Core.OperatorPartContext.SKServerState;",
        "",
        "            double projectTime = GetInputValue((int)InputId.ProjectTime);",
        "            double projectBeat = GetInputValue((int)InputId.ProjectBeat);",
        "            double streamTimeOffset = GetInputValue((int)InputId.StreamTimeOffset);",
        "            ",
        "            if (skstate.Server != null && skstate.Server.Transport != null) {",
        "                LibToollTenfour.CueInfo cue = skstate.Server.Transport.CreateCue(StreamTimeOffset, ProjectTime, ProjectBeat);",
        "                context.Dynamic = cue;",
        "            }",
        "            return context;",
        "",
        "",
        "//context.Time = (float)skstate.ProgramStreamTime;",
        "            ",
        "            //float timeSec;",
        "            /*",
        "            switch (outputIdx) {",
        "                case (int)OutputId.Time:",
        "                    //timeSec = GetTime(TransitionBeat - BeatOffset, TransitionSec);",
        "                    timeSec = GetTime(BeatOffset + TransitionBeat, TransitionSec);",
        "                    ",
        "                    //Logger.Info(this,\"TransitionPoint; time={0}\", context.Time);",
        "                    context.Value = timeSec;",
        "                    return context;",
        "                case (int)OutputId.Beat:",
        "                    context.Value = TransitionBeat + BeatOffset;",
        "                    return context;",
        "                case (int)OutputId.RelativeTime:",
        "                    timeSec = GetTime(TransitionBeat + BeatOffset, TransitionSec);",
        "                    context.Value = context.Time - timeSec;",
        "                    return context;",
        "            }*/",
        "            ",
        "            //Logger.Info(this,\"unknown outputid\");",
        "            //return context;",
        "        }",
        "",
        "        private double GetInputValue(int index) {",
        "            return OperatorPartUtilities.GetInputFloatValue(OperatorPart.Connections[index]);",
        "        }",
        "",
        "        private void SetInputValue(int index, double val) {",
        "            OperatorPart opPart = OperatorPart.Connections[index];",
        "            if (opPart.Connections.Count == 0) {",
        "                opPart.Func = Utilities.CreateValueFunction(new Float((float)val));",
        "            }",
        "        }",
        "",
        "    }",
        "}",
        ""
      ],
      "AdditionalAssemblies": [
        "LibToollTenfour.dll"
      ]
    }
  ],
  "Operators": [],
  "Connections": [
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "55c6629a-a1ed-4c8b-9217-ed9f41e1a4b2",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "c456749b-c03a-4c61-8952-3437fff58ee8"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "e10abc1c-bb5d-44f9-a483-aea979608d89",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "c456749b-c03a-4c61-8952-3437fff58ee8"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "a7007f2b-a2e8-43f0-95cd-ac4d1d7d1e9c",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "c456749b-c03a-4c61-8952-3437fff58ee8"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "2c789e37-7e36-464c-9aca-3216dbdab110",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "c456749b-c03a-4c61-8952-3437fff58ee8"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "c1e49a4f-99bf-42a3-a5f8-cbab06ae9891",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "c456749b-c03a-4c61-8952-3437fff58ee8"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "31e66c7f-a0f6-4853-8eae-eeac6a1f0e1b",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "c456749b-c03a-4c61-8952-3437fff58ee8"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "8b48d185-4255-4f00-9acc-04d3459d22ed",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "c456749b-c03a-4c61-8952-3437fff58ee8"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "c456749b-c03a-4c61-8952-3437fff58ee8",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "cce84730-d573-4412-ac05-478905c2f1e1"
    }
  ]
}