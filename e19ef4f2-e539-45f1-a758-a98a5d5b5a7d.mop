{
  "Name": "SH_GlowCells",
  "_id": "e19ef4f2-e539-45f1-a758-a98a5d5b5a7d",
  "Namespace": "user.tenfour.shaders",
  "Description": "now with consistent UV calculation.\r\n\r\nthis is pretty versatile and could be used for pixellating an image, ",
  "Inputs": [
    {
      "Name": "Code",
      "MetaInstanceID": "a8133a0b-f21b-419d-9ebe-18326ee53f1f",
      "DefaultValue": {
        "Type": "Text",
        "Value": [
          "//>>> _common parameters\r",
          "float4x4 objectToWorldMatrix;",
          "float4x4 worldToCameraMatrix;",
          "float4x4 projMatrix;",
          "Texture2D txDiffuse;",
          "float2 RenderTargetSize;",
          "//<<< _common parameters\r",
          "\r",
          "//>>> _parameters\r",
          "float2 Position;",
          "float MaxIterations;",
          "float Bias;",
          "float Zoom;",
          "float Exponent;",
          "float Animate;",
          "float PointStrength;",
          "float Density;",
          "float CellShape;",
          "Texture2D Texture;",
          "float ColorSaturation;",
          "float TextureMix;",
          "float TextureScale;",
          "float OutputQuantization;",
          "float LevelQuantization;",
          "float TextureSampleMode;",
          "float InitialCellSize;",
          "//<<< _parameters\r",
          "\r",
          "static const float PI = atan(1.)*4.;\r",
          "static const float PI2 = atan(1.)*8.;\r",
          "\r",
          "\r",
          "//>>> _setup\r",
          "SamplerState samLinear",
          "{",
          "    Filter = MIN_MAG_MIP_LINEAR;",
          "    AddressU = Clamp;",
          "    AddressV = Clamp;",
          "};",
          "//<<< _setup\r",
          "SamplerState samLinearWrap\r",
          "{\r",
          "    Filter = MIN_MAG_MIP_POINT;\r",
          "    AddressU = Wrap;\r",
          "    AddressV = Wrap;\r",
          "};\r",
          "\r",
          "//>>> _declarations\r",
          "struct VS_IN",
          "{",
          "    float4 pos : POSITION;",
          "    float2 texCoord : TEXCOORD;",
          "};",
          "",
          "struct PS_IN",
          "{",
          "    float4 pos : SV_POSITION;",
          "    float2 texCoord: TEXCOORD0;",
          "};",
          "//<<< _declarations\r",
          "\r",
          "//>>> _GS\r",
          "",
          "//<<< _GS\r",
          "\r",
          "//>>> _VS \r",
          "PS_IN VS( VS_IN input )",
          "{",
          "    PS_IN output = (PS_IN)0;",
          "",
          "    output.pos = mul(input.pos, worldToCameraMatrix);",
          "    output.pos = mul(output.pos, projMatrix);",
          "    output.texCoord = input.texCoord;",
          "",
          "    return output;",
          "}",
          "//<<< _VS\r",
          "\r",
          "//>>> PS\r",
          "\r",
          "float4 hash42(float2 p)\r",
          "{\r",
          "\tfloat4 p4 = frac(p.xyxy * float4(.1031, .1030, .0973, .1099));\r",
          "    p4 += dot(p4, p4.wzxy+33.33);\r",
          "    return frac((p4.xxyz+p4.yzzw)*p4.zywx);\r",
          "}\r",
          "\r",
          "\r",
          "float4 PS( PS_IN input ) : SV_Target\r",
          "{\r",
          "    float2 uv = input.texCoord;\r",
          "    float2 R = RenderTargetSize;\r",
          "\r",
          "    uv -= .5;// always center zoom\r",
          "    uv *= Zoom;\r",
          "    uv += Position;\r",
          "\r",
          "    //float2 texuv = ((uv - Position) / Zoom * TextureScale) + Position + .5;// input.texCoord;\r",
          "    //texuv -= .5;\r",
          "    //texuv *= TextureScale;\r",
          "    //texuv += .5;\r",
          "\r",
          "    float2 cellSize = float2(InitialCellSize,InitialCellSize);\r",
          "    cellSize.x /= R.x / R.y;\r",
          "    float sd = 0;\r",
          "    float3 color = float3(0,0,0);\r",
          "    float2 cellID = float2(0,0);\r",
          "    float2 cellPos1 = float2(0,0);\r",
          "    \r",
          "    for (float i = 0; i < MaxIterations; ++ i) {\r",
          "        cellID = floor(uv / cellSize) * cellSize;\r",
          "        cellPos1 = (frac(uv / cellSize) - .5) * 2.;// -1 to 1\r",
          "\r",
          "        // sd.\r",
          "        cellPos1 = sign(cellPos1)*pow(abs(cellPos1),CellShape);\r",
          "        sd = 1.-length(cellPos1);\r",
          "        \r",
          "        float4 h = hash42(cellID + 1e3);\r",
          "        color = h.rgb;\r",
          "\r",
          "        // blink.\r",
          "        float4 h2 = hash42(cellID - 1e2);\r",
          "        float a = sin((Animate * h2.x) + 1e2 * h2.y)*.5+.5;\r",
          "        a = smoothstep(Density,.0,a);\r",
          "        \r",
          "        color *= a;\r",
          "        \r",
          "        if (h.w < Bias) {\r",
          "            break;\r",
          "        }\r",
          "        //uv *= 2;\r",
          "        cellSize /= 2;\r",
          "    }\r",
          "    \r",
          "    sd = pow(max(0,sd), Exponent);\r",
          "    sd *= PointStrength;\r",
          "    \r",
          "    color = lerp((color.r+color.g+color.b)/3, color, ColorSaturation);\r",
          "    color = clamp(color, 0, 1);\r",
          "    \r",
          "    if (LevelQuantization > 0.001) {\r",
          "        color = floor(color / LevelQuantization) * LevelQuantization;\r",
          "    }\r",
          "    \r",
          "    if (TextureMix > 0) {\r",
          "        if (TextureSampleMode == 0) {\r",
          "            // sample the UV normally.\r",
          "            color = lerp(color, color * Texture.Sample(samLinearWrap, uv / TextureScale).rgb, TextureMix);\r",
          "            //color = lerp(color, color * Texture.Sample(samLinearWrap, uv).rgb, TextureMix);\r",
          "        } else {\r",
          "            // 1= sample only the cell center.\r",
          "            // OK actually it's just the upper left corner but who really cares\r",
          "            color = lerp(color, color * Texture.Sample(samLinearWrap, cellID / TextureScale / Zoom).rgb, TextureMix);\r",
          "        }\r",
          "    }\r",
          "    color = clamp(color, 0, 1);\r",
          "    \r",
          "    float4 ret = float4(sd * color,1);\r",
          "    if (OutputQuantization > 0.001) {\r",
          "        ret.rgb = floor(ret.rgb / OutputQuantization) * OutputQuantization;\r",
          "    }\r",
          "    return clamp(ret, 0, 1);\r",
          "}\r",
          "\r",
          "//<<< PS\r",
          "\r",
          "//>>> _technique\r",
          "technique10 Render",
          "{",
          "    pass P0",
          "    {",
          "        SetGeometryShader( 0 );",
          "        SetVertexShader( CompileShader( vs_4_0, VS() ) );",
          "        SetPixelShader( CompileShader( ps_4_0, PS() ) );",
          "    }",
          "}",
          "//<<< _technique\r",
          ""
        ]
      },
      "MetaID": "c522a66e-3260-4692-b3e3-79fd0361fa3d",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Position.X",
      "MetaInstanceID": "2be32b69-e786-4ffd-8022-bfd53808637d",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.5"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Position.Y",
      "MetaInstanceID": "765a38c0-c0c5-4de5-943c-86605ef7f3fe",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.5"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "MaxIterations",
      "MetaInstanceID": "b11b5f45-c4a1-4822-83c3-a168aeedb5c4",
      "DefaultValue": {
        "Type": "Float",
        "Value": "3"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "1",
      "Max": "30",
      "Scale": "1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Bias",
      "MetaInstanceID": "5ea5269f-e8cb-45fe-8a0f-840e54ccd64a",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.5"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.001",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Zoom",
      "MetaInstanceID": "4d0cbd71-d7f4-4947-b419-7e89de9f301f",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0.1",
      "Max": "10000",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "InitialCellSize",
      "MetaInstanceID": "415d6f6e-9282-4135-b9c4-6646fcb42047",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.2"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0.001",
      "Max": "5",
      "Scale": "0.001",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "CellShape",
      "MetaInstanceID": "0dc1fcb6-9cc9-4c09-ac50-e39321f81df5",
      "DefaultValue": {
        "Type": "Float",
        "Value": "7"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "10",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Animate",
      "MetaInstanceID": "8887bc4e-b10e-4859-b774-9b4fa4f7868e",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Required",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Density",
      "MetaInstanceID": "a2ada2cf-5564-48c1-88a9-883fa4b91d5b",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.5"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "2",
      "Scale": "0.001",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Exponent",
      "MetaInstanceID": "cd1d5c86-5a6b-4a20-9605-b7bcc4d4d72a",
      "DefaultValue": {
        "Type": "Float",
        "Value": "3"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "10000",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "PointStrength",
      "MetaInstanceID": "58e1a000-5c58-4165-93e4-75d91eb9ea17",
      "DefaultValue": {
        "Type": "Float",
        "Value": "5"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "10000",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "ColorSaturation",
      "MetaInstanceID": "81c42f73-c275-490e-9bf9-724db8be689b",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Texture",
      "MetaInstanceID": "ae1cf7d5-e1c6-48e7-8a8f-db23cbd8b2a6",
      "DefaultValue": {
        "Type": "Image",
        "Value": "Framefield.Core.Image"
      },
      "MetaID": "9848060d-fd84-45b0-b658-d0d531c61dab",
      "IsMultiInput": "False",
      "Relevance": "Required",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "TextureMix",
      "MetaInstanceID": "ba0c1819-bd00-44a0-a356-0e1ad4711536",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "TextureScale",
      "MetaInstanceID": "b7081423-040f-477d-91b2-b7c927c6f137",
      "DefaultValue": {
        "Type": "Float",
        "Value": "2"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "OutputQuantization",
      "MetaInstanceID": "019879de-8020-45f9-8d2d-71ca292f337e",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "LevelQuantization",
      "MetaInstanceID": "0e5562c0-ed64-434a-89a4-e8c241b62cd6",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "TextureSampleMode",
      "MetaInstanceID": "842c7c32-796f-4ba1-a748-b0c0d62c627d",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": [
        {
          "Name": "UV",
          "Value": "0"
        },
        {
          "Name": "CellCenter",
          "Value": "1"
        }
      ]
    }
  ],
  "Outputs": [
    {
      "Name": "Image",
      "MetaInstanceID": "6ea0eed8-b0e7-4691-8cc1-a9465dbbb8ad",
      "MetaID": "9848060d-fd84-45b0-b658-d0d531c61dab"
    }
  ],
  "OperatorParts": [
    {
      "MetaInstanceID": "10441b0b-3020-4d6f-ac06-b316ebca514d",
      "MetaID": "2c4855c2-26ae-461c-9879-815041d8aada",
      "Name": "SH_GlowCellsFunc",
      "Version": "42f29c47-00bd-4694-8270-f7e7c2460364",
      "Type": "Float",
      "IsMultiInput": "True",
      "Script": [
        "//>>> _using",
        "using System;",
        "using System.Collections.Generic;",
        "using System.Linq;",
        "using System.Text;",
        "using SharpDX;",
        "using SharpDX.Direct3D11;",
        "using SharpDX.Windows;",
        "//<<< _using",
        "",
        "namespace Framefield.Core.ID2c4855c2_26ae_461c_9879_815041d8aada",
        "{",
        "    public class Class_SH_GlowCells : FXImageFunction, Framefield.Core.OperatorPartTraits.ITimeAccessor",
        "    {",
        "        //>>> _inputids",
        "        private enum InputId",
        "        {",
        "            Code = 0,",
        "            PositionX = 1,",
        "            PositionY = 2,",
        "            MaxIterations = 3,",
        "            Bias = 4,",
        "            Zoom = 5,",
        "            Exponent = 6,",
        "            Animate = 7,",
        "            PointStrength = 8,",
        "            Density = 9,",
        "            CellShape = 10,",
        "            Texture = 11,",
        "            ColorSaturation = 12,",
        "            TextureMix = 13,",
        "            TextureScale = 14,",
        "            OutputQuantization = 15,",
        "            LevelQuantization = 16,",
        "            TextureSampleMode = 17,",
        "            InitialCellSize = 18",
        "        }",
        "        //<<< _inputids",
        "",
        "        public override OperatorPartContext Eval(OperatorPartContext context, List<OperatorPart> inputs, int outputIdx) {",
        "            //>>> _params",
        "            var Code = inputs[(int)InputId.Code].Eval(context).Text;",
        "            var PositionX = inputs[(int)InputId.PositionX].Eval(context).Value;",
        "            var PositionY = inputs[(int)InputId.PositionY].Eval(context).Value;",
        "            var Position = new Vector2(PositionX, PositionY);",
        "            var MaxIterations = inputs[(int)InputId.MaxIterations].Eval(context).Value;",
        "            var Bias = inputs[(int)InputId.Bias].Eval(context).Value;",
        "            var Zoom = inputs[(int)InputId.Zoom].Eval(context).Value;",
        "            var Exponent = inputs[(int)InputId.Exponent].Eval(context).Value;",
        "            var Animate = inputs[(int)InputId.Animate].Eval(context).Value;",
        "            var PointStrength = inputs[(int)InputId.PointStrength].Eval(context).Value;",
        "            var Density = inputs[(int)InputId.Density].Eval(context).Value;",
        "            var CellShape = inputs[(int)InputId.CellShape].Eval(context).Value;",
        "            var Texture = inputs[(int)InputId.Texture].Eval(context).Image; // Needs to be checked for null!",
        "            var ColorSaturation = inputs[(int)InputId.ColorSaturation].Eval(context).Value;",
        "            var TextureMix = inputs[(int)InputId.TextureMix].Eval(context).Value;",
        "            var TextureScale = inputs[(int)InputId.TextureScale].Eval(context).Value;",
        "            var OutputQuantization = inputs[(int)InputId.OutputQuantization].Eval(context).Value;",
        "            var LevelQuantization = inputs[(int)InputId.LevelQuantization].Eval(context).Value;",
        "            var TextureSampleMode = (int) inputs[(int)InputId.TextureSampleMode].Eval(context).Value;",
        "            var InitialCellSize = inputs[(int)InputId.InitialCellSize].Eval(context).Value;",
        "            //<<< _params",
        "            ",
        "            return PrepareAndEvalOnChange(context, () => {",
        "                ClearRenderTarget(context, new SharpDX.Color4(0, 0, 0, 0));",
        "",
        "                //>>> _setup",
        "                using (var TextureView = new ShaderResourceView(context.D3DDevice, Texture))",
        "                {",
        "                    _effect.GetVariableByName(\"RenderTargetSize\").AsVector().Set(new Vector2(_usedViewport.Width, _usedViewport.Height));",
        "                    _effect.GetVariableByName(\"Position\").AsVector().Set(new Vector2(PositionX, PositionY));",
        "                    _effect.GetVariableByName(\"MaxIterations\").AsScalar().Set(MaxIterations);",
        "                    _effect.GetVariableByName(\"Bias\").AsScalar().Set(Bias);",
        "                    _effect.GetVariableByName(\"Zoom\").AsScalar().Set(Zoom);",
        "                    _effect.GetVariableByName(\"Exponent\").AsScalar().Set(Exponent);",
        "                    _effect.GetVariableByName(\"Animate\").AsScalar().Set(Animate);",
        "                    _effect.GetVariableByName(\"PointStrength\").AsScalar().Set(PointStrength);",
        "                    _effect.GetVariableByName(\"Density\").AsScalar().Set(Density);",
        "                    _effect.GetVariableByName(\"CellShape\").AsScalar().Set(CellShape);",
        "                    _effect.GetVariableByName(\"Texture\").AsShaderResource().SetResource(TextureView);",
        "                    _effect.GetVariableByName(\"ColorSaturation\").AsScalar().Set(ColorSaturation);",
        "                    _effect.GetVariableByName(\"TextureMix\").AsScalar().Set(TextureMix);",
        "                    _effect.GetVariableByName(\"TextureScale\").AsScalar().Set(TextureScale);",
        "                    _effect.GetVariableByName(\"OutputQuantization\").AsScalar().Set(OutputQuantization);",
        "                    _effect.GetVariableByName(\"LevelQuantization\").AsScalar().Set(LevelQuantization);",
        "                    _effect.GetVariableByName(\"TextureSampleMode\").AsScalar().Set(TextureSampleMode);",
        "                    _effect.GetVariableByName(\"InitialCellSize\").AsScalar().Set(InitialCellSize);",
        "                //<<< _setup",
        "",
        "                Render(context);",
        "",
        "                //>>> _cleanup",
        "                }",
        "                //<<< _cleanup",
        "            });",
        "        }",
        "",
        "    }",
        "}",
        "",
        "",
        "",
        ""
      ],
      "AdditionalAssemblies": [
        "LibToollTenfour.dll"
      ]
    }
  ],
  "Operators": [],
  "Connections": [
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "10441b0b-3020-4d6f-ac06-b316ebca514d",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "6ea0eed8-b0e7-4691-8cc1-a9465dbbb8ad"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "a8133a0b-f21b-419d-9ebe-18326ee53f1f",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "10441b0b-3020-4d6f-ac06-b316ebca514d"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "2be32b69-e786-4ffd-8022-bfd53808637d",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "10441b0b-3020-4d6f-ac06-b316ebca514d"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "765a38c0-c0c5-4de5-943c-86605ef7f3fe",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "10441b0b-3020-4d6f-ac06-b316ebca514d"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "b11b5f45-c4a1-4822-83c3-a168aeedb5c4",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "10441b0b-3020-4d6f-ac06-b316ebca514d"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "5ea5269f-e8cb-45fe-8a0f-840e54ccd64a",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "10441b0b-3020-4d6f-ac06-b316ebca514d"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "4d0cbd71-d7f4-4947-b419-7e89de9f301f",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "10441b0b-3020-4d6f-ac06-b316ebca514d"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "cd1d5c86-5a6b-4a20-9605-b7bcc4d4d72a",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "10441b0b-3020-4d6f-ac06-b316ebca514d"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "8887bc4e-b10e-4859-b774-9b4fa4f7868e",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "10441b0b-3020-4d6f-ac06-b316ebca514d"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "58e1a000-5c58-4165-93e4-75d91eb9ea17",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "10441b0b-3020-4d6f-ac06-b316ebca514d"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "a2ada2cf-5564-48c1-88a9-883fa4b91d5b",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "10441b0b-3020-4d6f-ac06-b316ebca514d"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "0dc1fcb6-9cc9-4c09-ac50-e39321f81df5",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "10441b0b-3020-4d6f-ac06-b316ebca514d"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "ae1cf7d5-e1c6-48e7-8a8f-db23cbd8b2a6",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "10441b0b-3020-4d6f-ac06-b316ebca514d"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "81c42f73-c275-490e-9bf9-724db8be689b",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "10441b0b-3020-4d6f-ac06-b316ebca514d"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "ba0c1819-bd00-44a0-a356-0e1ad4711536",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "10441b0b-3020-4d6f-ac06-b316ebca514d"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "b7081423-040f-477d-91b2-b7c927c6f137",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "10441b0b-3020-4d6f-ac06-b316ebca514d"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "019879de-8020-45f9-8d2d-71ca292f337e",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "10441b0b-3020-4d6f-ac06-b316ebca514d"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "0e5562c0-ed64-434a-89a4-e8c241b62cd6",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "10441b0b-3020-4d6f-ac06-b316ebca514d"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "842c7c32-796f-4ba1-a748-b0c0d62c627d",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "10441b0b-3020-4d6f-ac06-b316ebca514d"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "415d6f6e-9282-4135-b9c4-6646fcb42047",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "10441b0b-3020-4d6f-ac06-b316ebca514d"
    }
  ]
}