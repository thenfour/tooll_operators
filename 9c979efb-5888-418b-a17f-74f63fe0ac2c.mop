{
  "Name": "DitherViaBayerAndLUT",
  "_id": "9c979efb-5888-418b-a17f-74f63fe0ac2c",
  "Namespace": "user.tenfour",
  "Description": "fork from ditherviaimage",
  "Inputs": [
    {
      "Name": "Code",
      "MetaInstanceID": "d7dfe754-78b8-4604-b918-26017dfd23a9",
      "DefaultValue": {
        "Type": "Text",
        "Value": [
          "//>>> _common parameters\r",
          "float4x4 objectToWorldMatrix;",
          "float4x4 worldToCameraMatrix;",
          "float4x4 projMatrix;",
          "Texture2D txDiffuse;",
          "float2 RenderTargetSize;",
          "//<<< _common parameters\r",
          "\r",
          "//>>> _parameters\r",
          "Texture2D Image;",
          "float DitherStrengthMul;",
          "float PaletteSize;",
          "float2 Pixellate;",
          "Texture2D LUT;",
          "float Bayer;",
          "float3 Source;",
          "//<<< _parameters\r",
          "\r",
          " \r",
          "SamplerState samPoint\r",
          "{\r",
          "    Filter = MIN_MAG_MIP_LINEAR;\r",
          "    AddressU = Wrap;\r",
          "    AddressV = Wrap;\r",
          "};\r",
          "\r",
          "struct VS_IN\r",
          "{\r",
          "    float4 pos : POSITION;\r",
          "    float2 texCoord : TEXCOORD;\r",
          "};\r",
          "\r",
          "struct PS_IN\r",
          "{\r",
          "    float4 pos : SV_POSITION;\r",
          "    float2 texCoord: TEXCOORD0;\r",
          "};\r",
          "\r",
          "//>>> _GS\r",
          "",
          "//<<< _GS\r",
          "\r",
          "//>>> _VS \r",
          "PS_IN VS( VS_IN input )",
          "{",
          "    PS_IN output = (PS_IN)0;",
          "",
          "    output.pos = mul(input.pos, worldToCameraMatrix);",
          "    output.pos = mul(output.pos, projMatrix);",
          "    output.texCoord = input.texCoord;",
          "",
          "    return output;",
          "}",
          "//<<< _VS\r",
          "\r",
          "//>>> PS\r",
          "\r",
          "float bayer2(in float2 fragCoord/*, float2 R*/) {\r",
          "    static const int dim = 4;\r",
          "    static const float kern[dim*dim] = {\r",
          "        0.     ,0.5    ,0.125  ,0.625,\r",
          " 0.75   ,0.25   ,0.875  ,0.375,\r",
          " 0.1875 ,0.6875 ,0.0625 ,0.5625,\r",
          " 0.9375 ,0.4375 ,0.8125 ,0.3125 };\r",
          "    \r",
          "    uint2 idx = uint2(fragCoord)% dim;\r",
          "\r",
          "    float dith = kern[idx.x + (idx.y * dim)]-.5;\r",
          "    //float b = tobw(a);\r",
          "    //o = vec4(b);\r",
          "    return dith*2;\r",
          "}\r",
          "\r",
          "float bayer4(in float2 fragCoord/*, float2 R*/) {\r",
          "    static const int dim = 8;\r",
          "    static const float kern[dim*dim] = {\r",
          "0.       ,0.5      ,0.125    ,0.625    ,0.03125  ,0.53125  ,0.15625  ,0.65625 ,\r",
          " 0.75     ,0.25     ,0.875    ,0.375    ,0.78125  ,0.28125  ,0.90625  ,0.40625 ,\r",
          " 0.1875   ,0.6875   ,0.0625   ,0.5625   ,0.21875  ,0.71875  ,0.09375  ,0.59375 ,\r",
          " 0.9375   ,0.4375   ,0.8125   ,0.3125   ,0.96875  ,0.46875  ,0.84375  ,0.34375 ,\r",
          " 0.046875 ,0.546875 ,0.171875 ,0.671875 ,0.015625 ,0.515625 ,0.140625 ,0.640625,\r",
          " 0.796875 ,0.296875 ,0.921875 ,0.421875 ,0.765625 ,0.265625 ,0.890625 ,0.390625,\r",
          " 0.234375 ,0.734375 ,0.109375 ,0.609375 ,0.203125 ,0.703125 ,0.078125 ,0.578125,\r",
          " 0.984375 ,0.484375 ,0.859375 ,0.359375 ,0.953125 ,0.453125 ,0.828125 ,0.328125};\r",
          "    uint2 idx = uint2(fragCoord)% dim;\r",
          "    //float    a = tex(fragCoord/R, R);\r",
          "    float dith = kern[idx.x + (idx.y * dim)]-.5;\r",
          "    \r",
          "    //col += dith * DitherStrength01;\r",
          "    //float b = tobw(a);\r",
          "    //o = vec4(b);\r",
          "    \r",
          "    return dith*2;\r",
          "}\r",
          "\r",
          "\r",
          "\r",
          "// 3D LUT texture format:\r",
          "// R = X coord within swatch\r",
          "// G = Y coord (neg)\r",
          "// B = X coord swatches\r",
          "float3 applyColorLUT(Texture2D lut, float3 color) {\r",
          "    float lutWidth, lutRes;\r",
          "    lut.GetDimensions(lutWidth, lutRes);\r",
          "    float2 lutSize = float2(lutWidth, lutRes);\r",
          "\tfloat lutB = floor(color.b * lutRes);// blue swatch index\r",
          "\tlutB = clamp(lutB, 0., lutRes - 1.);// clamp to array bounds\r",
          "\tlutB = lutB / lutRes; // floor'd X position of blue swatch\r",
          "\tfloat lutR = color.r / lutRes;// position within R swatch\r",
          "\tfloat swatchMaxWidth = 1. / (lutRes + 1.);// a 1.0 value would bleed into the next swatch. clamping utilizes the full mapping range but prevents the overflow.\r",
          "\tlutR = clamp(lutR, 0., swatchMaxWidth);\r",
          "\treturn lut.Load(int3(lutSize * float2(lutR + lutB, 1.-color.g), 0)).rgb;\r",
          "}\r",
          "\r",
          "\r",
          "float4 PS( PS_IN input ) : SV_Target\r",
          "{\r",
          "    // using tex.Sample() with any filtering produces artifacts for pixellate sizes like 5.\r",
          "    // so using .Load(). but then i need to correct the coordinates to account for different resolutions.\r",
          "\r",
          "\tfloat imgW, imgH;\r",
          "    Image.GetDimensions(imgW, imgH);\r",
          "    float2 imageSize = float2(imgW, imgH);\r",
          "    float2 coordCorrection =  imageSize / RenderTargetSize;\r",
          "    float2 samplePx = input.pos.xy * coordCorrection;\r",
          "\r",
          "    float2 ditherPos = input.pos.xy;\r",
          "    \r",
          "    if (Pixellate.x > 0 && Pixellate.y > 0) {\r",
          "        float2 samplePixellate = Pixellate * coordCorrection;\r",
          "        samplePx = floor(samplePx / samplePixellate) * samplePixellate;\r",
          "        ditherPos /= Pixellate;\r",
          "    }\r",
          "\r",
          "    float4 ret = Image.Load(uint3(samplePx,0));\r",
          "    ret.rgb += Source.x;\r",
          "    ret.rgb *= Source.y;\r",
          "    ret.rgb = pow(max(0,ret.rgb), Source.z);\r",
          "    \r",
          "    //float dith = bayer4(ditherPos);\r",
          "    float dith;\r",
          "    if (Bayer == 0) {\r",
          "        dith = bayer2(ditherPos);\r",
          "    } else {\r",
          "        dith = bayer4(ditherPos);\r",
          "    }\r",
          "    dith /= PaletteSize;\r",
          "    dith *= DitherStrengthMul;\r",
          "    \r",
          "    ret.rgb += dith;\r",
          "    \r",
          "    // reduce values\r",
          "    ret = clamp(ret, 0, 1);\r",
          "    ret.rgb = applyColorLUT(LUT, ret.rgb);\r",
          "    ret = clamp(ret, 0, 1);\r",
          "    return ret;\r",
          "}\r",
          "//<<< PS\r",
          "\r",
          "//>>> _technique\r",
          "technique10 Render",
          "{",
          "    pass P0",
          "    {",
          "        SetGeometryShader( 0 );",
          "        SetVertexShader( CompileShader( vs_4_0, VS() ) );",
          "        SetPixelShader( CompileShader( ps_4_0, PS() ) );",
          "    }",
          "}",
          "//<<< _technique\r",
          ""
        ]
      },
      "MetaID": "c522a66e-3260-4692-b3e3-79fd0361fa3d",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Image",
      "MetaInstanceID": "3af583b1-6199-4384-98f2-6a21478e5b34",
      "DefaultValue": {
        "Type": "Image",
        "Value": "Framefield.Core.Image"
      },
      "MetaID": "9848060d-fd84-45b0-b658-d0d531c61dab",
      "IsMultiInput": "False",
      "Relevance": "Required",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "LUT",
      "MetaInstanceID": "ef00fb39-cd27-41d5-afee-a21722ec4f51",
      "DefaultValue": {
        "Type": "Image",
        "Value": "Framefield.Core.Image"
      },
      "MetaID": "9848060d-fd84-45b0-b658-d0d531c61dab",
      "IsMultiInput": "False",
      "Relevance": "Required",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "DitherStrengthMul",
      "MetaInstanceID": "e44c74bf-7417-45c5-b3d7-211073c18759",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "10000",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "PaletteSize",
      "MetaInstanceID": "2753b81d-7e88-40ab-b22b-42e569d93e37",
      "DefaultValue": {
        "Type": "Float",
        "Value": "16"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "2",
      "Max": "10000",
      "Scale": "1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Pixellate.X",
      "MetaInstanceID": "85d227ea-07f1-4920-a167-6f2b83f7a5ab",
      "DefaultValue": {
        "Type": "Float",
        "Value": "2"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Pixellate.Y",
      "MetaInstanceID": "e7ce3948-c67a-4628-8e32-d2aad26a5cd6",
      "DefaultValue": {
        "Type": "Float",
        "Value": "2"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Bayer",
      "MetaInstanceID": "2af22cd0-c4c6-421d-b9c8-514044243650",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": [
        {
          "Name": "4x4",
          "Value": "0"
        },
        {
          "Name": "8x8",
          "Value": "1"
        }
      ]
    },
    {
      "Name": "Source.X",
      "MetaInstanceID": "46eb3e74-7a5b-48c1-8bdc-9d3acb4d28ef",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-999",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Source.Mul",
      "MetaInstanceID": "9383c381-7706-413e-ac55-32bdf95cdca1",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Source.Pow",
      "MetaInstanceID": "251cbd4d-eb27-4946-811f-cb434cc925c9",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    }
  ],
  "Outputs": [
    {
      "Name": "Image",
      "MetaInstanceID": "03578761-edf9-4ba0-b19c-d2613e3abd64",
      "MetaID": "9848060d-fd84-45b0-b658-d0d531c61dab"
    }
  ],
  "OperatorParts": [
    {
      "MetaInstanceID": "e6678ab2-2573-42a6-9b4b-101c17af159a",
      "MetaID": "03e239a2-52b7-489c-a884-03282268e8e6",
      "Name": "DitherViaBayerAndLUTFunc",
      "Version": "4faf8c24-f7e4-4a19-a0a3-468e95ef4a32",
      "Type": "Float",
      "IsMultiInput": "True",
      "Script": [
        "//>>> _using",
        "using System;",
        "using System.Collections.Generic;",
        "using System.Linq;",
        "using System.Text;",
        "using SharpDX;",
        "using SharpDX.Direct3D11;",
        "using SharpDX.Windows;",
        "//<<< _using",
        "",
        "namespace Framefield.Core.ID03e239a2_52b7_489c_a884_03282268e8e6",
        "{",
        "    public class Class_DitherViaBayerAndLUT : FXImageFunction",
        "    {",
        "        //>>> _inputids",
        "        private enum InputId",
        "        {",
        "            Code = 0,",
        "            Image = 1,",
        "            DitherStrengthMul = 2,",
        "            PaletteSize = 3,",
        "            PixellateX = 4,",
        "            PixellateY = 5,",
        "            LUT = 6,",
        "            Bayer = 7,",
        "            SourceX = 8,",
        "            SourceMul = 9,",
        "            SourcePow = 10",
        "        }",
        "        //<<< _inputids",
        "        public override OperatorPartContext Eval(OperatorPartContext context, List<OperatorPart> inputs, int outputIdx) {",
        "",
        "            //>>> _params",
        "            var Code = inputs[(int)InputId.Code].Eval(context).Text;",
        "            var Image = inputs[(int)InputId.Image].Eval(context).Image; // Needs to be checked for null!",
        "            var DitherStrengthMul = inputs[(int)InputId.DitherStrengthMul].Eval(context).Value;",
        "            var PaletteSize = inputs[(int)InputId.PaletteSize].Eval(context).Value;",
        "            var PixellateX = inputs[(int)InputId.PixellateX].Eval(context).Value;",
        "            var PixellateY = inputs[(int)InputId.PixellateY].Eval(context).Value;",
        "            var Pixellate = new Vector2(PixellateX, PixellateY);",
        "            var LUT = inputs[(int)InputId.LUT].Eval(context).Image; // Needs to be checked for null!",
        "            var Bayer = (int) inputs[(int)InputId.Bayer].Eval(context).Value;",
        "            var SourceX = inputs[(int)InputId.SourceX].Eval(context).Value;",
        "            var SourceMul = inputs[(int)InputId.SourceMul].Eval(context).Value;",
        "            var SourcePow = inputs[(int)InputId.SourcePow].Eval(context).Value;",
        "            var Source = new Vector3(SourceX, SourceMul, SourcePow);",
        "            //<<< _params",
        "",
        "            return PrepareAndEvalOnChange(context, () => {",
        "                ClearRenderTarget(context, new SharpDX.Color4(0, 0, 0, 0));",
        "",
        "                //>>> _setup",
        "                using (var ImageView = new ShaderResourceView(context.D3DDevice, Image))",
        "                using (var LUTView = new ShaderResourceView(context.D3DDevice, LUT))",
        "                {",
        "                    _effect.GetVariableByName(\"RenderTargetSize\").AsVector().Set(new Vector2(_usedViewport.Width, _usedViewport.Height));",
        "                    _effect.GetVariableByName(\"Image\").AsShaderResource().SetResource(ImageView);",
        "                    _effect.GetVariableByName(\"DitherStrengthMul\").AsScalar().Set(DitherStrengthMul);",
        "                    _effect.GetVariableByName(\"PaletteSize\").AsScalar().Set(PaletteSize);",
        "                    _effect.GetVariableByName(\"Pixellate\").AsVector().Set(new Vector2(PixellateX, PixellateY));",
        "                    _effect.GetVariableByName(\"LUT\").AsShaderResource().SetResource(LUTView);",
        "                    _effect.GetVariableByName(\"Bayer\").AsScalar().Set(Bayer);",
        "                    _effect.GetVariableByName(\"Source\").AsVector().Set(new Vector3(SourceX, SourceMul, SourcePow));",
        "                //<<< _setup",
        "",
        "                Render(context);",
        "",
        "                //>>> _cleanup",
        "                }",
        "                //<<< _cleanup",
        "            });",
        "        }",
        "",
        "    }",
        "}",
        "",
        ""
      ],
      "AdditionalAssemblies": []
    }
  ],
  "Operators": [],
  "Connections": [
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "e6678ab2-2573-42a6-9b4b-101c17af159a",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "03578761-edf9-4ba0-b19c-d2613e3abd64"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "d7dfe754-78b8-4604-b918-26017dfd23a9",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e6678ab2-2573-42a6-9b4b-101c17af159a"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "3af583b1-6199-4384-98f2-6a21478e5b34",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e6678ab2-2573-42a6-9b4b-101c17af159a"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "e44c74bf-7417-45c5-b3d7-211073c18759",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e6678ab2-2573-42a6-9b4b-101c17af159a"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "2753b81d-7e88-40ab-b22b-42e569d93e37",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e6678ab2-2573-42a6-9b4b-101c17af159a"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "85d227ea-07f1-4920-a167-6f2b83f7a5ab",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e6678ab2-2573-42a6-9b4b-101c17af159a"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "e7ce3948-c67a-4628-8e32-d2aad26a5cd6",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e6678ab2-2573-42a6-9b4b-101c17af159a"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "ef00fb39-cd27-41d5-afee-a21722ec4f51",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e6678ab2-2573-42a6-9b4b-101c17af159a"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "2af22cd0-c4c6-421d-b9c8-514044243650",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e6678ab2-2573-42a6-9b4b-101c17af159a"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "46eb3e74-7a5b-48c1-8bdc-9d3acb4d28ef",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e6678ab2-2573-42a6-9b4b-101c17af159a"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "9383c381-7706-413e-ac55-32bdf95cdca1",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e6678ab2-2573-42a6-9b4b-101c17af159a"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "251cbd4d-eb27-4946-811f-cb434cc925c9",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e6678ab2-2573-42a6-9b4b-101c17af159a"
    }
  ]
}