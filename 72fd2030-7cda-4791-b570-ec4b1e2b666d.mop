{
  "Name": "SH_ValueNoise3D",
  "_id": "72fd2030-7cda-4791-b570-ec4b1e2b666d",
  "Namespace": "user.tenfour.shaders",
  "Description": "https://www.shadertoy.com/view/Xsl3Dl\r\n\r\nanimated gradient noise.\r\ngood idea to set resolution before.\r\n",
  "Inputs": [
    {
      "Name": "Code",
      "MetaInstanceID": "32d4e353-d3f9-4d56-86b0-74dd19c04cbf",
      "DefaultValue": {
        "Type": "Text",
        "Value": [
          "//>>> _common parameters\r",
          "float4x4 objectToWorldMatrix;",
          "float4x4 worldToCameraMatrix;",
          "float4x4 projMatrix;",
          "Texture2D txDiffuse;",
          "float2 RenderTargetSize;",
          "//<<< _common parameters\r",
          "\r",
          "//>>> _parameters\r",
          "float Scale;",
          "float2 Output;",
          "float3 Position;",
          "float2 Resolution;",
          "float Value;",
          "//<<< _parameters\r",
          "\r",
          "static const float PI = atan(1.)*4.;\r",
          "static const float PI2 = atan(1.)*8.;\r",
          "\r",
          "\r",
          "//>>> _setup\r",
          "SamplerState samLinear",
          "{",
          "    Filter = MIN_MAG_MIP_LINEAR;",
          "    AddressU = Clamp;",
          "    AddressV = Clamp;",
          "};",
          "//<<< _setup\r",
          "SamplerState samLinearWrap\r",
          "{\r",
          "    Filter = MIN_MAG_MIP_POINT;\r",
          "    AddressU = Wrap;\r",
          "    AddressV = Wrap;\r",
          "};\r",
          "\r",
          "//>>> _declarations\r",
          "struct VS_IN",
          "{",
          "    float4 pos : POSITION;",
          "    float2 texCoord : TEXCOORD;",
          "};",
          "",
          "struct PS_IN",
          "{",
          "    float4 pos : SV_POSITION;",
          "    float2 texCoord: TEXCOORD0;",
          "};",
          "//<<< _declarations\r",
          "\r",
          "//>>> _GS\r",
          "",
          "//<<< _GS\r",
          "\r",
          "//>>> _VS \r",
          "PS_IN VS( VS_IN input )",
          "{",
          "    PS_IN output = (PS_IN)0;",
          "",
          "    output.pos = mul(input.pos, worldToCameraMatrix);",
          "    output.pos = mul(output.pos, projMatrix);",
          "    output.texCoord = input.texCoord;",
          "",
          "    return output;",
          "}",
          "//<<< _VS\r",
          "\r",
          "//>>> PS\r",
          "// https://www.shadertoy.com/view/Xsl3Dl\r",
          "\r",
          "#define vec3 float3\r",
          "#define fract frac\r",
          "#define mix lerp\r",
          "\r",
          "float hash(vec3 p)  // replace this by something better\r",
          "{\r",
          "    p  = fract( p*0.3183099+.1 );\r",
          "\tp *= 17.0;\r",
          "    return fract( p.x*p.y*p.z*(p.x+p.y+p.z) );\r",
          "}\r",
          "\r",
          "float noise( in vec3 x )\r",
          "{\r",
          "    vec3 i = floor(x);\r",
          "    vec3 f = fract(x);\r",
          "    f = f*f*(3.0-2.0*f);\r",
          "\t\r",
          "    return mix(mix(mix( hash(i+vec3(0,0,0)), \r",
          "                        hash(i+vec3(1,0,0)),f.x),\r",
          "                   mix( hash(i+vec3(0,1,0)), \r",
          "                        hash(i+vec3(1,1,0)),f.x),f.y),\r",
          "               mix(mix( hash(i+vec3(0,0,1)), \r",
          "                        hash(i+vec3(1,0,1)),f.x),\r",
          "                   mix( hash(i+vec3(0,1,1)), \r",
          "                        hash(i+vec3(1,1,1)),f.x),f.y),f.z);\r",
          "}\r",
          "\r",
          "/* const matrices for 3d rotation */\r",
          "static const float3x3 rot1 = float3x3(-0.37, 0.36, 0.85,-0.14,-0.93, 0.34,0.92, 0.01,0.4);\r",
          "static const float3x3 rot2 = float3x3(-0.55,-0.39, 0.74, 0.33,-0.91,-0.24,0.77, 0.12,0.63);\r",
          "static const float3x3 rot3 = float3x3(-0.71, 0.52,-0.47,-0.08,-0.72,-0.68,-0.7,-0.45,0.56);\r",
          "\r",
          "/* directional artifacts can be reduced by rotating each octave */\r",
          "float fbm(float3 m) {\r",
          "    return   0.5333333*noise(mul(m,rot1))\r",
          "\t\t\t+0.2666667*noise(mul(2.0*m,rot2))\r",
          "\t\t\t+0.1333333*noise(mul(4.0*m,rot3))\r",
          "\t\t\t+0.0666667*noise(8.0*m);\r",
          "}\r",
          "\r",
          "float4 PS( PS_IN input ) : SV_Target\r",
          "{\r",
          "    float2 uv = input.texCoord;\r",
          "    float2 R = RenderTargetSize;\r",
          "    \r",
          "    uv *= Scale;\r",
          "    \r",
          "    float n = noise(float3(uv + Position.xy, Position.z));\r",
          "    n = lerp(Output.x, Output.y, n);\r",
          "    return float4(n,n,n,1);\r",
          "}\r",
          "\r",
          "//<<< PS\r",
          "\r",
          "//>>> _technique\r",
          "technique10 Render",
          "{",
          "    pass P0",
          "    {",
          "        SetGeometryShader( 0 );",
          "        SetVertexShader( CompileShader( vs_4_0, VS() ) );",
          "        SetPixelShader( CompileShader( ps_4_0, PS() ) );",
          "    }",
          "}",
          "//<<< _technique\r",
          ""
        ]
      },
      "MetaID": "c522a66e-3260-4692-b3e3-79fd0361fa3d",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Scale",
      "MetaInstanceID": "d63dcf7d-c9f9-4fa5-b8b4-24aebe4c6b12",
      "DefaultValue": {
        "Type": "Float",
        "Value": "10"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Output.X",
      "MetaInstanceID": "65b9d02c-2861-4f7e-aaa5-44e791952cd6",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Output.Max",
      "MetaInstanceID": "ecbce3bb-d7d9-4a04-bf3c-e2dfd9dcfacc",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Position.X",
      "MetaInstanceID": "8f94b9ef-91db-4041-a279-9e3e702c55d0",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Position.Y",
      "MetaInstanceID": "bd487ce5-bd2b-41b4-900d-f614fc7e9644",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Position.Z",
      "MetaInstanceID": "57cec49c-7269-4d9e-af7e-2cf0a1f53075",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Resolution.X",
      "MetaInstanceID": "ed510706-32be-4d02-b8b2-75bc2acd8b09",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Resolution.Y",
      "MetaInstanceID": "73ddc664-33cd-4425-870d-438ebf5afcce",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Value",
      "MetaInstanceID": "027d43d5-1ae0-4700-92c9-dfce13c019f3",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    }
  ],
  "Outputs": [
    {
      "Name": "Image",
      "MetaInstanceID": "27b99328-e802-4f60-b75c-c2fb04ed2f61",
      "MetaID": "9848060d-fd84-45b0-b658-d0d531c61dab"
    }
  ],
  "OperatorParts": [
    {
      "MetaInstanceID": "38752247-e7b6-4bc9-9c85-88c426981b20",
      "MetaID": "590c29e2-5085-4416-9415-934a3b1aa1a1",
      "Name": "SH_ValueNoise3DFunc",
      "Version": "4e9907d4-a747-4f32-836c-c6a7699ca214",
      "Type": "Float",
      "IsMultiInput": "True",
      "Script": [
        "//>>> _using",
        "using System;",
        "using System.Collections.Generic;",
        "using System.Linq;",
        "using System.Text;",
        "using SharpDX;",
        "using SharpDX.Direct3D11;",
        "using SharpDX.Windows;",
        "//<<< _using",
        "",
        "namespace Framefield.Core.ID590c29e2_5085_4416_9415_934a3b1aa1a1",
        "{",
        "    public class Class_SH_ValueNoise3D : FXImageFunction, Framefield.Core.OperatorPartTraits.ITimeAccessor",
        "    {",
        "        //>>> _inputids",
        "        private enum InputId",
        "        {",
        "            Code = 0,",
        "            Scale = 1,",
        "            OutputX = 2,",
        "            OutputMax = 3,",
        "            PositionX = 4,",
        "            PositionY = 5,",
        "            PositionZ = 6,",
        "            ResolutionX = 7,",
        "            ResolutionY = 8,",
        "            Value = 9",
        "        }",
        "        //<<< _inputids",
        "",
        "        public override OperatorPartContext Eval(OperatorPartContext context, List<OperatorPart> inputs, int outputIdx) {",
        "            //>>> _params",
        "            var Code = inputs[(int)InputId.Code].Eval(context).Text;",
        "            var Scale = inputs[(int)InputId.Scale].Eval(context).Value;",
        "            var OutputX = inputs[(int)InputId.OutputX].Eval(context).Value;",
        "            var OutputMax = inputs[(int)InputId.OutputMax].Eval(context).Value;",
        "            var Output = new Vector2(OutputX, OutputMax);",
        "            var PositionX = inputs[(int)InputId.PositionX].Eval(context).Value;",
        "            var PositionY = inputs[(int)InputId.PositionY].Eval(context).Value;",
        "            var PositionZ = inputs[(int)InputId.PositionZ].Eval(context).Value;",
        "            var Position = new Vector3(PositionX, PositionY, PositionZ);",
        "            var ResolutionX = inputs[(int)InputId.ResolutionX].Eval(context).Value;",
        "            var ResolutionY = inputs[(int)InputId.ResolutionY].Eval(context).Value;",
        "            var Resolution = new Vector2(ResolutionX, ResolutionY);",
        "            var Value = inputs[(int)InputId.Value].Eval(context).Value;",
        "            //<<< _params",
        "            ",
        "            if (ResolutionX > 0 && ResolutionY > 0) {",
        "                context.Viewport = new ViewportF( 0,0, ResolutionX, ResolutionY);",
        "            }",
        "            ",
        "            return PrepareAndEvalOnChange(context, () => {",
        "                ClearRenderTarget(context, new SharpDX.Color4(0, 0, 0, 0));",
        "",
        "                //>>> _setup",
        "                {",
        "                    _effect.GetVariableByName(\"RenderTargetSize\").AsVector().Set(new Vector2(_usedViewport.Width, _usedViewport.Height));",
        "                    _effect.GetVariableByName(\"Scale\").AsScalar().Set(Scale);",
        "                    _effect.GetVariableByName(\"Output\").AsVector().Set(new Vector2(OutputX, OutputMax));",
        "                    _effect.GetVariableByName(\"Position\").AsVector().Set(new Vector3(PositionX, PositionY, PositionZ));",
        "                    _effect.GetVariableByName(\"Resolution\").AsVector().Set(new Vector2(ResolutionX, ResolutionY));",
        "                    _effect.GetVariableByName(\"Value\").AsScalar().Set(Value);",
        "                //<<< _setup",
        "",
        "                Render(context);",
        "",
        "                //>>> _cleanup",
        "                }",
        "                //<<< _cleanup",
        "            });",
        "        }",
        "",
        "    }",
        "}",
        "",
        "",
        "",
        ""
      ],
      "AdditionalAssemblies": [
        "LibToollTenfour.dll"
      ]
    }
  ],
  "Operators": [],
  "Connections": [
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "38752247-e7b6-4bc9-9c85-88c426981b20",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "27b99328-e802-4f60-b75c-c2fb04ed2f61"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "32d4e353-d3f9-4d56-86b0-74dd19c04cbf",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "38752247-e7b6-4bc9-9c85-88c426981b20"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "d63dcf7d-c9f9-4fa5-b8b4-24aebe4c6b12",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "38752247-e7b6-4bc9-9c85-88c426981b20"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "65b9d02c-2861-4f7e-aaa5-44e791952cd6",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "38752247-e7b6-4bc9-9c85-88c426981b20"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "ecbce3bb-d7d9-4a04-bf3c-e2dfd9dcfacc",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "38752247-e7b6-4bc9-9c85-88c426981b20"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "8f94b9ef-91db-4041-a279-9e3e702c55d0",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "38752247-e7b6-4bc9-9c85-88c426981b20"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "bd487ce5-bd2b-41b4-900d-f614fc7e9644",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "38752247-e7b6-4bc9-9c85-88c426981b20"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "57cec49c-7269-4d9e-af7e-2cf0a1f53075",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "38752247-e7b6-4bc9-9c85-88c426981b20"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "ed510706-32be-4d02-b8b2-75bc2acd8b09",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "38752247-e7b6-4bc9-9c85-88c426981b20"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "73ddc664-33cd-4425-870d-438ebf5afcce",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "38752247-e7b6-4bc9-9c85-88c426981b20"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "027d43d5-1ae0-4700-92c9-dfce13c019f3",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "38752247-e7b6-4bc9-9c85-88c426981b20"
    }
  ]
}