{
  "Name": "Levels",
  "_id": "be2467b6-d42f-451a-a7bc-b31c7e6248e5",
  "Namespace": "user.tenfour.shaders",
  "Description": "\r\n",
  "Inputs": [
    {
      "Name": "Code",
      "MetaInstanceID": "717e8cca-8116-4361-99ab-8ebc705a5ab3",
      "DefaultValue": {
        "Type": "Text",
        "Value": [
          "//>>> _common parameters\r",
          "float4x4 objectToWorldMatrix;",
          "float4x4 worldToCameraMatrix;",
          "float4x4 projMatrix;",
          "Texture2D txDiffuse;",
          "float2 RenderTargetSize;",
          "//<<< _common parameters\r",
          "\r",
          "//>>> _parameters\r",
          "Texture2D Image;",
          "float2 InputRange;",
          "float Saturation;",
          "//<<< _parameters\r",
          "\r",
          "const float Iterations;\r",
          "\r",
          "const float iBPM;\r",
          "const float iProgram;\r",
          "const float iTime;\r",
          "const float iBeat;\r",
          "static const float PI = atan(1.)*4.;\r",
          "static const float PI2 = atan(1.)*8.;\r",
          "\r",
          "#define iResolution RenderTargetSize\r",
          "#define vec2 float2\r",
          "#define vec3 float3\r",
          "#define vec4 float4\r",
          "#define mat2(a,b,c,d) float2x2(a,c,b,d)\r",
          "#define fract frac\r",
          "#define mod fmod\r",
          "#define mix lerp\r",
          "#define vec20 (float2(0,0))\r",
          "#define vec30 (float3(0,0,0))\r",
          "#define vec40 (float4(0,0,0,0))\r",
          "#define vec21 (float2(1,1))\r",
          "#define vec31 (float3(1,1,1))\r",
          "#define vec41 (float4(1,1,1,1))\r",
          "#define vec2x(x) (float2((x),(x)))\r",
          "#define vec3x(x) (float3((x),(x),(x)))\r",
          "#define vec4x(x) (float4((x),(x),(x),(x)))\r",
          "\r",
          "//>>> _setup\r",
          "SamplerState samLinear",
          "{",
          "    Filter = MIN_MAG_MIP_LINEAR;",
          "    AddressU = Clamp;",
          "    AddressV = Clamp;",
          "};",
          "//<<< _setup\r",
          "\r",
          "//>>> _declarations\r",
          "struct VS_IN",
          "{",
          "    float4 pos : POSITION;",
          "    float2 texCoord : TEXCOORD;",
          "};",
          "",
          "struct PS_IN",
          "{",
          "    float4 pos : SV_POSITION;",
          "    float2 texCoord: TEXCOORD0;",
          "};",
          "//<<< _declarations\r",
          "\r",
          "//>>> _GS\r",
          "",
          "//<<< _GS\r",
          "\r",
          "//>>> _VS \r",
          "PS_IN VS( VS_IN input )",
          "{",
          "    PS_IN output = (PS_IN)0;",
          "",
          "    output.pos = mul(input.pos, worldToCameraMatrix);",
          "    output.pos = mul(output.pos, projMatrix);",
          "    output.texCoord = input.texCoord;",
          "",
          "    return output;",
          "}",
          "//<<< _VS\r",
          "\r",
          "//>>> PS\r",
          "\r",
          "void mainImage( out vec4 o, vec2 C, vec2 texCoord)\r",
          "{\r",
          "    vec2 R = iResolution.xy;\r",
          "    o = Image.Sample(samLinear, texCoord);\r",
          "    o.rgb -= InputRange.x;\r",
          "    o.rgb /= InputRange.y - InputRange.x;\r",
          "    o.rgb = lerp((o.r+o.g+o.b)/3, o.rgb, Saturation);\r",
          "    o = clamp(o,0, 1);\r",
          "}\r",
          "\r",
          "\r",
          "\r",
          "\r",
          "",
          "//<<< PS\r",
          "\r",
          "\r",
          "float4 PS( PS_IN input ) : SV_Target\r",
          "{\r",
          "    float4 o;\r",
          "    mainImage(o, input.pos.xy, input.texCoord);\r",
          "    o = clamp(o,0.,1.);\r",
          "    o.a = 1.0;\r",
          "    return o;\r",
          "}\r",
          "\r",
          "\r",
          "//>>> _technique\r",
          "technique10 Render",
          "{",
          "    pass P0",
          "    {",
          "        SetGeometryShader( 0 );",
          "        SetVertexShader( CompileShader( vs_4_0, VS() ) );",
          "        SetPixelShader( CompileShader( ps_4_0, PS() ) );",
          "    }",
          "}",
          "//<<< _technique\r",
          ""
        ]
      },
      "MetaID": "c522a66e-3260-4692-b3e3-79fd0361fa3d",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Image",
      "MetaInstanceID": "511dd7bb-a219-4e19-8618-88dcc1c1bc06",
      "DefaultValue": {
        "Type": "Image",
        "Value": "Framefield.Core.Image"
      },
      "MetaID": "9848060d-fd84-45b0-b658-d0d531c61dab",
      "IsMultiInput": "False",
      "Relevance": "Relevant",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "InputRange.Min",
      "MetaInstanceID": "c90fd528-9cb5-499a-985e-b321079fe8e0",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.005",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "InputRange.Max",
      "MetaInstanceID": "ae8238e9-cbbb-437d-8589-212f8c23efa5",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.005",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Saturation",
      "MetaInstanceID": "4e6006c8-4544-4386-a0e4-04908d3af975",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.005",
      "ScaleType": "Linear",
      "EnumValues": []
    }
  ],
  "Outputs": [
    {
      "Name": "Image",
      "MetaInstanceID": "0a89000d-9bfc-4b01-8b1d-03b6708421fb",
      "MetaID": "9848060d-fd84-45b0-b658-d0d531c61dab"
    }
  ],
  "OperatorParts": [
    {
      "MetaInstanceID": "bcdd13a1-73e2-48b6-b2b6-5f31067f8414",
      "MetaID": "b5a340c1-7351-43da-a5cc-24177f3281fe",
      "Name": "LevelsFunc",
      "Version": "a9183a4b-8841-4341-a7ea-4fe22b8e079f",
      "Type": "Float",
      "IsMultiInput": "True",
      "Script": [
        "//>>> _using",
        "using System;",
        "using System.Collections.Generic;",
        "using System.Linq;",
        "using System.Text;",
        "using SharpDX;",
        "using SharpDX.Direct3D11;",
        "using SharpDX.Windows;",
        "//<<< _using",
        "",
        "namespace Framefield.Core.IDb5a340c1_7351_43da_a5cc_24177f3281fe",
        "{",
        "    public class Class_Levels : FXImageFunction, Framefield.Core.OperatorPartTraits.ITimeAccessor",
        "    {",
        "        //>>> _inputids",
        "        private enum InputId",
        "        {",
        "            Code = 0,",
        "            Image = 1,",
        "            InputRangeMin = 2,",
        "            InputRangeMax = 3,",
        "            Saturation = 4",
        "        }",
        "        //<<< _inputids",
        "",
        "        public override OperatorPartContext Eval(OperatorPartContext context, List<OperatorPart> inputs, int outputIdx) {",
        "            //>>> _params",
        "            var Code = inputs[(int)InputId.Code].Eval(context).Text;",
        "            var Image = inputs[(int)InputId.Image].Eval(context).Image; // Needs to be checked for null!",
        "            var InputRangeMin = inputs[(int)InputId.InputRangeMin].Eval(context).Value;",
        "            var InputRangeMax = inputs[(int)InputId.InputRangeMax].Eval(context).Value;",
        "            var InputRange = new Vector2(InputRangeMin, InputRangeMax);",
        "            var Saturation = inputs[(int)InputId.Saturation].Eval(context).Value;",
        "            //<<< _params",
        "            ",
        "            return PrepareAndEvalOnChange(context, () => {",
        "                ClearRenderTarget(context, new SharpDX.Color4(0, 0, 0, 0));",
        "",
        "                //>>> _setup",
        "                using (var ImageView = new ShaderResourceView(context.D3DDevice, Image))",
        "                {",
        "                    _effect.GetVariableByName(\"RenderTargetSize\").AsVector().Set(new Vector2(_usedViewport.Width, _usedViewport.Height));",
        "                    _effect.GetVariableByName(\"Image\").AsShaderResource().SetResource(ImageView);",
        "                    _effect.GetVariableByName(\"InputRange\").AsVector().Set(new Vector2(InputRangeMin, InputRangeMax));",
        "                    _effect.GetVariableByName(\"Saturation\").AsScalar().Set(Saturation);",
        "                //<<< _setup",
        "",
        "                _effect.GetVariableByName(\"iTime\").AsScalar().Set(context.Time);",
        "                Render(context);",
        "",
        "                //>>> _cleanup",
        "                }",
        "                //<<< _cleanup",
        "            });",
        "        }",
        "",
        "    }",
        "}",
        "",
        "",
        "",
        ""
      ],
      "AdditionalAssemblies": [
        "LibToollTenfour.dll"
      ]
    }
  ],
  "Operators": [],
  "Connections": [
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "bcdd13a1-73e2-48b6-b2b6-5f31067f8414",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "0a89000d-9bfc-4b01-8b1d-03b6708421fb"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "717e8cca-8116-4361-99ab-8ebc705a5ab3",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "bcdd13a1-73e2-48b6-b2b6-5f31067f8414"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "511dd7bb-a219-4e19-8618-88dcc1c1bc06",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "bcdd13a1-73e2-48b6-b2b6-5f31067f8414"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "c90fd528-9cb5-499a-985e-b321079fe8e0",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "bcdd13a1-73e2-48b6-b2b6-5f31067f8414"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "ae8238e9-cbbb-437d-8589-212f8c23efa5",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "bcdd13a1-73e2-48b6-b2b6-5f31067f8414"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "4e6006c8-4544-4386-a0e4-04908d3af975",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "bcdd13a1-73e2-48b6-b2b6-5f31067f8414"
    }
  ]
}