{
  "Name": "SH_StarGrid",
  "_id": "a4da18c1-6872-4c3b-b8a9-dce4fbd2ba4d",
  "Namespace": "user.tenfour.shaders",
  "Description": "",
  "Inputs": [
    {
      "Name": "Code",
      "MetaInstanceID": "0d3d686c-096b-4542-ad83-9fd8faadee4c",
      "DefaultValue": {
        "Type": "Text",
        "Value": [
          "//>>> _common parameters\r",
          "float4x4 objectToWorldMatrix;",
          "float4x4 worldToCameraMatrix;",
          "float4x4 projMatrix;",
          "Texture2D txDiffuse;",
          "float2 RenderTargetSize;",
          "//<<< _common parameters\r",
          "\r",
          "//>>> _parameters\r",
          "Texture2D NoiseTexture;",
          "float StarSize;",
          "float Randomness;",
          "float2 CellCount;",
          "//<<< _parameters\r",
          "\r",
          "const float iTime;\r",
          "static const float PI = atan(1.)*4.;\r",
          "static const float PI2 = atan(1.)*8.;\r",
          "\r",
          "//>>> _setup\r",
          "SamplerState samLinear",
          "{",
          "    Filter = MIN_MAG_MIP_LINEAR;",
          "    AddressU = Clamp;",
          "    AddressV = Clamp;",
          "};",
          "//<<< _setup\r",
          "\r",
          "//>>> _declarations\r",
          "struct VS_IN",
          "{",
          "    float4 pos : POSITION;",
          "    float2 texCoord : TEXCOORD;",
          "};",
          "",
          "struct PS_IN",
          "{",
          "    float4 pos : SV_POSITION;",
          "    float2 texCoord: TEXCOORD0;",
          "};",
          "//<<< _declarations\r",
          "\r",
          "//>>> _GS\r",
          "",
          "//<<< _GS\r",
          "\r",
          "//>>> _VS \r",
          "PS_IN VS( VS_IN input )",
          "{",
          "    PS_IN output = (PS_IN)0;",
          "",
          "    output.pos = mul(input.pos, worldToCameraMatrix);",
          "    output.pos = mul(output.pos, projMatrix);",
          "    output.texCoord = input.texCoord;",
          "",
          "    return output;",
          "}",
          "//<<< _VS\r",
          "\r",
          "\r",
          "\r",
          "float4 PS( PS_IN input ) : SV_Target\r",
          "{\r",
          "    //float2 cellCount = float2(10,10);\r",
          "    float2 uv = input.texCoord.xy;\r",
          "    \r",
          "    float2 cellSize = input.texCoord.xy / CellCount;\r",
          "    \r",
          "    float2 cellId = floor(uv * CellCount);\r",
          "    float2 cellPos = frac(uv * CellCount);\r",
          "    \r",
          "    cellPos -= .5;// -.5 to .5\r",
          "    float4 n = NoiseTexture.Sample(samLinear, cellId / CellCount);\r",
          "    cellPos *= ((n.yz - .5) * Randomness) + 1;// +.5 maps between .5 and 1.5, so cellPos is now .25 to .75\r",
          "    float sd = smoothstep(.2, 0, length(cellPos));\r",
          "    //float sd = smoothstep(0, sqrt(.5), length(cellPos));\r",
          "    //sd = pow(abs(sd), 20);\r",
          "\r",
          "    return float4(sd,sd,sd,1);\r",
          "}\r",
          "\r",
          "\r",
          "//>>> _technique\r",
          "technique10 Render",
          "{",
          "    pass P0",
          "    {",
          "        SetGeometryShader( 0 );",
          "        SetVertexShader( CompileShader( vs_4_0, VS() ) );",
          "        SetPixelShader( CompileShader( ps_4_0, PS() ) );",
          "    }",
          "}",
          "//<<< _technique\r",
          ""
        ]
      },
      "MetaID": "c522a66e-3260-4692-b3e3-79fd0361fa3d",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "NoiseTexture",
      "MetaInstanceID": "a9d01d23-e1d4-4799-af1f-5b59d3a38559",
      "DefaultValue": {
        "Type": "Image",
        "Value": "Framefield.Core.Image"
      },
      "MetaID": "9848060d-fd84-45b0-b658-d0d531c61dab",
      "IsMultiInput": "False",
      "Relevance": "Required",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "StarSize",
      "MetaInstanceID": "cc6078b3-09a3-4773-841f-7bb5d0a9695e",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Randomness",
      "MetaInstanceID": "9f7769ca-f252-45ea-85aa-3f85b55423a8",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "CellCount.X",
      "MetaInstanceID": "f71e4f99-f861-46ba-9732-c87d90c3536f",
      "DefaultValue": {
        "Type": "Float",
        "Value": "20"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "1",
      "Max": "10000",
      "Scale": "1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "CellCount.Y",
      "MetaInstanceID": "e3039aaf-bb44-484b-9cb7-84c798e25de5",
      "DefaultValue": {
        "Type": "Float",
        "Value": "20"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "1",
      "Max": "10000",
      "Scale": "1",
      "ScaleType": "Linear",
      "EnumValues": []
    }
  ],
  "Outputs": [
    {
      "Name": "Image",
      "MetaInstanceID": "60990a32-fe59-4c42-af3d-650a34b0b166",
      "MetaID": "9848060d-fd84-45b0-b658-d0d531c61dab"
    }
  ],
  "OperatorParts": [
    {
      "MetaInstanceID": "4205ad1e-105b-40ac-9088-a030cd3b8179",
      "MetaID": "096ebb16-f3f6-41f2-9e23-386368792d0f",
      "Name": "SH_StarGridFunc",
      "Version": "6d53b70b-56a4-4a13-8614-3092c51f9eb6",
      "Type": "Float",
      "IsMultiInput": "True",
      "Script": [
        "//>>> _using",
        "using System;",
        "using System.Collections.Generic;",
        "using System.Linq;",
        "using System.Text;",
        "using SharpDX;",
        "using SharpDX.Direct3D11;",
        "using SharpDX.Windows;",
        "//<<< _using",
        "",
        "namespace Framefield.Core.ID096ebb16_f3f6_41f2_9e23_386368792d0f",
        "{",
        "    public class Class_SH_StarGrid : FXImageFunction, Framefield.Core.OperatorPartTraits.ITimeAccessor",
        "    {",
        "        //>>> _inputids",
        "        private enum InputId",
        "        {",
        "            Code = 0,",
        "            NoiseTexture = 1,",
        "            StarSize = 2,",
        "            Randomness = 3,",
        "            CellCountX = 4,",
        "            CellCountY = 5",
        "        }",
        "        //<<< _inputids",
        "",
        "        public override OperatorPartContext Eval(OperatorPartContext context, List<OperatorPart> inputs, int outputIdx) {",
        "            //>>> _params",
        "            var Code = inputs[(int)InputId.Code].Eval(context).Text;",
        "            var NoiseTexture = inputs[(int)InputId.NoiseTexture].Eval(context).Image; // Needs to be checked for null!",
        "            var StarSize = inputs[(int)InputId.StarSize].Eval(context).Value;",
        "            var Randomness = inputs[(int)InputId.Randomness].Eval(context).Value;",
        "            var CellCountX = inputs[(int)InputId.CellCountX].Eval(context).Value;",
        "            var CellCountY = inputs[(int)InputId.CellCountY].Eval(context).Value;",
        "            var CellCount = new Vector2(CellCountX, CellCountY);",
        "            //<<< _params",
        "            ",
        "            return PrepareAndEvalOnChange(context, () => {",
        "                ClearRenderTarget(context, new SharpDX.Color4(0, 0, 0, 0));",
        "",
        "                //>>> _setup",
        "                using (var NoiseTextureView = new ShaderResourceView(context.D3DDevice, NoiseTexture))",
        "                {",
        "                    _effect.GetVariableByName(\"RenderTargetSize\").AsVector().Set(new Vector2(_usedViewport.Width, _usedViewport.Height));",
        "                    _effect.GetVariableByName(\"NoiseTexture\").AsShaderResource().SetResource(NoiseTextureView);",
        "                    _effect.GetVariableByName(\"StarSize\").AsScalar().Set(StarSize);",
        "                    _effect.GetVariableByName(\"Randomness\").AsScalar().Set(Randomness);",
        "                    _effect.GetVariableByName(\"CellCount\").AsVector().Set(new Vector2(CellCountX, CellCountY));",
        "                //<<< _setup",
        "",
        "                _effect.GetVariableByName(\"iTime\").AsScalar().Set(context.Time);",
        "                Render(context);",
        "",
        "                //>>> _cleanup",
        "                }",
        "                //<<< _cleanup",
        "            });",
        "        }",
        "",
        "    }",
        "}",
        "",
        "",
        "",
        ""
      ],
      "AdditionalAssemblies": [
        "LibToollTenfour.dll"
      ]
    }
  ],
  "Operators": [],
  "Connections": [
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "4205ad1e-105b-40ac-9088-a030cd3b8179",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "60990a32-fe59-4c42-af3d-650a34b0b166"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "0d3d686c-096b-4542-ad83-9fd8faadee4c",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "4205ad1e-105b-40ac-9088-a030cd3b8179"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "a9d01d23-e1d4-4799-af1f-5b59d3a38559",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "4205ad1e-105b-40ac-9088-a030cd3b8179"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "cc6078b3-09a3-4773-841f-7bb5d0a9695e",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "4205ad1e-105b-40ac-9088-a030cd3b8179"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "9f7769ca-f252-45ea-85aa-3f85b55423a8",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "4205ad1e-105b-40ac-9088-a030cd3b8179"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "f71e4f99-f861-46ba-9732-c87d90c3536f",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "4205ad1e-105b-40ac-9088-a030cd3b8179"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "e3039aaf-bb44-484b-9cb7-84c798e25de5",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "4205ad1e-105b-40ac-9088-a030cd3b8179"
    }
  ]
}