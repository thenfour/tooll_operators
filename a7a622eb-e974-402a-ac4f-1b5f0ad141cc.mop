{
  "Name": "TransformImage",
  "_id": "a7a622eb-e974-402a-ac4f-1b5f0ad141cc",
  "Namespace": "user.tenfour",
  "Description": "fork of slashImage but fewer options and no cell stuff",
  "Inputs": [
    {
      "Name": "Code",
      "MetaInstanceID": "1ef1ca2f-5270-4d01-8e84-8d1fa9cfd6bb",
      "DefaultValue": {
        "Type": "Text",
        "Value": [
          "//>>> _common parameters\r",
          "float4x4 objectToWorldMatrix;",
          "float4x4 worldToCameraMatrix;",
          "float4x4 projMatrix;",
          "Texture2D txDiffuse;",
          "float2 RenderTargetSize;",
          "//<<< _common parameters\r",
          "\r",
          "//>>> _parameters\r",
          "Texture2D Image;",
          "float Rotation;",
          "float2 ScalingCenter;",
          "float2 Scale;",
          "float2 Translate;",
          "float2 RotationCenter;",
          "float2 Skew;",
          "float2 SkewCenter;",
          "float WrapMode;",
          "//<<< _parameters\r",
          "\r",
          "static const float PI = atan(1.)*4.;\r",
          "static const float PI2 = atan(1.)*8.;\r",
          "\r",
          "#define iResolution RenderTargetSize\r",
          "\r",
          "//>>> _setup\r",
          "SamplerState samLinear",
          "{",
          "    Filter = MIN_MAG_MIP_LINEAR;",
          "    AddressU = Clamp;",
          "    AddressV = Clamp;",
          "};",
          "//<<< _setup\r",
          "\r",
          "SamplerState samLinearWrap\r",
          "{\r",
          "    Filter = MIN_MAG_MIP_LINEAR;\r",
          "    AddressU = Wrap;\r",
          "    AddressV = Wrap;\r",
          "};\r",
          "\r",
          "//>>> _declarations\r",
          "struct VS_IN",
          "{",
          "    float4 pos : POSITION;",
          "    float2 texCoord : TEXCOORD;",
          "};",
          "",
          "struct PS_IN",
          "{",
          "    float4 pos : SV_POSITION;",
          "    float2 texCoord: TEXCOORD0;",
          "};",
          "//<<< _declarations\r",
          "\r",
          "//>>> _GS\r",
          "",
          "//<<< _GS\r",
          "\r",
          "//>>> _VS \r",
          "PS_IN VS( VS_IN input )",
          "{",
          "    PS_IN output = (PS_IN)0;",
          "",
          "    output.pos = mul(input.pos, worldToCameraMatrix);",
          "    output.pos = mul(output.pos, projMatrix);",
          "    output.texCoord = input.texCoord;",
          "",
          "    return output;",
          "}",
          "//<<< _VS\r",
          "\r",
          "float4x4 transformMatrix;\r",
          "\r",
          "//>>> PS\r",
          "\r",
          "void rot2D(inout float2 uv, float r){\r",
          "    float s = sin(r), c = cos(r);\r",
          "    uv = mul(uv, float2x2(c, -s, s, c));\r",
          "}\r",
          "\r",
          "float4 PS( PS_IN input ) : SV_Target\r",
          "{\r",
          "    float2 _scale = Scale;\r",
          "    float _rotation = Rotation;\r",
          "    float2 _translation = Translate;\r",
          "    float2 _skew = Skew;\r",
          "    \r",
          "    float2 uv = input.texCoord;\r",
          "     \r",
          "    uv += _translation;\r",
          "    \r",
          "    uv -= RotationCenter;\r",
          "    rot2D(uv, _rotation);\r",
          "    uv += RotationCenter;\r",
          "\r",
          "    uv -= ScalingCenter;\r",
          "    uv *= _scale;\r",
          "    uv += ScalingCenter;\r",
          "\r",
          "    uv -= SkewCenter;\r",
          "    uv += _skew * uv.yx;\r",
          "    uv += SkewCenter;\r",
          "    \r",
          "    float4 ret;\r",
          "    if (WrapMode == 1) {\r",
          "        ret = Image.Sample(samLinearWrap, uv);\r",
          "    } else {\r",
          "        ret = Image.Sample(samLinear, uv);\r",
          "    }\r",
          "    \r",
          "    if (WrapMode == 2) {\r",
          "        ret.a *= (uv.x >= 0 && uv.x < 1);\r",
          "        ret.a *= (uv.y >= 0 && uv.y < 1);\r",
          "    }\r",
          "   return ret;\r",
          "}\r",
          "\r",
          "//<<< PS\r",
          "\r",
          "\r",
          "//>>> _technique\r",
          "technique10 Render",
          "{",
          "    pass P0",
          "    {",
          "        SetGeometryShader( 0 );",
          "        SetVertexShader( CompileShader( vs_4_0, VS() ) );",
          "        SetPixelShader( CompileShader( ps_4_0, PS() ) );",
          "    }",
          "}",
          "//<<< _technique\r",
          ""
        ]
      },
      "MetaID": "c522a66e-3260-4692-b3e3-79fd0361fa3d",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Image",
      "MetaInstanceID": "cbb1ed55-e16e-45bd-b684-12888e772b1b",
      "DefaultValue": {
        "Type": "Image",
        "Value": "Framefield.Core.Image"
      },
      "MetaID": "9848060d-fd84-45b0-b658-d0d531c61dab",
      "IsMultiInput": "False",
      "Relevance": "Required",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Scale.X",
      "MetaInstanceID": "c8355c46-242d-4158-afd7-fa62a33363fc",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Scale.Y",
      "MetaInstanceID": "43d36c15-41a5-42ff-b4e1-66b100488fc2",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "ScalingCenter.X",
      "MetaInstanceID": "9bbd2678-0959-46fe-8e52-8f9100566676",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.5"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.001",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "ScalingCenter.Y",
      "MetaInstanceID": "0055b2d4-6f8f-48f0-9a71-1a47de8bee66",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.5"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.001",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Rotation",
      "MetaInstanceID": "d177d785-348b-4e9b-bfc8-9f8fbd6aff20",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "RotationCenter.X",
      "MetaInstanceID": "09e12a2e-a209-4f4d-91ce-efeac257d0a9",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.5"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.001",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "RotationCenter.Y",
      "MetaInstanceID": "7af57afd-a944-4d8a-ad31-6a470fa2ac2b",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.5"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.001",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Translate.X",
      "MetaInstanceID": "abc1bdcb-be6b-4b53-a997-c7ad6551097a",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.001",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Translate.Y",
      "MetaInstanceID": "d4481d02-bf92-4fac-99a6-3a302c630344",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.001",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Skew.X",
      "MetaInstanceID": "dc7a4874-c017-4264-9065-5014c696eee7",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.001",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Skew.Y",
      "MetaInstanceID": "fe31eadc-5d69-4221-bddf-0951da53f6d8",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.001",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "SkewCenter.X",
      "MetaInstanceID": "2bc1e274-9c74-49ef-847f-d4c53ab2162d",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.5"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.001",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "SkewCenter.Y",
      "MetaInstanceID": "a0ad19e1-a57e-4fe0-9379-799b81b993d2",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.5"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.001",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "WrapMode",
      "MetaInstanceID": "37665123-f7a4-4001-befe-9bc5be29ea39",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "2",
      "Scale": "1",
      "ScaleType": "Linear",
      "EnumValues": [
        {
          "Name": "Clamp",
          "Value": "0"
        },
        {
          "Name": "Wrap",
          "Value": "1"
        },
        {
          "Name": "Transparent",
          "Value": "2"
        }
      ]
    }
  ],
  "Outputs": [
    {
      "Name": "Image",
      "MetaInstanceID": "807860e5-f538-426e-a8dd-80c8d8a13d4a",
      "MetaID": "9848060d-fd84-45b0-b658-d0d531c61dab"
    }
  ],
  "OperatorParts": [
    {
      "MetaInstanceID": "e6af08ce-0a4d-468f-8dbc-3b4c931c87a6",
      "MetaID": "291b7040-62c6-48f0-9051-ae84518d7fc9",
      "Name": "TransformImageFunc",
      "Version": "8296ee60-f0e1-4378-a392-10337ca880cc",
      "Type": "Float",
      "IsMultiInput": "True",
      "Script": [
        "//>>> _using",
        "using System;",
        "using System.Collections.Generic;",
        "using System.Linq;",
        "using System.Text;",
        "using SharpDX;",
        "using SharpDX.Direct3D11;",
        "using SharpDX.Windows;",
        "//<<< _using",
        "",
        "namespace Framefield.Core.ID291b7040_62c6_48f0_9051_ae84518d7fc9",
        "{",
        "    public class Class_TransformImage : FXImageFunction, Framefield.Core.OperatorPartTraits.ITimeAccessor",
        "    {",
        "        //>>> _inputids",
        "        private enum InputId",
        "        {",
        "            Code = 0,",
        "            Image = 1,",
        "            Rotation = 2,",
        "            ScalingCenterX = 3,",
        "            ScalingCenterY = 4,",
        "            ScaleX = 5,",
        "            ScaleY = 6,",
        "            TranslateX = 7,",
        "            TranslateY = 8,",
        "            RotationCenterX = 9,",
        "            RotationCenterY = 10,",
        "            SkewX = 11,",
        "            SkewY = 12,",
        "            SkewCenterX = 13,",
        "            SkewCenterY = 14,",
        "            WrapMode = 15",
        "        }",
        "        //<<< _inputids",
        "        ",
        "        public override OperatorPartContext Eval(OperatorPartContext context, List<OperatorPart> inputs, int outputIdx) {",
        "            //>>> _params",
        "            var Code = inputs[(int)InputId.Code].Eval(context).Text;",
        "            var Image = inputs[(int)InputId.Image].Eval(context).Image; // Needs to be checked for null!",
        "            var Rotation = inputs[(int)InputId.Rotation].Eval(context).Value;",
        "            var ScalingCenterX = inputs[(int)InputId.ScalingCenterX].Eval(context).Value;",
        "            var ScalingCenterY = inputs[(int)InputId.ScalingCenterY].Eval(context).Value;",
        "            var ScalingCenter = new Vector2(ScalingCenterX, ScalingCenterY);",
        "            var ScaleX = inputs[(int)InputId.ScaleX].Eval(context).Value;",
        "            var ScaleY = inputs[(int)InputId.ScaleY].Eval(context).Value;",
        "            var Scale = new Vector2(ScaleX, ScaleY);",
        "            var TranslateX = inputs[(int)InputId.TranslateX].Eval(context).Value;",
        "            var TranslateY = inputs[(int)InputId.TranslateY].Eval(context).Value;",
        "            var Translate = new Vector2(TranslateX, TranslateY);",
        "            var RotationCenterX = inputs[(int)InputId.RotationCenterX].Eval(context).Value;",
        "            var RotationCenterY = inputs[(int)InputId.RotationCenterY].Eval(context).Value;",
        "            var RotationCenter = new Vector2(RotationCenterX, RotationCenterY);",
        "            var SkewX = inputs[(int)InputId.SkewX].Eval(context).Value;",
        "            var SkewY = inputs[(int)InputId.SkewY].Eval(context).Value;",
        "            var Skew = new Vector2(SkewX, SkewY);",
        "            var SkewCenterX = inputs[(int)InputId.SkewCenterX].Eval(context).Value;",
        "            var SkewCenterY = inputs[(int)InputId.SkewCenterY].Eval(context).Value;",
        "            var SkewCenter = new Vector2(SkewCenterX, SkewCenterY);",
        "            var WrapMode = (int) inputs[(int)InputId.WrapMode].Eval(context).Value;",
        "            //<<< _params",
        "            ",
        "            return PrepareAndEvalOnChange(context, () => {",
        "                ClearRenderTarget(context, new SharpDX.Color4(0, 0, 0, 0));",
        "                if (Image == null) {",
        "                    return;",
        "                }",
        "",
        "                //>>> _setup",
        "                using (var ImageView = new ShaderResourceView(context.D3DDevice, Image))",
        "                {",
        "                    _effect.GetVariableByName(\"RenderTargetSize\").AsVector().Set(new Vector2(_usedViewport.Width, _usedViewport.Height));",
        "                    _effect.GetVariableByName(\"Image\").AsShaderResource().SetResource(ImageView);",
        "                    _effect.GetVariableByName(\"Rotation\").AsScalar().Set(Rotation);",
        "                    _effect.GetVariableByName(\"ScalingCenter\").AsVector().Set(new Vector2(ScalingCenterX, ScalingCenterY));",
        "                    _effect.GetVariableByName(\"Scale\").AsVector().Set(new Vector2(ScaleX, ScaleY));",
        "                    _effect.GetVariableByName(\"Translate\").AsVector().Set(new Vector2(TranslateX, TranslateY));",
        "                    _effect.GetVariableByName(\"RotationCenter\").AsVector().Set(new Vector2(RotationCenterX, RotationCenterY));",
        "                    _effect.GetVariableByName(\"Skew\").AsVector().Set(new Vector2(SkewX, SkewY));",
        "                    _effect.GetVariableByName(\"SkewCenter\").AsVector().Set(new Vector2(SkewCenterX, SkewCenterY));",
        "                    _effect.GetVariableByName(\"WrapMode\").AsScalar().Set(WrapMode);",
        "                //<<< _setup",
        "                ",
        "                //Pivot /= CellCount;",
        "                //Translate /= CellCount;",
        "                ",
        "                /*var _transform = Matrix.Transformation2D(",
        "                    Pivot, 0,// scaling center, scalingrotation",
        "                    Scale,// scaling",
        "                    Pivot,// rot center",
        "                    Rotation,// rotation",
        "                    Translate);",
        "",
        "                _effect.GetVariableByName(\"transformMatrix\").AsMatrix().SetMatrix(_transform);",
        "*/",
        "",
        "                Render(context);",
        "",
        "                //>>> _cleanup",
        "                }",
        "                //<<< _cleanup",
        "            });",
        "        }",
        "",
        "    }",
        "}",
        "",
        "",
        "",
        ""
      ],
      "AdditionalAssemblies": [
        "LibToollTenfour.dll"
      ]
    }
  ],
  "Operators": [],
  "Connections": [
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "e6af08ce-0a4d-468f-8dbc-3b4c931c87a6",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "807860e5-f538-426e-a8dd-80c8d8a13d4a"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "1ef1ca2f-5270-4d01-8e84-8d1fa9cfd6bb",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e6af08ce-0a4d-468f-8dbc-3b4c931c87a6"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "cbb1ed55-e16e-45bd-b684-12888e772b1b",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e6af08ce-0a4d-468f-8dbc-3b4c931c87a6"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "d177d785-348b-4e9b-bfc8-9f8fbd6aff20",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e6af08ce-0a4d-468f-8dbc-3b4c931c87a6"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "9bbd2678-0959-46fe-8e52-8f9100566676",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e6af08ce-0a4d-468f-8dbc-3b4c931c87a6"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "0055b2d4-6f8f-48f0-9a71-1a47de8bee66",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e6af08ce-0a4d-468f-8dbc-3b4c931c87a6"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "c8355c46-242d-4158-afd7-fa62a33363fc",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e6af08ce-0a4d-468f-8dbc-3b4c931c87a6"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "43d36c15-41a5-42ff-b4e1-66b100488fc2",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e6af08ce-0a4d-468f-8dbc-3b4c931c87a6"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "abc1bdcb-be6b-4b53-a997-c7ad6551097a",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e6af08ce-0a4d-468f-8dbc-3b4c931c87a6"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "d4481d02-bf92-4fac-99a6-3a302c630344",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e6af08ce-0a4d-468f-8dbc-3b4c931c87a6"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "09e12a2e-a209-4f4d-91ce-efeac257d0a9",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e6af08ce-0a4d-468f-8dbc-3b4c931c87a6"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "7af57afd-a944-4d8a-ad31-6a470fa2ac2b",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e6af08ce-0a4d-468f-8dbc-3b4c931c87a6"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "dc7a4874-c017-4264-9065-5014c696eee7",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e6af08ce-0a4d-468f-8dbc-3b4c931c87a6"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "fe31eadc-5d69-4221-bddf-0951da53f6d8",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e6af08ce-0a4d-468f-8dbc-3b4c931c87a6"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "2bc1e274-9c74-49ef-847f-d4c53ab2162d",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e6af08ce-0a4d-468f-8dbc-3b4c931c87a6"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "a0ad19e1-a57e-4fe0-9379-799b81b993d2",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e6af08ce-0a4d-468f-8dbc-3b4c931c87a6"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "37665123-f7a4-4001-befe-9bc5be29ea39",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e6af08ce-0a4d-468f-8dbc-3b4c931c87a6"
    }
  ]
}