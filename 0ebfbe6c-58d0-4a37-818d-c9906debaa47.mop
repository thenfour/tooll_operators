{
  "Name": "StrokeXXX",
  "_id": "0ebfbe6c-58d0-4a37-818d-c9906debaa47",
  "Namespace": "tenfour",
  "Description": "",
  "Inputs": [
    {
      "Name": "Code",
      "MetaInstanceID": "7d3d87b4-f256-4ecf-91a9-c2006d801d2c",
      "DefaultValue": {
        "Type": "Text",
        "Value": [
          "//>>> _common parameters\r",
          "float4x4 objectToWorldMatrix;",
          "float4x4 worldToCameraMatrix;",
          "float4x4 projMatrix;",
          "Texture2D txDiffuse;",
          "float2 RenderTargetSize;",
          "//<<< _common parameters\r",
          "\r",
          "//>>> _parameters\r",
          "Texture2D Image;",
          "float Strength;",
          "float SampleRadius;",
          "float Contrast;",
          "float4 Color;",
          "float BlendingMode;",
          "//<<< _parameters\r",
          " \r",
          "//>>> setup\r",
          "SamplerState samLinear\r",
          "{\r",
          "    Filter = MIN_MAG_LINEAR_MIP_POINT;\r",
          "    //Filter = MIN_MAG_LINEAR;\r",
          "    AddressU = Clamp;\r",
          "    AddressV = Clamp;\r",
          "};\r",
          "//<<< setup\r",
          "\r",
          "//>>> declarations\r",
          "struct VS_IN\r",
          "{\r",
          "    float4 pos : POSITION;\r",
          "    float2 texCoord : TEXCOORD;\r",
          "};\r",
          "\r",
          "struct PS_IN\r",
          "{\r",
          "    float4 pos : SV_POSITION;\r",
          "    float2 texCoord: TEXCOORD0;\t    \r",
          "    float3 worldTViewPos: TEXCOORD1;\r",
          "    float3 worldTViewDir: TEXCOORD2;\r",
          "};\r",
          "//<<< declarations\r",
          "\r",
          "//>>> _GS\r",
          "",
          "//<<< _GS\r",
          "\r",
          "//>>> _VS \r",
          "PS_IN VS( VS_IN input )",
          "{",
          "    PS_IN output = (PS_IN)0;",
          "",
          "    output.pos = mul(input.pos, worldToCameraMatrix);",
          "    output.pos = mul(output.pos, projMatrix);",
          "    output.texCoord = input.texCoord;",
          "",
          "    return output;",
          "}",
          "//<<< _VS\r",
          "\r",
          "//>>> PS\r",
          "float4 PS( PS_IN input ) : SV_Target\r",
          "{\r",
          "    float width, height;\r",
          "    Image.GetDimensions(width, height);\r",
          "    \r",
          "    float sx = SampleRadius / width;\r",
          "    float sy = SampleRadius / height;\r",
          "\r",
          "    float4 y1= Image.Sample(samLinear, float2(input.texCoord.x,       input.texCoord.y + sy));\r",
          "    float4 y2= Image.Sample(samLinear, float2(input.texCoord.x,       input.texCoord.y - sy));\r",
          "    \r",
          "    float4 x1= Image.Sample(samLinear,  float2(input.texCoord.x + sx, input.texCoord.y));\r",
          "    float4 x2= Image.Sample(samLinear,  float2(input.texCoord.x - sx, input.texCoord.y)); \r",
          "    float4 m =  Image.Sample(samLinear, float2(input.texCoord.x,      input.texCoord.y)); \r",
          "    //return ((m-y1) + (m-y2) + (m-x1) + (m-x2)) * Strength;\r",
          "    \r",
          "    float strokeamt =  (           \r",
          "                    abs(x1.r-m.r) + abs(x2.r-m.r) + abs(y1.r - m.r) +abs(y2.r - m.r) +\r",
          "                    abs(x1.g-m.g) + abs(x2.g-m.g) + abs(y1.g - m.g) +abs(y2.g - m.g) +\r",
          "                    abs(x1.b-m.b) + abs(x2.b-m.b) + abs(y1.b - m.b) +abs(y2.b - m.b)\r",
          "                ) * Strength + Contrast;\r",
          "                \r",
          "    strokeamt = clamp(strokeamt, 0, 1);\r",
          "    float4 strokeColor = strokeamt * Color;\r",
          "    \r",
          "    switch (BlendingMode) {\r",
          "    case 0: // only stroke\r",
          "        return strokeColor;\r",
          "    case 1: // add\r",
          "        return clamp(strokeColor + m, 0, 1);\r",
          "    case 2: // multiply\r",
          "        return clamp(strokeColor * m, 0, 1);\r",
          "    case 3: // screen\r",
          "        return clamp(1 - (1-strokeColor) * (1 - m), 0, 1);\r",
          "    case 4: // fill alpha\r",
          "        // so mix based on original src alpha. this way only transparent pixels will show the stroke.\r",
          "        return lerp(strokeColor, m, m.a);\r",
          "    }\r",
          "    \r",
          "    return strokeColor;\r",
          "    \r",
          "}\r",
          "//<<< PS\r",
          "\r",
          "//>>> _technique\r",
          "technique10 Render",
          "{",
          "    pass P0",
          "    {",
          "        SetGeometryShader( 0 );",
          "        SetVertexShader( CompileShader( vs_4_0, VS() ) );",
          "        SetPixelShader( CompileShader( ps_4_0, PS() ) );",
          "    }",
          "}",
          "//<<< _technique\r",
          ""
        ]
      },
      "MetaID": "c522a66e-3260-4692-b3e3-79fd0361fa3d",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Image",
      "MetaInstanceID": "58b99785-d533-4dff-8779-c87f6052c077",
      "DefaultValue": {
        "Type": "Image",
        "Value": "Framefield.Core.Image"
      },
      "MetaID": "9848060d-fd84-45b0-b658-d0d531c61dab",
      "IsMultiInput": "False",
      "Relevance": "Required",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Strength",
      "MetaInstanceID": "faca41a8-e801-4875-b941-4ba0c154ceca",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "SampleRadius",
      "MetaInstanceID": "dcfda975-92db-4ccb-a0cb-6a8e95aa0124",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Contrast",
      "MetaInstanceID": "be905273-8b9d-40d4-8cbd-4fccd69ce161",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.05"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Color.R",
      "MetaInstanceID": "e0ee185b-eca5-40bd-b9b7-3493f0a032ac",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Color.G",
      "MetaInstanceID": "ffc05174-6177-4de2-9af5-ce2a61ed748e",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Color.B",
      "MetaInstanceID": "25a67fca-a22f-40ae-aed1-35bc114e8852",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Color.A",
      "MetaInstanceID": "8f9c5e46-abee-4806-b3c1-1e403907051a",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "BlendingMode",
      "MetaInstanceID": "6875d14a-1206-4953-8777-738722f6b7b6",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": [
        {
          "Name": "OnlyStroke",
          "Value": "0"
        },
        {
          "Name": "Add",
          "Value": "1"
        },
        {
          "Name": "Multiply",
          "Value": "2"
        },
        {
          "Name": "Screen",
          "Value": "3"
        },
        {
          "Name": "FillAlpha",
          "Value": "4"
        }
      ]
    }
  ],
  "Outputs": [
    {
      "Name": "Image",
      "MetaInstanceID": "c6455816-feed-4c24-b773-3df2e0d59021",
      "MetaID": "9848060d-fd84-45b0-b658-d0d531c61dab"
    }
  ],
  "OperatorParts": [
    {
      "MetaInstanceID": "d5f12b05-b2c3-4e9f-b103-54ed68eeab99",
      "MetaID": "95984186-7371-439c-a397-b6b2e795668c",
      "Name": "StrokeXXXFunc",
      "Version": "43219b9e-06be-436e-bf60-3232e8c7b6f8",
      "Type": "Float",
      "IsMultiInput": "True",
      "Script": [
        "//>>> _using",
        "using System;",
        "using System.Collections.Generic;",
        "using System.Linq;",
        "using System.Text;",
        "using SharpDX;",
        "using SharpDX.Direct3D11;",
        "using SharpDX.Windows;",
        "//<<< _using",
        "",
        "namespace Framefield.Core.ID95984186_7371_439c_a397_b6b2e795668c",
        "{",
        "    public class Class_Stroke : FXImageFunction",
        "    {",
        "        //>>> _inputids",
        "        private enum InputId",
        "        {",
        "            Code = 0,",
        "            Image = 1,",
        "            Strength = 2,",
        "            SampleRadius = 3,",
        "            Contrast = 4,",
        "            ColorR = 5,",
        "            ColorG = 6,",
        "            ColorB = 7,",
        "            ColorA = 8,",
        "            BlendingMode = 9",
        "        }",
        "        //<<< _inputids",
        "",
        "        public override OperatorPartContext Eval(OperatorPartContext context, List<OperatorPart> inputs, int outputIdx)",
        "        {",
        "            //>>> _params",
        "            var Code = inputs[(int)InputId.Code].Eval(context).Text;",
        "            var Image = inputs[(int)InputId.Image].Eval(context).Image; // Needs to be checked for null!",
        "            var Strength = inputs[(int)InputId.Strength].Eval(context).Value;",
        "            var SampleRadius = inputs[(int)InputId.SampleRadius].Eval(context).Value;",
        "            var Contrast = inputs[(int)InputId.Contrast].Eval(context).Value;",
        "            var ColorR = inputs[(int)InputId.ColorR].Eval(context).Value;",
        "            var ColorG = inputs[(int)InputId.ColorG].Eval(context).Value;",
        "            var ColorB = inputs[(int)InputId.ColorB].Eval(context).Value;",
        "            var ColorA = inputs[(int)InputId.ColorA].Eval(context).Value;",
        "            var Color = new Color4(ColorR, ColorG, ColorB, ColorA);",
        "            var BlendingMode = (int) inputs[(int)InputId.BlendingMode].Eval(context).Value;",
        "            //<<< _params",
        "            ",
        "            if(Image == null)",
        "                return context;",
        "",
        "",
        "            return PrepareAndEvalOnChange(context, () => {",
        "                ClearRenderTarget(context, new SharpDX.Color4(0, 0, 0, 0));",
        "",
        "                //>>> _setup",
        "                using (var ImageView = new ShaderResourceView(context.D3DDevice, Image))",
        "                {",
        "                    _effect.GetVariableByName(\"RenderTargetSize\").AsVector().Set(new Vector2(_usedViewport.Width, _usedViewport.Height));",
        "                    _effect.GetVariableByName(\"Image\").AsShaderResource().SetResource(ImageView);",
        "                    _effect.GetVariableByName(\"Strength\").AsScalar().Set(Strength);",
        "                    _effect.GetVariableByName(\"SampleRadius\").AsScalar().Set(SampleRadius);",
        "                    _effect.GetVariableByName(\"Contrast\").AsScalar().Set(Contrast);",
        "                    _effect.GetVariableByName(\"Color\").AsVector().Set(new Vector4(ColorR, ColorG, ColorB, ColorA));",
        "                    _effect.GetVariableByName(\"BlendingMode\").AsScalar().Set(BlendingMode);",
        "                //<<< _setup",
        "",
        "                Render(context);",
        "",
        "                //>>> _cleanup",
        "                }",
        "                //<<< _cleanup",
        "            });",
        "        }",
        "",
        "    }",
        "}",
        "",
        ""
      ],
      "AdditionalAssemblies": []
    }
  ],
  "Operators": [],
  "Connections": [
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "d5f12b05-b2c3-4e9f-b103-54ed68eeab99",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "c6455816-feed-4c24-b773-3df2e0d59021"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "7d3d87b4-f256-4ecf-91a9-c2006d801d2c",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "d5f12b05-b2c3-4e9f-b103-54ed68eeab99"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "58b99785-d533-4dff-8779-c87f6052c077",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "d5f12b05-b2c3-4e9f-b103-54ed68eeab99"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "faca41a8-e801-4875-b941-4ba0c154ceca",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "d5f12b05-b2c3-4e9f-b103-54ed68eeab99"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "dcfda975-92db-4ccb-a0cb-6a8e95aa0124",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "d5f12b05-b2c3-4e9f-b103-54ed68eeab99"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "be905273-8b9d-40d4-8cbd-4fccd69ce161",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "d5f12b05-b2c3-4e9f-b103-54ed68eeab99"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "e0ee185b-eca5-40bd-b9b7-3493f0a032ac",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "d5f12b05-b2c3-4e9f-b103-54ed68eeab99"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "ffc05174-6177-4de2-9af5-ce2a61ed748e",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "d5f12b05-b2c3-4e9f-b103-54ed68eeab99"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "25a67fca-a22f-40ae-aed1-35bc114e8852",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "d5f12b05-b2c3-4e9f-b103-54ed68eeab99"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "8f9c5e46-abee-4806-b3c1-1e403907051a",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "d5f12b05-b2c3-4e9f-b103-54ed68eeab99"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "6875d14a-1206-4953-8777-738722f6b7b6",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "d5f12b05-b2c3-4e9f-b103-54ed68eeab99"
    }
  ]
}