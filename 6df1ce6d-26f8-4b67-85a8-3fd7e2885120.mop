{
  "Name": "Cue",
  "_id": "6df1ce6d-26f8-4b67-85a8-3fd7e2885120",
  "Namespace": "user.tenfour.animation",
  "Description": "v5 or so.use as just a placeholder for cues\r\n\r\nConverts stream to project, and beats to time.\r\nCan use a stream time as a basis, so you can define markers by beats from a previous cue.\r\n\r\nOutputs a LibToollTenfour.CueInfo object.\r\n",
  "Inputs": [
    {
      "Name": "ProjectTime",
      "MetaInstanceID": "c07e7caa-af11-4213-87b8-4e061a7582e3",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "ProjectBeat",
      "MetaInstanceID": "ccb8af50-0108-4514-8469-a9ee4604bf43",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Color.R",
      "MetaInstanceID": "fb5871b9-9223-478b-a925-013d6941c721",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.53"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Color.G",
      "MetaInstanceID": "65a5b2a5-8dfe-464b-9b16-9db2311599c4",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.48"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Color.B",
      "MetaInstanceID": "dd1e94b9-0bcd-4eb6-aa53-e033317070f9",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.68"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Color.A",
      "MetaInstanceID": "4afa2668-e10a-4845-a8f8-35f30949e61c",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "StreamTimeOffset",
      "MetaInstanceID": "28b48c7e-a58e-48b6-bafc-13ddc5f5f8fb",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    }
  ],
  "Outputs": [
    {
      "Name": "Cue",
      "MetaInstanceID": "0b59b518-5e0f-42df-8d94-df3962be2e16",
      "MetaID": "9701d534-b3ff-4889-a250-84aece4a7d76"
    }
  ],
  "OperatorParts": [
    {
      "MetaInstanceID": "f65e6e89-a4b3-4518-b261-532c506b124e",
      "MetaID": "69fce000-1df9-434d-a8d2-15a8eff16125",
      "Name": "CueFunc",
      "Version": "d0ee06b5-e001-4eee-8d9a-be1f8a8693bd",
      "Type": "Generic",
      "IsMultiInput": "True",
      "Script": [
        "using System;",
        "using System.Collections.Generic;",
        "using System.Linq;",
        "using System.Text;",
        "using SharpDX;",
        "",
        "// projectbeat",
        "// projecttime",
        "// streamtime",
        "// streambeat",
        "// relativetime",
        "",
        "namespace Framefield.Core.ID69fce000_1df9_434d_a8d2_15a8eff16125",
        "{",
        "    public class Class_Cue : OperatorPart.Function,",
        "        Framefield.Core.OperatorPartTraits.ITimeMarker,",
        "        Framefield.Core.OperatorPartTraits.ITimeAccessor",
        "    {",
        "        //>>> _inputids",
        "        private enum InputId",
        "        {",
        "            ProjectTime = 0,",
        "            ColorR = 1,",
        "            ColorG = 2,",
        "            ColorB = 3,",
        "            ColorA = 4,",
        "            ProjectBeat = 5,",
        "            StreamTimeOffset = 6",
        "        }",
        "        //<<< _inputids",
        "        ",
        "        //>>> _outputids",
        "        private enum OutputId",
        "        {",
        "            Cue = 0",
        "        }",
        "        //<<< _outputids",
        "",
        "    \t// for itimemmarker",
        "        public double Time {",
        "            get",
        "            {",
        "                double projectTime = GetInputValue((int)InputId.ProjectTime);",
        "                double projectBeat = GetInputValue((int)InputId.ProjectBeat);",
        "                double streamTimeOffset = GetInputValue((int)InputId.StreamTimeOffset);",
        "                ",
        "                var server = Framefield.Core.OperatorPartContext.SKServerState.Server;",
        "                if (server != null && server.Transport != null) {",
        "                    LibToollTenfour.CueInfo cue = server.Transport.CreateCue(streamTimeOffset, projectTime, projectBeat);",
        "                    return cue.ProjectTime;",
        "                }",
        "                return 0;",
        "            }",
        "            set",
        "            {",
        "                SetInputValue((int)InputId.ProjectTime, value);",
        "                SetInputValue((int)InputId.ProjectBeat, 0);",
        "            }",
        "        }",
        "",
        "",
        "        public Color4 Color {",
        "            get {",
        "                return new Color4((float)GetInputValue((int)InputId.ColorR),",
        "                                  (float)GetInputValue((int)InputId.ColorG),",
        "                                  (float)GetInputValue((int)InputId.ColorB),",
        "                                  (float)GetInputValue((int)InputId.ColorA));",
        "            }",
        "            set {",
        "                SetInputValue((int)InputId.ColorA, (double)value.Alpha);",
        "                SetInputValue((int)InputId.ColorR, (double)value.Red);",
        "                SetInputValue((int)InputId.ColorG, (double)value.Green);",
        "                SetInputValue((int)InputId.ColorB, (double)value.Blue);",
        "            }",
        "        }",
        "        ",
        "        ",
        "        public override OperatorPartContext Eval(OperatorPartContext context, List<OperatorPart> inputs, int outputIdx) {",
        "            //>>> _params",
        "            var ProjectTime = inputs[(int)InputId.ProjectTime].Eval(context).Value;",
        "            var ColorR = inputs[(int)InputId.ColorR].Eval(context).Value;",
        "            var ColorG = inputs[(int)InputId.ColorG].Eval(context).Value;",
        "            var ColorB = inputs[(int)InputId.ColorB].Eval(context).Value;",
        "            var ColorA = inputs[(int)InputId.ColorA].Eval(context).Value;",
        "            var Color = new Color4(ColorR, ColorG, ColorB, ColorA);",
        "            var ProjectBeat = inputs[(int)InputId.ProjectBeat].Eval(context).Value;",
        "            var StreamTimeOffset = inputs[(int)InputId.StreamTimeOffset].Eval(context).Value;",
        "            //<<< _params",
        "            ",
        "            var skstate = Framefield.Core.OperatorPartContext.SKServerState;",
        "",
        "            double projectTime = GetInputValue((int)InputId.ProjectTime);",
        "            double projectBeat = GetInputValue((int)InputId.ProjectBeat);",
        "            double streamTimeOffset = GetInputValue((int)InputId.StreamTimeOffset);",
        "            ",
        "            if (skstate.Server != null && skstate.Server.Transport != null) {",
        "                LibToollTenfour.CueInfo cue = skstate.Server.Transport.CreateCue(StreamTimeOffset, ProjectTime, ProjectBeat);",
        "                context.Dynamic = cue;",
        "            }",
        "            return context;",
        "",
        "",
        "//context.Time = (float)skstate.ProgramStreamTime;",
        "            ",
        "            //float timeSec;",
        "            /*",
        "            switch (outputIdx) {",
        "                case (int)OutputId.Time:",
        "                    //timeSec = GetTime(TransitionBeat - BeatOffset, TransitionSec);",
        "                    timeSec = GetTime(BeatOffset + TransitionBeat, TransitionSec);",
        "                    ",
        "                    //Logger.Info(this,\"TransitionPoint; time={0}\", context.Time);",
        "                    context.Value = timeSec;",
        "                    return context;",
        "                case (int)OutputId.Beat:",
        "                    context.Value = TransitionBeat + BeatOffset;",
        "                    return context;",
        "                case (int)OutputId.RelativeTime:",
        "                    timeSec = GetTime(TransitionBeat + BeatOffset, TransitionSec);",
        "                    context.Value = context.Time - timeSec;",
        "                    return context;",
        "            }*/",
        "            ",
        "            //Logger.Info(this,\"unknown outputid\");",
        "            //return context;",
        "        }",
        "",
        "        private double GetInputValue(int index) {",
        "            return OperatorPartUtilities.GetInputFloatValue(OperatorPart.Connections[index]);",
        "        }",
        "",
        "        private void SetInputValue(int index, double val) {",
        "            OperatorPart opPart = OperatorPart.Connections[index];",
        "            if (opPart.Connections.Count == 0) {",
        "                opPart.Func = Utilities.CreateValueFunction(new Float((float)val));",
        "            }",
        "        }",
        "",
        "    }",
        "}",
        ""
      ],
      "AdditionalAssemblies": [
        "LibToollTenfour.dll"
      ]
    }
  ],
  "Operators": [],
  "Connections": [
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "c07e7caa-af11-4213-87b8-4e061a7582e3",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "f65e6e89-a4b3-4518-b261-532c506b124e"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "fb5871b9-9223-478b-a925-013d6941c721",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "f65e6e89-a4b3-4518-b261-532c506b124e"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "65a5b2a5-8dfe-464b-9b16-9db2311599c4",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "f65e6e89-a4b3-4518-b261-532c506b124e"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "dd1e94b9-0bcd-4eb6-aa53-e033317070f9",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "f65e6e89-a4b3-4518-b261-532c506b124e"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "4afa2668-e10a-4845-a8f8-35f30949e61c",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "f65e6e89-a4b3-4518-b261-532c506b124e"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "ccb8af50-0108-4514-8469-a9ee4604bf43",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "f65e6e89-a4b3-4518-b261-532c506b124e"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "28b48c7e-a58e-48b6-bafc-13ddc5f5f8fb",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "f65e6e89-a4b3-4518-b261-532c506b124e"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "f65e6e89-a4b3-4518-b261-532c506b124e",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "0b59b518-5e0f-42df-8d94-df3962be2e16"
    }
  ]
}