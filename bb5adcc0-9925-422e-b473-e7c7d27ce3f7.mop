{
  "Name": "SH_Glitch01",
  "_id": "bb5adcc0-9925-422e-b473-e7c7d27ce3f7",
  "Namespace": "user.tenfour.shaders",
  "Description": "",
  "Inputs": [
    {
      "Name": "Code",
      "MetaInstanceID": "83e01b36-e886-4cfc-aa01-410d7118966f",
      "DefaultValue": {
        "Type": "Text",
        "Value": [
          "//>>> _common parameters\r",
          "float4x4 objectToWorldMatrix;",
          "float4x4 worldToCameraMatrix;",
          "float4x4 projMatrix;",
          "Texture2D txDiffuse;",
          "float2 RenderTargetSize;",
          "//<<< _common parameters\r",
          "\r",
          "//>>> _parameters\r",
          "float LayerCount;",
          "float Zoom;",
          "float2 Position;",
          "float AnimTime;",
          "float Chop;",
          "float Density;",
          "float PostEffect;",
          "float CellRot;",
          "float Saturation;",
          "//<<< _parameters\r",
          "\r",
          "const float iBPM;\r",
          "const float iProgram;\r",
          "const float iTime;\r",
          "const float iBeat;\r",
          "const float iBeatInt;\r",
          "static const float PI = atan(1.)*4.;\r",
          "static const float PI2 = atan(1.)*8.;\r",
          "\r",
          "#define iResolution RenderTargetSize\r",
          "#define vec2 float2\r",
          "#define vec3 float3\r",
          "#define vec4 float4\r",
          "#define mat2 float2x2\r",
          "#define fract frac\r",
          "#define mod fmod\r",
          "#define mix lerp\r",
          "#define vec20 (float2(0,0))\r",
          "#define vec30 (float3(0,0,0))\r",
          "#define vec40 (float4(0,0,0,0))\r",
          "#define vec21 (float2(1,1))\r",
          "#define vec31 (float3(1,1,1))\r",
          "#define vec41 (float4(1,1,1,1))\r",
          "#define vec2x(x) (float2((x),(x)))\r",
          "#define vec3x(x) (float3((x),(x),(x)))\r",
          "#define vec4x(x) (float4((x),(x),(x),(x)))\r",
          "\r",
          "//>>> _setup\r",
          "SamplerState samLinear",
          "{",
          "    Filter = MIN_MAG_MIP_LINEAR;",
          "    AddressU = Clamp;",
          "    AddressV = Clamp;",
          "};",
          "//<<< _setup\r",
          "\r",
          "//>>> _declarations\r",
          "struct VS_IN",
          "{",
          "    float4 pos : POSITION;",
          "    float2 texCoord : TEXCOORD;",
          "};",
          "",
          "struct PS_IN",
          "{",
          "    float4 pos : SV_POSITION;",
          "    float2 texCoord: TEXCOORD0;",
          "};",
          "//<<< _declarations\r",
          "\r",
          "//>>> _GS\r",
          "",
          "//<<< _GS\r",
          "\r",
          "//>>> _VS \r",
          "PS_IN VS( VS_IN input )",
          "{",
          "    PS_IN output = (PS_IN)0;",
          "",
          "    output.pos = mul(input.pos, worldToCameraMatrix);",
          "    output.pos = mul(output.pos, projMatrix);",
          "    output.texCoord = input.texCoord;",
          "",
          "    return output;",
          "}",
          "//<<< _VS\r",
          "\r",
          "//>>> PS\r",
          "\r",
          "static const float z = Zoom;\r",
          "static const float complexity = LayerCount;\r",
          "//const float speed = .5;// scene changing speed\r",
          "static const float density = Density; // 0-1\r",
          "\r",
          "vec4 hash42(vec2 p)\r",
          "{\r",
          "\tvec4 p4 = fract(vec4(p.xyxy) * vec4(.1031, .1030, .0973, .1099));\r",
          "    p4 += dot(p4, p4.wzxy+33.33);\r",
          "    return fract((p4.xxyz+p4.yzzw)*p4.zywx);\r",
          "}\r",
          "\r",
          "mat2 rot2D(float r){\r",
          "    return mat2(cos(r), sin(r), -sin(r), cos(r));\r",
          "}\r",
          "#define q(x,p) ((p) < 0.001 ? (x) : (floor((x)/(p))*(p)))\r",
          "\r",
          "\r",
          "void mainImage( out vec4 o, vec2 C)\r",
          "{\r",
          "    vec2 R = iResolution.xy;\r",
          "    vec2 uv = C/R.xy;\r",
          "    vec2 N = uv;\r",
          "    uv.x *= R.x/R.y;\r",
          "    uv *= z;\r",
          "    uv += Position;\r",
          "    //float t = iTime+1e4;\r",
          "//    if (uv.y > .5)\r",
          "       // uv.x += pow(frac(iBeat/4.),.2) + floor(t/iBPM)*z*1.618;// scene switcher\r",
          "  //  else \r",
          "  //      uv.x -= pow(abs(frac(iBeat/2.)),.2) + floor(t/iBPM)*z*1.618;// scene switcher\r",
          "    //uv.x += iBeat;\r",
          "    o = vec4x(1);\r",
          "\r",
          "    for (float i = 1.;i <= complexity; ++ i) {\r",
          "        vec4 h = hash42(floor(uv+i));\r",
          "        vec2 p = fract(uv+i)-.5;\r",
          "        p = mul(p,rot2D(h.x*PI*2.*CellRot));\r",
          "        uv += p * h.z;\r",
          "        h = hash42(floor(uv));\r",
          "        h += length(fract(p+q(AnimTime,Chop)*.1)); // animate\r",
          "        h = fract(h);\r",
          "        if (i < 2. || h.w > density) {\r",
          "            o *= h;\r",
          "        }\r",
          "    }\r",
          "    o=pow(abs(o),o-o+.5);\r",
          "    if (PostEffect > 0)\r",
          "  \t o=step(.5,o) * mod(C.y,3.)/2.;\r",
          "  \to = lerp((o.r+o.g+o.b)/3,o,Saturation);\r",
          "}\r",
          "\r",
          "\r",
          "\r",
          "",
          "//<<< PS\r",
          "\r",
          "\r",
          "float4 PS( PS_IN input ) : SV_Target\r",
          "{\r",
          "    float4 o;\r",
          "    mainImage(o, input.pos.xy);\r",
          "    o = clamp(o,0.,1.);\r",
          "    o.a = 1.0;\r",
          "    return o;\r",
          "}\r",
          "\r",
          "\r",
          "//>>> _technique\r",
          "technique10 Render",
          "{",
          "    pass P0",
          "    {",
          "        SetGeometryShader( 0 );",
          "        SetVertexShader( CompileShader( vs_4_0, VS() ) );",
          "        SetPixelShader( CompileShader( ps_4_0, PS() ) );",
          "    }",
          "}",
          "//<<< _technique\r",
          ""
        ]
      },
      "MetaID": "c522a66e-3260-4692-b3e3-79fd0361fa3d",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "LayerCount",
      "MetaInstanceID": "e40001fc-805c-49d0-a2f9-2e243de340e9",
      "DefaultValue": {
        "Type": "Float",
        "Value": "13"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "1",
      "Max": "20",
      "Scale": "1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Zoom",
      "MetaInstanceID": "6db1d776-de59-4a73-b122-dd88cb8b2810",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Position.X",
      "MetaInstanceID": "ce1cb83b-82e5-402f-be1c-48222c4c2fc0",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Position.Y",
      "MetaInstanceID": "52a33f81-45a3-4995-90b8-46107b01e17b",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "AnimTime",
      "MetaInstanceID": "d713c4bf-507c-494f-92a2-c5463fb320d8",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Chop",
      "MetaInstanceID": "ad57bad3-240c-48c0-8d96-e004a4f0fdc8",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Density",
      "MetaInstanceID": "cf9a4bcf-52f8-4c52-9dce-9d1d6490cd2b",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.8"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "PostEffect",
      "MetaInstanceID": "744cf9b0-1329-42c2-8928-b1ce608927c7",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "1",
      "ScaleType": "Linear",
      "EnumValues": [
        {
          "Name": "No",
          "Value": "0"
        },
        {
          "Name": "Yes",
          "Value": "1"
        }
      ]
    },
    {
      "Name": "CellRot",
      "MetaInstanceID": "e5e325da-d421-46bd-8d55-b0b91902abac",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Saturation",
      "MetaInstanceID": "1647eaaf-b065-4f19-bf2f-567076feb73f",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    }
  ],
  "Outputs": [
    {
      "Name": "Image",
      "MetaInstanceID": "afcdc519-6218-450e-b1fd-fab425a6c1ea",
      "MetaID": "9848060d-fd84-45b0-b658-d0d531c61dab"
    }
  ],
  "OperatorParts": [
    {
      "MetaInstanceID": "2b655909-500a-4f7f-ac92-218fa127a86c",
      "MetaID": "da7012ff-a134-431d-8896-f4df8ab42f4e",
      "Name": "SH_Glitch01Func",
      "Version": "4530b8aa-10a9-41cd-8712-cd9fdc758367",
      "Type": "Float",
      "IsMultiInput": "True",
      "Script": [
        "//>>> _using",
        "using System;",
        "using System.Collections.Generic;",
        "using System.Linq;",
        "using System.Text;",
        "using SharpDX;",
        "using SharpDX.Direct3D11;",
        "using SharpDX.Windows;",
        "//<<< _using",
        "",
        "namespace Framefield.Core.IDda7012ff_a134_431d_8896_f4df8ab42f4e",
        "{",
        "    public class Class_SH_Glitch01 : FXImageFunction, Framefield.Core.OperatorPartTraits.ITimeAccessor",
        "    {",
        "        //>>> _inputids",
        "        private enum InputId",
        "        {",
        "            Code = 0,",
        "            LayerCount = 1,",
        "            Zoom = 2,",
        "            PositionX = 3,",
        "            PositionY = 4,",
        "            AnimTime = 5,",
        "            Chop = 6,",
        "            Density = 7,",
        "            PostEffect = 8,",
        "            CellRot = 9,",
        "            Saturation = 10",
        "        }",
        "        //<<< _inputids",
        "",
        "        public override OperatorPartContext Eval(OperatorPartContext context, List<OperatorPart> inputs, int outputIdx) {",
        "            //>>> _params",
        "            var Code = inputs[(int)InputId.Code].Eval(context).Text;",
        "            var LayerCount = inputs[(int)InputId.LayerCount].Eval(context).Value;",
        "            var Zoom = inputs[(int)InputId.Zoom].Eval(context).Value;",
        "            var PositionX = inputs[(int)InputId.PositionX].Eval(context).Value;",
        "            var PositionY = inputs[(int)InputId.PositionY].Eval(context).Value;",
        "            var Position = new Vector2(PositionX, PositionY);",
        "            var AnimTime = inputs[(int)InputId.AnimTime].Eval(context).Value;",
        "            var Chop = inputs[(int)InputId.Chop].Eval(context).Value;",
        "            var Density = inputs[(int)InputId.Density].Eval(context).Value;",
        "            var PostEffect = (int) inputs[(int)InputId.PostEffect].Eval(context).Value;",
        "            var CellRot = inputs[(int)InputId.CellRot].Eval(context).Value;",
        "            var Saturation = inputs[(int)InputId.Saturation].Eval(context).Value;",
        "            //<<< _params",
        "            ",
        "            return PrepareAndEvalOnChange(context, () => {",
        "                ClearRenderTarget(context, new SharpDX.Color4(0, 0, 0, 0));",
        "",
        "                //>>> _setup",
        "                {",
        "                    _effect.GetVariableByName(\"RenderTargetSize\").AsVector().Set(new Vector2(_usedViewport.Width, _usedViewport.Height));",
        "                    _effect.GetVariableByName(\"LayerCount\").AsScalar().Set(LayerCount);",
        "                    _effect.GetVariableByName(\"Zoom\").AsScalar().Set(Zoom);",
        "                    _effect.GetVariableByName(\"Position\").AsVector().Set(new Vector2(PositionX, PositionY));",
        "                    _effect.GetVariableByName(\"AnimTime\").AsScalar().Set(AnimTime);",
        "                    _effect.GetVariableByName(\"Chop\").AsScalar().Set(Chop);",
        "                    _effect.GetVariableByName(\"Density\").AsScalar().Set(Density);",
        "                    _effect.GetVariableByName(\"PostEffect\").AsScalar().Set(PostEffect);",
        "                    _effect.GetVariableByName(\"CellRot\").AsScalar().Set(CellRot);",
        "                    _effect.GetVariableByName(\"Saturation\").AsScalar().Set(Saturation);",
        "                //<<< _setup",
        "",
        "            var skstate = Framefield.Core.OperatorPartContext.SKServerState;",
        "                    _effect.GetVariableByName(\"iBPM\").AsScalar().Set((float)skstate.BPM);",
        "                    _effect.GetVariableByName(\"iProgram\").AsScalar().Set(skstate.ProgramIndex);",
        "                    _effect.GetVariableByName(\"iBeat\").AsScalar().Set((float)skstate.ProgramStreamBeat);",
        "                    //_effect.GetVariableByName(\"iBeatInt\").AsScalar().Set((float)(double)context.Objects[\"SKPlayerBeatInt\"]);",
        "",
        "                _effect.GetVariableByName(\"iTime\").AsScalar().Set(context.Time);",
        "                Render(context);",
        "",
        "                //>>> _cleanup",
        "                }",
        "                //<<< _cleanup",
        "            });",
        "        }",
        "",
        "    }",
        "}",
        "",
        "",
        "",
        ""
      ],
      "AdditionalAssemblies": [
        "LibToollTenfour.dll"
      ]
    }
  ],
  "Operators": [],
  "Connections": [
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "2b655909-500a-4f7f-ac92-218fa127a86c",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "afcdc519-6218-450e-b1fd-fab425a6c1ea"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "83e01b36-e886-4cfc-aa01-410d7118966f",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "2b655909-500a-4f7f-ac92-218fa127a86c"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "e40001fc-805c-49d0-a2f9-2e243de340e9",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "2b655909-500a-4f7f-ac92-218fa127a86c"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "6db1d776-de59-4a73-b122-dd88cb8b2810",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "2b655909-500a-4f7f-ac92-218fa127a86c"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "ce1cb83b-82e5-402f-be1c-48222c4c2fc0",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "2b655909-500a-4f7f-ac92-218fa127a86c"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "52a33f81-45a3-4995-90b8-46107b01e17b",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "2b655909-500a-4f7f-ac92-218fa127a86c"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "d713c4bf-507c-494f-92a2-c5463fb320d8",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "2b655909-500a-4f7f-ac92-218fa127a86c"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "ad57bad3-240c-48c0-8d96-e004a4f0fdc8",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "2b655909-500a-4f7f-ac92-218fa127a86c"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "cf9a4bcf-52f8-4c52-9dce-9d1d6490cd2b",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "2b655909-500a-4f7f-ac92-218fa127a86c"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "744cf9b0-1329-42c2-8928-b1ce608927c7",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "2b655909-500a-4f7f-ac92-218fa127a86c"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "e5e325da-d421-46bd-8d55-b0b91902abac",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "2b655909-500a-4f7f-ac92-218fa127a86c"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "1647eaaf-b065-4f19-bf2f-567076feb73f",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "2b655909-500a-4f7f-ac92-218fa127a86c"
    }
  ]
}