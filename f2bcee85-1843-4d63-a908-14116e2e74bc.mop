{
  "Name": "TunnelTransform",
  "_id": "f2bcee85-1843-4d63-a908-14116e2e74bc",
  "Namespace": "user.tenfour.shaders",
  "Description": "",
  "Inputs": [
    {
      "Name": "Code",
      "MetaInstanceID": "bd9ffb8f-cfdc-4e77-b991-e72aab1457cd",
      "DefaultValue": {
        "Type": "Text",
        "Value": [
          "//>>> _common parameters\r",
          "float4x4 objectToWorldMatrix;",
          "float4x4 worldToCameraMatrix;",
          "float4x4 projMatrix;",
          "Texture2D txDiffuse;",
          "float2 RenderTargetSize;",
          "//<<< _common parameters\r",
          "\r",
          "//>>> _parameters\r",
          "Texture2D Image;",
          "float Shape;",
          "float Rotation;",
          "float2 Offset;",
          "float2 TexScale;",
          "//<<< _parameters\r",
          "\r",
          "const float iTime;\r",
          "static const float PI = atan(1.)*4.;\r",
          "static const float PI2 = atan(1.)*8.;\r",
          "\r",
          "#define iResolution RenderTargetSize\r",
          "#define vec2 float2\r",
          "#define vec3 float3\r",
          "#define vec4 float4\r",
          "#define mat2 float2x2\r",
          "#define fract frac\r",
          "#define mod fmod\r",
          "#define mix lerp\r",
          "#define vec20 (float2(0,0))\r",
          "#define vec30 (float3(0,0,0))\r",
          "#define vec40 (float4(0,0,0,0))\r",
          "#define vec21 (float2(1,1))\r",
          "#define vec31 (float3(1,1,1))\r",
          "#define vec41 (float4(1,1,1,1))\r",
          "#define vec2x(x) (float2((x),(x)))\r",
          "#define vec3x(x) (float3((x),(x),(x)))\r",
          "#define vec4x(x) (float4((x),(x),(x),(x)))\r",
          "\r",
          "SamplerState samLinear",
          "{",
          "    Filter = MIN_MAG_MIP_LINEAR;//ANISOTROPIC;",
          "    AddressU = Wrap;",
          "    AddressV = Wrap;",
          "};",
          "\r",
          "//>>> _declarations\r",
          "struct VS_IN",
          "{",
          "    float4 pos : POSITION;",
          "    float2 texCoord : TEXCOORD;",
          "};",
          "",
          "struct PS_IN",
          "{",
          "    float4 pos : SV_POSITION;",
          "    float2 texCoord: TEXCOORD0;",
          "};",
          "//<<< _declarations\r",
          "\r",
          "//>>> _GS\r",
          "",
          "//<<< _GS\r",
          "\r",
          "//>>> _VS \r",
          "PS_IN VS( VS_IN input )",
          "{",
          "    PS_IN output = (PS_IN)0;",
          "",
          "    output.pos = mul(input.pos, worldToCameraMatrix);",
          "    output.pos = mul(output.pos, projMatrix);",
          "    output.texCoord = input.texCoord;",
          "",
          "    return output;",
          "}",
          "//<<< _VS\r",
          "\r",
          "//>>> PS\r",
          "\r",
          "mat2 rot2D(float r){\r",
          "    return mat2(cos(r), sin(r), -sin(r), cos(r));\r",
          "}\r",
          "\r",
          "void mainImage( out vec4 o, vec2 C)\r",
          "{\r",
          "    vec2 R = iResolution.xy;\r",
          "    vec2 uv = C/R.xy-.5;\r",
          "    vec2 N = uv;\r",
          "    uv.x *= R.x/R.y;\r",
          "    \r",
          "    uv = mul(uv, rot2D(Rotation));\r",
          "    \r",
          "    uv =sign(uv) * pow(abs(uv), Shape);\r",
          "    //uv.y *= 2.;\r",
          "    \r",
          "    float a = atan2(uv.x, uv.y)/PI2;\r",
          "    a *= TexScale.x;\r",
          "    a += Offset.x;\r",
          "    //a += .5;\r",
          "    //a += iTime;\r",
          "    \r",
          "    float z = 1.0/TexScale.y/length(uv);\r",
          "    z += Offset.y;\r",
          "    \r",
          "    o = Image.Sample(samLinear, float2(a, z));\r",
          "    o *= length(uv);\r",
          "}\r",
          "\r",
          "\r",
          "\r",
          "\r",
          "\r",
          "float4 PS( PS_IN input ) : SV_Target\r",
          "{\r",
          "    float4 o;\r",
          "    mainImage(o, input.pos.xy);\r",
          "    o = clamp(o,0.,1.);\r",
          "    o.a = 1.0;\r",
          "    return o;\r",
          "}\r",
          "",
          "//<<< PS\r",
          "\r",
          "\r",
          "//>>> _technique\r",
          "technique10 Render",
          "{",
          "    pass P0",
          "    {",
          "        SetGeometryShader( 0 );",
          "        SetVertexShader( CompileShader( vs_4_0, VS() ) );",
          "        SetPixelShader( CompileShader( ps_4_0, PS() ) );",
          "    }",
          "}",
          "//<<< _technique\r",
          ""
        ]
      },
      "MetaID": "c522a66e-3260-4692-b3e3-79fd0361fa3d",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Image",
      "MetaInstanceID": "8440da01-c36f-47fd-a6f9-8803a5504ec7",
      "DefaultValue": {
        "Type": "Image",
        "Value": "Framefield.Core.Image"
      },
      "MetaID": "9848060d-fd84-45b0-b658-d0d531c61dab",
      "IsMultiInput": "False",
      "Relevance": "Required",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Shape",
      "MetaInstanceID": "125b90af-8897-4ea8-a236-21e8a43f8c9e",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Rotation",
      "MetaInstanceID": "239f3b21-e88d-4bb2-b509-e71f573844de",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Offset.X",
      "MetaInstanceID": "9132318f-9543-4393-8cd3-fbbed413ba6d",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Offset.Y",
      "MetaInstanceID": "25ae6848-de88-4fad-b1e6-eafb47634e35",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "TexScale.X",
      "MetaInstanceID": "68c92004-5296-4908-be5c-928143338ab7",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "TexScale.Y",
      "MetaInstanceID": "0b150722-b9c1-4d63-afaf-e755004d9463",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    }
  ],
  "Outputs": [
    {
      "Name": "Image",
      "MetaInstanceID": "0a1a7072-a519-4e7c-9df0-41b631ea01a5",
      "MetaID": "9848060d-fd84-45b0-b658-d0d531c61dab"
    }
  ],
  "OperatorParts": [
    {
      "MetaInstanceID": "fcbd2f15-d183-42ad-82d7-fdf4f803df71",
      "MetaID": "449ae06d-db92-431c-9339-c890325755ac",
      "Name": "TunnelTransformFunc",
      "Version": "82aa47ca-4b1d-4be6-8737-c02c037784ee",
      "Type": "Float",
      "IsMultiInput": "True",
      "Script": [
        "//>>> _using",
        "using System;",
        "using System.Collections.Generic;",
        "using System.Linq;",
        "using System.Text;",
        "using SharpDX;",
        "using SharpDX.Direct3D11;",
        "using SharpDX.Windows;",
        "//<<< _using",
        "",
        "namespace Framefield.Core.ID449ae06d_db92_431c_9339_c890325755ac",
        "{",
        "    public class Class_TunnelTransform : FXImageFunction, Framefield.Core.OperatorPartTraits.ITimeAccessor",
        "    {",
        "        //>>> _inputids",
        "        private enum InputId",
        "        {",
        "            Code = 0,",
        "            Image = 1,",
        "            Shape = 2,",
        "            Rotation = 3,",
        "            OffsetX = 4,",
        "            OffsetY = 5,",
        "            TexScaleX = 6,",
        "            TexScaleY = 7",
        "        }",
        "        //<<< _inputids",
        "",
        "        public override OperatorPartContext Eval(OperatorPartContext context, List<OperatorPart> inputs, int outputIdx) {",
        "            //>>> _params",
        "            var Code = inputs[(int)InputId.Code].Eval(context).Text;",
        "            var Image = inputs[(int)InputId.Image].Eval(context).Image; // Needs to be checked for null!",
        "            var Shape = inputs[(int)InputId.Shape].Eval(context).Value;",
        "            var Rotation = inputs[(int)InputId.Rotation].Eval(context).Value;",
        "            var OffsetX = inputs[(int)InputId.OffsetX].Eval(context).Value;",
        "            var OffsetY = inputs[(int)InputId.OffsetY].Eval(context).Value;",
        "            var Offset = new Vector2(OffsetX, OffsetY);",
        "            var TexScaleX = inputs[(int)InputId.TexScaleX].Eval(context).Value;",
        "            var TexScaleY = inputs[(int)InputId.TexScaleY].Eval(context).Value;",
        "            var TexScale = new Vector2(TexScaleX, TexScaleY);",
        "            //<<< _params",
        "            ",
        "            return PrepareAndEvalOnChange(context, () => {",
        "                ClearRenderTarget(context, new SharpDX.Color4(0, 0, 0, 0));",
        "",
        "                //>>> _setup",
        "                using (var ImageView = new ShaderResourceView(context.D3DDevice, Image))",
        "                {",
        "                    _effect.GetVariableByName(\"RenderTargetSize\").AsVector().Set(new Vector2(_usedViewport.Width, _usedViewport.Height));",
        "                    _effect.GetVariableByName(\"Image\").AsShaderResource().SetResource(ImageView);",
        "                    _effect.GetVariableByName(\"Shape\").AsScalar().Set(Shape);",
        "                    _effect.GetVariableByName(\"Rotation\").AsScalar().Set(Rotation);",
        "                    _effect.GetVariableByName(\"Offset\").AsVector().Set(new Vector2(OffsetX, OffsetY));",
        "                    _effect.GetVariableByName(\"TexScale\").AsVector().Set(new Vector2(TexScaleX, TexScaleY));",
        "                //<<< _setup",
        "",
        "                _effect.GetVariableByName(\"iTime\").AsScalar().Set(context.Time);",
        "                Render(context);",
        "",
        "                //>>> _cleanup",
        "                }",
        "                //<<< _cleanup",
        "            });",
        "        }",
        "",
        "    }",
        "}",
        "",
        "",
        "",
        ""
      ],
      "AdditionalAssemblies": [
        "LibToollTenfour.dll"
      ]
    }
  ],
  "Operators": [],
  "Connections": [
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "fcbd2f15-d183-42ad-82d7-fdf4f803df71",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "0a1a7072-a519-4e7c-9df0-41b631ea01a5"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "bd9ffb8f-cfdc-4e77-b991-e72aab1457cd",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "fcbd2f15-d183-42ad-82d7-fdf4f803df71"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "8440da01-c36f-47fd-a6f9-8803a5504ec7",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "fcbd2f15-d183-42ad-82d7-fdf4f803df71"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "125b90af-8897-4ea8-a236-21e8a43f8c9e",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "fcbd2f15-d183-42ad-82d7-fdf4f803df71"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "239f3b21-e88d-4bb2-b509-e71f573844de",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "fcbd2f15-d183-42ad-82d7-fdf4f803df71"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "9132318f-9543-4393-8cd3-fbbed413ba6d",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "fcbd2f15-d183-42ad-82d7-fdf4f803df71"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "25ae6848-de88-4fad-b1e6-eafb47634e35",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "fcbd2f15-d183-42ad-82d7-fdf4f803df71"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "68c92004-5296-4908-be5c-928143338ab7",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "fcbd2f15-d183-42ad-82d7-fdf4f803df71"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "0b150722-b9c1-4d63-afaf-e755004d9463",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "fcbd2f15-d183-42ad-82d7-fdf4f803df71"
    }
  ]
}