{
  "Name": "SKCellRotozoom",
  "_id": "67dd9002-adf2-4553-926a-9d9aadf97522",
  "Namespace": "user.tenfour",
  "Description": "Divides an image into rectangular cells, and performs transformations on them",
  "Inputs": [
    {
      "Name": "Code",
      "MetaInstanceID": "8d766aac-5b19-46c2-861a-d3ed95d64356",
      "DefaultValue": {
        "Type": "Text",
        "Value": [
          "//>>> _common parameters\r",
          "float4x4 objectToWorldMatrix;",
          "float4x4 worldToCameraMatrix;",
          "float4x4 projMatrix;",
          "Texture2D txDiffuse;",
          "float2 RenderTargetSize;",
          "//<<< _common parameters\r",
          "\r",
          "//>>> _parameters\r",
          "Texture2D Image;",
          "float2 CellCount;",
          "float Rotation;",
          "float2 ScalingCenter;",
          "float2 Scale;",
          "float2 RotationCenter;",
          "float2 CellScaleCenter;",
          "float2 ScaleRadialEffect;",
          "float RandomSeed;",
          "float2 ScaleRandomEffect;",
          "float RotationRadialSpeed;",
          "float RotationRadialOffset;",
          "float RotationRandomEffect;",
          "float RotationAlternation;",
          "float CellWrapMode;",
          "float2 CellSkew;",
          "float2 CellSkewCenter;",
          "//<<< _parameters\r",
          "\r",
          "static const float PI = atan(1.)*4.;\r",
          "static const float PI2 = atan(1.)*8.;\r",
          "\r",
          "#define iResolution RenderTargetSize\r",
          "\r",
          "//>>> _setup\r",
          "SamplerState samLinear",
          "{",
          "    Filter = MIN_MAG_MIP_LINEAR;",
          "    AddressU = Clamp;",
          "    AddressV = Clamp;",
          "};",
          "//<<< _setup\r",
          "\r",
          "SamplerState samLinearWrap\r",
          "{\r",
          "    Filter = MIN_MAG_MIP_LINEAR;\r",
          "    AddressU = Wrap;\r",
          "    AddressV = Wrap;\r",
          "};\r",
          "\r",
          "//>>> _declarations\r",
          "struct VS_IN",
          "{",
          "    float4 pos : POSITION;",
          "    float2 texCoord : TEXCOORD;",
          "};",
          "",
          "struct PS_IN",
          "{",
          "    float4 pos : SV_POSITION;",
          "    float2 texCoord: TEXCOORD0;",
          "};",
          "//<<< _declarations\r",
          "\r",
          "//>>> _GS\r",
          "",
          "//<<< _GS\r",
          "\r",
          "//>>> _VS \r",
          "PS_IN VS( VS_IN input )",
          "{",
          "    PS_IN output = (PS_IN)0;",
          "",
          "    output.pos = mul(input.pos, worldToCameraMatrix);",
          "    output.pos = mul(output.pos, projMatrix);",
          "    output.texCoord = input.texCoord;",
          "",
          "    return output;",
          "}",
          "//<<< _VS\r",
          "\r",
          "float4x4 transformMatrix;\r",
          "\r",
          "//>>> PS\r",
          "\r",
          "void rot2D(inout float2 uv, float r){\r",
          "    float s = sin(r), c = cos(r);\r",
          "    uv = mul(uv, float2x2(c, -s, s, c));\r",
          "}\r",
          "\r",
          "// cell small template\r",
          "float4 hash42(float2 p)\r",
          "{\r",
          "\tfloat4 p4 = frac(p.xyxy * float4(.1031, .1030, .0973, .1099));\r",
          "    p4 += dot(p4, p4.wzxy+33.33);\r",
          "    return frac((p4.xxyz+p4.yzzw)*p4.zywx);\r",
          "}\r",
          "\r",
          "// if enabled==0, we want parity to be 1 (identity).\r",
          "// if enabled==1, we want to return parity unchanged (-1 or 1)\r",
          "// easiest way to do this is shift amounts and return sign(amt).\r",
          "float2 GetParityFact(float parity, float2 enabled) {\r",
          "    float2 shift = 1.5 - enabled;// if disabled, then we want to shift parity into the positive\r",
          "    shift += parity;//parity += shift;// now when enabled (shift=.5), parity stays the same sign(-.5 or 1.5).\r",
          "    // when disabled (shift=1.5), parity is either .5 or 2.5. always positive.\r",
          "    return sign(shift);\r",
          "}\r",
          "float GetParityFact(float parity, float enabled) {\r",
          "    float shift = 1.5 - enabled;// if disabled, then we want to shift parity into the positive\r",
          "    shift += parity;//parity += shift;// now when enabled (shift=.5), parity stays the same sign(-.5 or 1.5).\r",
          "    // when disabled (shift=1.5), parity is either .5 or 2.5. always positive.\r",
          "    return sign(shift);\r",
          "}\r",
          "\r",
          "float4 PS( PS_IN input ) : SV_Target\r",
          "{\r",
          "    // in order to make CELLS scale from the center of the screen\r",
          "    input.texCoord -= CellSkewCenter;\r",
          "    input.texCoord += CellSkew * input.texCoord.yx;\r",
          "    input.texCoord += CellSkewCenter;\r",
          "\r",
          "    float2 cellOrig = floor((input.texCoord - CellScaleCenter) * CellCount) / CellCount;\r",
          "    cellOrig += CellScaleCenter;\r",
          "\r",
          "    float2 cellParity = input.texCoord - CellScaleCenter;// uv coords in phase\r",
          "    cellParity *= CellCount * .5;// integral cell id now.\r",
          "    cellParity = frac(cellParity) - .5;// alternating sign.\r",
          "    cellParity = sign(cellParity);\r",
          "    //if (cellParity.x == 0) cellParity.x = -1;\r",
          "   // if (cellParity.y == 0) cellParity.y = -1;\r",
          "    \r",
          "    //return float4(cellParity*.5+.5, 0, 1);\r",
          "    \r",
          "    //float cellParity1 = sign(frac(cellParity.x * cellParity.y)-.5);\r",
          "    float cellParity1 = cellParity.x * cellParity.y;\r",
          "    //return float4(cellParity1, 0, 0, 1);\r",
          "\r",
          "    //if (length(input.texCoord - cellOrig) < .01) {\r",
          "    //    return float4(1,0,0,1);\r",
          "   // }\r",
          "    \r",
          "    float2 _scale = Scale;\r",
          "    float _rotation = Rotation;\r",
          "    //float2 _translation = Translate;\r",
          "    //float2 _skew = Skew;\r",
          "    \r",
          "    float2 cellSize = 1.0 / CellCount;\r",
          "    float len1 = length(cellOrig - .5 + cellSize * .5);// distance from center of cell to center of viewport\r",
          "    float4 h = hash42(cellOrig + 1e3 + RandomSeed);\r",
          "    _scale += (h.xy - .5) * ScaleRandomEffect;\r",
          "    _scale *= 1 + (len1 * ScaleRadialEffect);\r",
          "    \r",
          "    _rotation += (h.z - .5) * RotationRandomEffect;\r",
          "    _rotation *= 1 + (pow(len1, RotationRadialSpeed));\r",
          "    //float rr = len1 * RotationRadialOffset;\r",
          "    //_rotation += rr;\r",
          "    _rotation *= GetParityFact(cellParity1, RotationAlternation);\r",
          "    /*\r",
          "    _translation += len1 * TranslateRadialEffect;\r",
          "    _translation += (h.wx - .5) * TranslateRandomEffect;\r",
          "    _translation *= GetParityFact(cellParity1, TranslationAlternation);\r",
          "\r",
          "    _skew += len1 * SkewRadialEffect;\r",
          "    _skew += (h.ra - .5) * SkewRandomEffect;\r",
          "    _skew *= GetParityFact(cellParity1, SkewAlternation);\r",
          "*/\r",
          "    float2 uv = (input.texCoord - cellOrig) / cellSize;// map this cell to 0-1 uv\r",
          "    \r",
          "    //uv += _translation;\r",
          "     \r",
          "    uv -= ScalingCenter;\r",
          "    uv *= _scale;\r",
          "    uv += ScalingCenter;\r",
          "/*\r",
          "    uv -= SkewCenter;\r",
          "    uv += _skew * uv.yx;\r",
          "    uv += SkewCenter;\r",
          "*/\r",
          "    uv -= RotationCenter;\r",
          "    rot2D(uv, _rotation);\r",
          "    uv += RotationCenter;\r",
          "\r",
          "    // wholeimage mode is handled by the sampler state.\r",
          "    float a = 1;\r",
          "    if (CellWrapMode == 0)// intracell\r",
          "        uv = frac(uv);// after transformation, wrap coords to 0-1. better handled by sampler state.\r",
          "    else if (CellWrapMode == 2)  {// Transparent\r",
          "        float2 s = step(0, uv);// check if <= 0\r",
          "        s *= step(uv, 1);// check if >= 1\r",
          "        a = min(s.x, s.y);\r",
          "    }\r",
          "    else if (CellWrapMode == 3) {// 3 = mirror\r",
          "        // effectively this is a triangle wave\r",
          "        uv /= 2;// period 1 becomes period 2 (so each wave stage is 1, and there are 2 stages to the wave)\r",
          "        uv = frac(uv);// sawtooth\r",
          "        uv = abs(uv - .5);// triangle between 0 and .5\r",
          "        uv *= 2;// triangle between 0-1\r",
          "        uv = 1.-uv;// invert phase\r",
          "    }\r",
          "    \r",
          "    uv /= CellCount;// scale back to real uv\r",
          "    uv += cellOrig;// and place back in the cell.        \r",
          "    return Image.Sample(samLinearWrap, uv) * float4(1,1,1,a);\r",
          "}\r",
          "\r",
          "//<<< PS\r",
          "\r",
          "\r",
          "//>>> _technique\r",
          "technique10 Render",
          "{",
          "    pass P0",
          "    {",
          "        SetGeometryShader( 0 );",
          "        SetVertexShader( CompileShader( vs_4_0, VS() ) );",
          "        SetPixelShader( CompileShader( ps_4_0, PS() ) );",
          "    }",
          "}",
          "//<<< _technique\r",
          ""
        ]
      },
      "MetaID": "c522a66e-3260-4692-b3e3-79fd0361fa3d",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Image",
      "MetaInstanceID": "8d2a67df-6dc7-4be6-b74a-3d058f12133a",
      "DefaultValue": {
        "Type": "Image",
        "Value": "Framefield.Core.Image"
      },
      "MetaID": "9848060d-fd84-45b0-b658-d0d531c61dab",
      "IsMultiInput": "False",
      "Relevance": "Required",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "RandomSeed",
      "MetaInstanceID": "5c913a91-3d86-403e-947e-b5d638edd452",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "CellCount.X",
      "MetaInstanceID": "047e5888-146d-4307-bc3f-84754ecb6489",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "CellCount.Y",
      "MetaInstanceID": "4a89d1ac-19f0-4316-a76a-2037b4606528",
      "DefaultValue": {
        "Type": "Float",
        "Value": "5"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "1",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "CellScaleCenter.X",
      "MetaInstanceID": "a62b2fb6-0028-4389-ba20-8479e5bc70db",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.001",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "CellScaleCenter.Y",
      "MetaInstanceID": "47c9c93c-f403-449c-a1c4-51b4dd1a1861",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.5"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.001",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "CellSkew.X",
      "MetaInstanceID": "70dc88d0-2187-41f4-9664-5535a8c98ab5",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.005",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "CellSkew.Y",
      "MetaInstanceID": "b9f506fd-0f14-443f-b8d2-bb74078f25bd",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.005",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "CellSkewCenter.X",
      "MetaInstanceID": "d284873b-ed5a-4b44-b177-68c3daa0e6f3",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.5"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.001",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "CellSkewCenter.Y",
      "MetaInstanceID": "bd0a5d9d-4cb8-43a4-a998-88d3e12305dc",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.5"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.001",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "CellWrapMode",
      "MetaInstanceID": "3e948cec-d647-4645-bbf8-1e8bbe976fde",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "1",
      "ScaleType": "Linear",
      "EnumValues": [
        {
          "Name": "Intracell",
          "Value": "0"
        },
        {
          "Name": "WholeImage",
          "Value": "1"
        },
        {
          "Name": "Transparent",
          "Value": "2"
        },
        {
          "Name": "Mirror",
          "Value": "3"
        }
      ]
    },
    {
      "Name": "Scale.X",
      "MetaInstanceID": "41d12385-fbe6-4c10-b57c-f86dd80aa2aa",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Scale.Y",
      "MetaInstanceID": "2a811434-73d9-4591-9332-201822714b07",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "ScalingCenter.X",
      "MetaInstanceID": "735edabe-4d72-443a-91b6-baa6dd757d52",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.001",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "ScalingCenter.Y",
      "MetaInstanceID": "1647ae59-2c48-4bfd-88e4-03bdcfe1b351",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.5"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.001",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "ScaleRandomEffect.X",
      "MetaInstanceID": "9237d982-0ecb-4b88-ae96-f84a420f3ba8",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.001",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "ScaleRandomEffect.Y",
      "MetaInstanceID": "fb14eaa4-5c6c-4ff6-8a45-24b0e1e57480",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.001",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Rotation",
      "MetaInstanceID": "c88d6a89-88c8-4e18-b8e2-8ba6bfa16284",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "RotationCenter.X",
      "MetaInstanceID": "b4fefc19-0e30-4c74-8f5f-59fac288ff27",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.5"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.001",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "RotationCenter.Y",
      "MetaInstanceID": "ffc2d9f5-6edc-4623-9f51-6512774f7db1",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.5"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.001",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "RotationRandomEffect",
      "MetaInstanceID": "a87904cf-cdb8-4bf1-91ee-15cf893ce9bc",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "RotationAlternation",
      "MetaInstanceID": "86f4018f-cbc2-4af0-9161-3efe6501ddee",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "1",
      "ScaleType": "Linear",
      "EnumValues": []
    }
  ],
  "Outputs": [
    {
      "Name": "Image",
      "MetaInstanceID": "437a2565-92d5-417a-ae2f-6ae2c8eb17ef",
      "MetaID": "9848060d-fd84-45b0-b658-d0d531c61dab"
    }
  ],
  "OperatorParts": [
    {
      "MetaInstanceID": "f059cf3c-9726-4e2f-83de-2261dc42bae8",
      "MetaID": "c7cdf545-4e03-4a7b-9664-7932df3e5035",
      "Name": "SKCellRotozoomFunc",
      "Version": "100a76d8-108f-446d-ac99-83e0e3af5d26",
      "Type": "Float",
      "IsMultiInput": "True",
      "Script": [
        "//>>> _using",
        "using System;",
        "using System.Collections.Generic;",
        "using System.Linq;",
        "using System.Text;",
        "using SharpDX;",
        "using SharpDX.Direct3D11;",
        "using SharpDX.Windows;",
        "//<<< _using",
        "",
        "namespace Framefield.Core.IDc7cdf545_4e03_4a7b_9664_7932df3e5035",
        "{",
        "    public class Class_SKCellRotozoom : FXImageFunction, Framefield.Core.OperatorPartTraits.ITimeAccessor",
        "    {",
        "        //>>> _inputids",
        "        private enum InputId",
        "        {",
        "            Code = 0,",
        "            Image = 1,",
        "            CellCountX = 2,",
        "            CellCountY = 3,",
        "            Rotation = 4,",
        "            ScalingCenterX = 5,",
        "            ScalingCenterY = 6,",
        "            ScaleX = 7,",
        "            ScaleY = 8,",
        "            RotationCenterX = 9,",
        "            RotationCenterY = 10,",
        "            CellScaleCenterX = 11,",
        "            CellScaleCenterY = 12,",
        "            RandomSeed = 13,",
        "            ScaleRandomEffectX = 14,",
        "            ScaleRandomEffectY = 15,",
        "            RotationRandomEffect = 16,",
        "            RotationAlternation = 17,",
        "            CellWrapMode = 18,",
        "            CellSkewX = 19,",
        "            CellSkewY = 20,",
        "            CellSkewCenterX = 21,",
        "            CellSkewCenterY = 22",
        "        }",
        "        //<<< _inputids",
        "        ",
        "        public override OperatorPartContext Eval(OperatorPartContext context, List<OperatorPart> inputs, int outputIdx) {",
        "            //>>> _params",
        "            var Code = inputs[(int)InputId.Code].Eval(context).Text;",
        "            var Image = inputs[(int)InputId.Image].Eval(context).Image; // Needs to be checked for null!",
        "            var CellCountX = inputs[(int)InputId.CellCountX].Eval(context).Value;",
        "            var CellCountY = inputs[(int)InputId.CellCountY].Eval(context).Value;",
        "            var CellCount = new Vector2(CellCountX, CellCountY);",
        "            var Rotation = inputs[(int)InputId.Rotation].Eval(context).Value;",
        "            var ScalingCenterX = inputs[(int)InputId.ScalingCenterX].Eval(context).Value;",
        "            var ScalingCenterY = inputs[(int)InputId.ScalingCenterY].Eval(context).Value;",
        "            var ScalingCenter = new Vector2(ScalingCenterX, ScalingCenterY);",
        "            var ScaleX = inputs[(int)InputId.ScaleX].Eval(context).Value;",
        "            var ScaleY = inputs[(int)InputId.ScaleY].Eval(context).Value;",
        "            var Scale = new Vector2(ScaleX, ScaleY);",
        "            var RotationCenterX = inputs[(int)InputId.RotationCenterX].Eval(context).Value;",
        "            var RotationCenterY = inputs[(int)InputId.RotationCenterY].Eval(context).Value;",
        "            var RotationCenter = new Vector2(RotationCenterX, RotationCenterY);",
        "            var CellScaleCenterX = inputs[(int)InputId.CellScaleCenterX].Eval(context).Value;",
        "            var CellScaleCenterY = inputs[(int)InputId.CellScaleCenterY].Eval(context).Value;",
        "            var CellScaleCenter = new Vector2(CellScaleCenterX, CellScaleCenterY);",
        "            var RandomSeed = inputs[(int)InputId.RandomSeed].Eval(context).Value;",
        "            var ScaleRandomEffectX = inputs[(int)InputId.ScaleRandomEffectX].Eval(context).Value;",
        "            var ScaleRandomEffectY = inputs[(int)InputId.ScaleRandomEffectY].Eval(context).Value;",
        "            var ScaleRandomEffect = new Vector2(ScaleRandomEffectX, ScaleRandomEffectY);",
        "            var RotationRandomEffect = inputs[(int)InputId.RotationRandomEffect].Eval(context).Value;",
        "            var RotationAlternation = inputs[(int)InputId.RotationAlternation].Eval(context).Value;",
        "            var CellWrapMode = (int) inputs[(int)InputId.CellWrapMode].Eval(context).Value;",
        "            var CellSkewX = inputs[(int)InputId.CellSkewX].Eval(context).Value;",
        "            var CellSkewY = inputs[(int)InputId.CellSkewY].Eval(context).Value;",
        "            var CellSkew = new Vector2(CellSkewX, CellSkewY);",
        "            var CellSkewCenterX = inputs[(int)InputId.CellSkewCenterX].Eval(context).Value;",
        "            var CellSkewCenterY = inputs[(int)InputId.CellSkewCenterY].Eval(context).Value;",
        "            var CellSkewCenter = new Vector2(CellSkewCenterX, CellSkewCenterY);",
        "            //<<< _params",
        "            ",
        "            return PrepareAndEvalOnChange(context, () => {",
        "                ClearRenderTarget(context, new SharpDX.Color4(0, 0, 0, 0));",
        "                if (Image == null) {",
        "                    return;",
        "                }",
        "",
        "                //>>> _setup",
        "                using (var ImageView = new ShaderResourceView(context.D3DDevice, Image))",
        "                {",
        "                    _effect.GetVariableByName(\"RenderTargetSize\").AsVector().Set(new Vector2(_usedViewport.Width, _usedViewport.Height));",
        "                    _effect.GetVariableByName(\"Image\").AsShaderResource().SetResource(ImageView);",
        "                    _effect.GetVariableByName(\"CellCount\").AsVector().Set(new Vector2(CellCountX, CellCountY));",
        "                    _effect.GetVariableByName(\"Rotation\").AsScalar().Set(Rotation);",
        "                    _effect.GetVariableByName(\"ScalingCenter\").AsVector().Set(new Vector2(ScalingCenterX, ScalingCenterY));",
        "                    _effect.GetVariableByName(\"Scale\").AsVector().Set(new Vector2(ScaleX, ScaleY));",
        "                    _effect.GetVariableByName(\"RotationCenter\").AsVector().Set(new Vector2(RotationCenterX, RotationCenterY));",
        "                    _effect.GetVariableByName(\"CellScaleCenter\").AsVector().Set(new Vector2(CellScaleCenterX, CellScaleCenterY));",
        "                    _effect.GetVariableByName(\"RandomSeed\").AsScalar().Set(RandomSeed);",
        "                    _effect.GetVariableByName(\"ScaleRandomEffect\").AsVector().Set(new Vector2(ScaleRandomEffectX, ScaleRandomEffectY));",
        "                    _effect.GetVariableByName(\"RotationRandomEffect\").AsScalar().Set(RotationRandomEffect);",
        "                    _effect.GetVariableByName(\"RotationAlternation\").AsScalar().Set(RotationAlternation);",
        "                    _effect.GetVariableByName(\"CellWrapMode\").AsScalar().Set(CellWrapMode);",
        "                    _effect.GetVariableByName(\"CellSkew\").AsVector().Set(new Vector2(CellSkewX, CellSkewY));",
        "                    _effect.GetVariableByName(\"CellSkewCenter\").AsVector().Set(new Vector2(CellSkewCenterX, CellSkewCenterY));",
        "                //<<< _setup",
        "                ",
        "                //Pivot /= CellCount;",
        "                //Translate /= CellCount;",
        "                ",
        "                /*var _transform = Matrix.Transformation2D(",
        "                    Pivot, 0,// scaling center, scalingrotation",
        "                    Scale,// scaling",
        "                    Pivot,// rot center",
        "                    Rotation,// rotation",
        "                    Translate);",
        "",
        "                _effect.GetVariableByName(\"transformMatrix\").AsMatrix().SetMatrix(_transform);",
        "*/",
        "",
        "                Render(context);",
        "",
        "                //>>> _cleanup",
        "                }",
        "                //<<< _cleanup",
        "            });",
        "        }",
        "",
        "    }",
        "}",
        "",
        "",
        "",
        ""
      ],
      "AdditionalAssemblies": [
        "LibToollTenfour.dll"
      ]
    }
  ],
  "Operators": [],
  "Connections": [
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "f059cf3c-9726-4e2f-83de-2261dc42bae8",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "437a2565-92d5-417a-ae2f-6ae2c8eb17ef"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "8d766aac-5b19-46c2-861a-d3ed95d64356",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "f059cf3c-9726-4e2f-83de-2261dc42bae8"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "8d2a67df-6dc7-4be6-b74a-3d058f12133a",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "f059cf3c-9726-4e2f-83de-2261dc42bae8"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "047e5888-146d-4307-bc3f-84754ecb6489",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "f059cf3c-9726-4e2f-83de-2261dc42bae8"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "4a89d1ac-19f0-4316-a76a-2037b4606528",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "f059cf3c-9726-4e2f-83de-2261dc42bae8"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "c88d6a89-88c8-4e18-b8e2-8ba6bfa16284",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "f059cf3c-9726-4e2f-83de-2261dc42bae8"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "735edabe-4d72-443a-91b6-baa6dd757d52",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "f059cf3c-9726-4e2f-83de-2261dc42bae8"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "1647ae59-2c48-4bfd-88e4-03bdcfe1b351",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "f059cf3c-9726-4e2f-83de-2261dc42bae8"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "41d12385-fbe6-4c10-b57c-f86dd80aa2aa",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "f059cf3c-9726-4e2f-83de-2261dc42bae8"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "2a811434-73d9-4591-9332-201822714b07",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "f059cf3c-9726-4e2f-83de-2261dc42bae8"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "b4fefc19-0e30-4c74-8f5f-59fac288ff27",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "f059cf3c-9726-4e2f-83de-2261dc42bae8"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "ffc2d9f5-6edc-4623-9f51-6512774f7db1",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "f059cf3c-9726-4e2f-83de-2261dc42bae8"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "a62b2fb6-0028-4389-ba20-8479e5bc70db",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "f059cf3c-9726-4e2f-83de-2261dc42bae8"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "47c9c93c-f403-449c-a1c4-51b4dd1a1861",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "f059cf3c-9726-4e2f-83de-2261dc42bae8"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "5c913a91-3d86-403e-947e-b5d638edd452",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "f059cf3c-9726-4e2f-83de-2261dc42bae8"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "9237d982-0ecb-4b88-ae96-f84a420f3ba8",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "f059cf3c-9726-4e2f-83de-2261dc42bae8"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "fb14eaa4-5c6c-4ff6-8a45-24b0e1e57480",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "f059cf3c-9726-4e2f-83de-2261dc42bae8"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "a87904cf-cdb8-4bf1-91ee-15cf893ce9bc",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "f059cf3c-9726-4e2f-83de-2261dc42bae8"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "86f4018f-cbc2-4af0-9161-3efe6501ddee",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "f059cf3c-9726-4e2f-83de-2261dc42bae8"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "3e948cec-d647-4645-bbf8-1e8bbe976fde",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "f059cf3c-9726-4e2f-83de-2261dc42bae8"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "70dc88d0-2187-41f4-9664-5535a8c98ab5",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "f059cf3c-9726-4e2f-83de-2261dc42bae8"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "b9f506fd-0f14-443f-b8d2-bb74078f25bd",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "f059cf3c-9726-4e2f-83de-2261dc42bae8"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "d284873b-ed5a-4b44-b177-68c3daa0e6f3",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "f059cf3c-9726-4e2f-83de-2261dc42bae8"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "bd0a5d9d-4cb8-43a4-a998-88d3e12305dc",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "f059cf3c-9726-4e2f-83de-2261dc42bae8"
    }
  ]
}