{
  "Name": "SH_Glitch08",
  "_id": "fe87a067-57c3-43aa-b04a-cdefac78baa7",
  "Namespace": "user.tenfour.shaders",
  "Description": "",
  "Inputs": [
    {
      "Name": "Code",
      "MetaInstanceID": "7041811a-d532-4a55-a464-62d8f8097d82",
      "DefaultValue": {
        "Type": "Text",
        "Value": [
          "//>>> _common parameters\r",
          "float4x4 objectToWorldMatrix;",
          "float4x4 worldToCameraMatrix;",
          "float4x4 projMatrix;",
          "Texture2D txDiffuse;",
          "float2 RenderTargetSize;",
          "//<<< _common parameters\r",
          "\r",
          "//>>> _parameters\r",
          "float Zoom;",
          "float CellDrift;",
          "float Animate;",
          "float Layers;",
          "float Density;",
          "float2 Position;",
          "float Saturation;",
          "float Vingette;",
          "//<<< _parameters\r",
          "\r",
          "const float iBPM;\r",
          "const float iProgram;\r",
          "const float iTime;\r",
          "const float iBeat;\r",
          "static const float PI = atan(1.)*4.;\r",
          "static const float PI2 = atan(1.)*8.;\r",
          "\r",
          "#define iResolution RenderTargetSize\r",
          "#define vec2 float2\r",
          "#define vec3 float3\r",
          "#define vec4 float4\r",
          "#define mat2 float2x2\r",
          "#define fract frac\r",
          "#define mod fmod\r",
          "#define mix lerp\r",
          "#define vec20 (float2(0,0))\r",
          "#define vec30 (float3(0,0,0))\r",
          "#define vec40 (float4(0,0,0,0))\r",
          "#define vec21 (float2(1,1))\r",
          "#define vec31 (float3(1,1,1))\r",
          "#define vec41 (float4(1,1,1,1))\r",
          "#define vec2x(x) (float2((x),(x)))\r",
          "#define vec3x(x) (float3((x),(x),(x)))\r",
          "#define vec4x(x) (float4((x),(x),(x),(x)))\r",
          "\r",
          "//>>> _setup\r",
          "SamplerState samLinear",
          "{",
          "    Filter = MIN_MAG_MIP_LINEAR;",
          "    AddressU = Clamp;",
          "    AddressV = Clamp;",
          "};",
          "//<<< _setup\r",
          "\r",
          "//>>> _declarations\r",
          "struct VS_IN",
          "{",
          "    float4 pos : POSITION;",
          "    float2 texCoord : TEXCOORD;",
          "};",
          "",
          "struct PS_IN",
          "{",
          "    float4 pos : SV_POSITION;",
          "    float2 texCoord: TEXCOORD0;",
          "};",
          "//<<< _declarations\r",
          "\r",
          "//>>> _GS\r",
          "",
          "//<<< _GS\r",
          "\r",
          "//>>> _VS \r",
          "PS_IN VS( VS_IN input )",
          "{",
          "    PS_IN output = (PS_IN)0;",
          "",
          "    output.pos = mul(input.pos, worldToCameraMatrix);",
          "    output.pos = mul(output.pos, projMatrix);",
          "    output.texCoord = input.texCoord;",
          "",
          "    return output;",
          "}",
          "//<<< _VS\r",
          "\r",
          "//>>> PS\r",
          "\r",
          "//const vec2 z = vec2x(1);\r",
          "//const float complexity =5.;\r",
          "//const float density = .9;\r",
          "//const float speed = 1.;\r",
          "\r",
          "vec4 hash42(vec2 p)\r",
          "{\r",
          "\tvec4 p4 = fract(vec4(p.xyxy) * vec4(.1031, .1030, .0973, .1099));\r",
          "    p4 += dot(p4, p4.wzxy+33.33);\r",
          "    return fract((p4.xxyz+p4.yzzw)*p4.zywx);\r",
          "}\r",
          "/*\r",
          "mat2 rot2D(float r){\r",
          "    return mat2(cos(r), sin(r), -sin(r), cos(r));\r",
          "}*/\r",
          "\r",
          "#define q(x,p) (floor((x)/(p))*(p))\r",
          "\r",
          "// polynomial smooth min (k = 0.1);\r",
          "float sminCubic( float a, float b, float k )\r",
          "{\r",
          "    float h = max( k-abs(a-b), 0.0 )/k;\r",
          "    return min( a, b ) - h*h*h*k*(1.0/6.0);\r",
          "}\r",
          "\r",
          "float smin(float a, float b) {\r",
          "    return sminCubic(a, b, .3);\r",
          "}\r",
          "\r",
          "void mainImage( out vec4 o, vec2 C)\r",
          "{\r",
          "    vec2 R = iResolution.xy;\r",
          "    vec2 uv = C/R.xy;\r",
          "    //uv.y *= R.y / R.x;\r",
          "    vec2 N = uv - .5;\r",
          "    N *= 2;// -1 to 1 now.\r",
          "    //float t = iTime+1e2;\r",
          "    //uv = mul(uv-.5, rot2D(sin(iTime*.02)));\r",
          "    uv.x *= R.x/R.y;\r",
          "    uv *= Zoom;\r",
          "    uv += Position + .5;\r",
          "    //uv += floor(iTime*speed)*z;\r",
          "    //float beat = iBeat/2.;\r",
          "    //uv += floor(beat);\r",
          "    float s = 1.;\r",
          "\r",
          "    for (float i = 1.;i <= Layers; ++ i) {\r",
          "        vec2 c = floor(uv+i);\r",
          "        vec4 h = hash42(c);\r",
          "        vec2 p = fract(uv+i+q(Animate,h.z+1.)*h.y);\r",
          "        p += CellDrift;\r",
          "        \r",
          "        uv+= p*h.z*h.xy*vec2(s,2.);\r",
          "        uv *= 2.;\r",
          "        if (i < 2. || h.w > Density) {\r",
          "            o = h;\r",
          "        }\r",
          "    }\r",
          "    //o=step(.5,o) * mod(C.x,3.)/4.;\r",
          "    //o *= 1.-dot(N,N*Vingette);\r",
          "    \r",
          "    \r",
          "    \r",
          "    o.rgb = lerp((o.r + o.g + o.b)/3, o.rgb, Saturation);\r",
          "    \r",
          "    float v = 1.-length(N.x);\r",
          "    v = smin(v, 1.-length(N.y));\r",
          "    o *= pow(max(0,v),Vingette);\r",
          "\r",
          "}\r",
          "\r",
          "\r",
          "\r",
          "",
          "//<<< PS\r",
          "\r",
          "\r",
          "float4 PS( PS_IN input ) : SV_Target\r",
          "{\r",
          "    float4 o;\r",
          "    mainImage(o, input.pos.xy);\r",
          "    o = clamp(o,0.,1.);\r",
          "    o.a = 1.0;\r",
          "    return o;\r",
          "}\r",
          "\r",
          "\r",
          "//>>> _technique\r",
          "technique10 Render",
          "{",
          "    pass P0",
          "    {",
          "        SetGeometryShader( 0 );",
          "        SetVertexShader( CompileShader( vs_4_0, VS() ) );",
          "        SetPixelShader( CompileShader( ps_4_0, PS() ) );",
          "    }",
          "}",
          "//<<< _technique\r",
          ""
        ]
      },
      "MetaID": "c522a66e-3260-4692-b3e3-79fd0361fa3d",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Zoom",
      "MetaInstanceID": "4c95d9ca-ca92-4d5b-9b96-fd5d81421561",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.5"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "CellDrift",
      "MetaInstanceID": "162e3ea0-2cd7-4254-b084-fb9f6a3ee197",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "10000",
      "Scale": "0.001",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Animate",
      "MetaInstanceID": "2db16ac6-8755-497e-a25a-5ca57028497e",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Layers",
      "MetaInstanceID": "32f9109c-0253-4e44-93d8-6b7df445610c",
      "DefaultValue": {
        "Type": "Float",
        "Value": "5"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Density",
      "MetaInstanceID": "0d0fa462-ef93-4024-aed7-4e64cebe164a",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.9"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Position.X",
      "MetaInstanceID": "9cc6ffb4-16f9-40cd-b693-51687c861b97",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.5"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Position.Y",
      "MetaInstanceID": "145ad58a-c80f-40b2-a5fe-c32b28b0aae2",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Saturation",
      "MetaInstanceID": "e2ecc0c8-dec6-4a9b-bc30-3846b8f861ce",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.6"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Vingette",
      "MetaInstanceID": "8728478b-f953-4ca6-9bc7-66595c110855",
      "DefaultValue": {
        "Type": "Float",
        "Value": "2"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    }
  ],
  "Outputs": [
    {
      "Name": "Image",
      "MetaInstanceID": "ea0748dc-1536-47c9-b9e7-d6cad5d66dff",
      "MetaID": "9848060d-fd84-45b0-b658-d0d531c61dab"
    }
  ],
  "OperatorParts": [
    {
      "MetaInstanceID": "6ac0b05b-6c9f-4040-a3c0-fedd2a7e3234",
      "MetaID": "7a1fe688-cc67-48f5-ba1b-223034f36fe5",
      "Name": "SH_Glitch08Func",
      "Version": "6bdb1e3a-c1a1-4b66-8e0a-8c48dfd46aeb",
      "Type": "Float",
      "IsMultiInput": "True",
      "Script": [
        "//>>> _using",
        "using System;",
        "using System.Collections.Generic;",
        "using System.Linq;",
        "using System.Text;",
        "using SharpDX;",
        "using SharpDX.Direct3D11;",
        "using SharpDX.Windows;",
        "//<<< _using",
        "",
        "namespace Framefield.Core.ID7a1fe688_cc67_48f5_ba1b_223034f36fe5",
        "{",
        "    public class Class_SH_Glitch08 : FXImageFunction, Framefield.Core.OperatorPartTraits.ITimeAccessor",
        "    {",
        "        //>>> _inputids",
        "        private enum InputId",
        "        {",
        "            Code = 0,",
        "            Zoom = 1,",
        "            CellDrift = 2,",
        "            Animate = 3,",
        "            Layers = 4,",
        "            Density = 5,",
        "            PositionX = 6,",
        "            PositionY = 7,",
        "            Saturation = 8,",
        "            Vingette = 9",
        "        }",
        "        //<<< _inputids",
        "        ",
        "",
        "        public override OperatorPartContext Eval(OperatorPartContext context, List<OperatorPart> inputs, int outputIdx) {",
        "            //>>> _params",
        "            var Code = inputs[(int)InputId.Code].Eval(context).Text;",
        "            var Zoom = inputs[(int)InputId.Zoom].Eval(context).Value;",
        "            var CellDrift = inputs[(int)InputId.CellDrift].Eval(context).Value;",
        "            var Animate = inputs[(int)InputId.Animate].Eval(context).Value;",
        "            var Layers = inputs[(int)InputId.Layers].Eval(context).Value;",
        "            var Density = inputs[(int)InputId.Density].Eval(context).Value;",
        "            var PositionX = inputs[(int)InputId.PositionX].Eval(context).Value;",
        "            var PositionY = inputs[(int)InputId.PositionY].Eval(context).Value;",
        "            var Position = new Vector2(PositionX, PositionY);",
        "            var Saturation = inputs[(int)InputId.Saturation].Eval(context).Value;",
        "            var Vingette = inputs[(int)InputId.Vingette].Eval(context).Value;",
        "            //<<< _params",
        "            ",
        "            return PrepareAndEvalOnChange(context, () => {",
        "                ClearRenderTarget(context, new SharpDX.Color4(0, 0, 0, 0));",
        "",
        "                //>>> _setup",
        "                {",
        "                    _effect.GetVariableByName(\"RenderTargetSize\").AsVector().Set(new Vector2(_usedViewport.Width, _usedViewport.Height));",
        "                    _effect.GetVariableByName(\"Zoom\").AsScalar().Set(Zoom);",
        "                    _effect.GetVariableByName(\"CellDrift\").AsScalar().Set(CellDrift);",
        "                    _effect.GetVariableByName(\"Animate\").AsScalar().Set(Animate);",
        "                    _effect.GetVariableByName(\"Layers\").AsScalar().Set(Layers);",
        "                    _effect.GetVariableByName(\"Density\").AsScalar().Set(Density);",
        "                    _effect.GetVariableByName(\"Position\").AsVector().Set(new Vector2(PositionX, PositionY));",
        "                    _effect.GetVariableByName(\"Saturation\").AsScalar().Set(Saturation);",
        "                    _effect.GetVariableByName(\"Vingette\").AsScalar().Set(Vingette);",
        "                //<<< _setup",
        "",
        "            var skstate = Framefield.Core.OperatorPartContext.SKServerState;",
        "                    _effect.GetVariableByName(\"iBPM\").AsScalar().Set((float)skstate.BPM);",
        "                    _effect.GetVariableByName(\"iProgram\").AsScalar().Set(skstate.ProgramIndex);",
        "                    _effect.GetVariableByName(\"iBeat\").AsScalar().Set((float)skstate.Beat);",
        "",
        "                _effect.GetVariableByName(\"iTime\").AsScalar().Set(context.Time);",
        "                Render(context);",
        "",
        "                //>>> _cleanup",
        "                }",
        "                //<<< _cleanup",
        "            });",
        "        }",
        "",
        "    }",
        "}",
        "",
        "",
        "",
        ""
      ],
      "AdditionalAssemblies": [
        "LibToollTenfour.dll"
      ]
    }
  ],
  "Operators": [],
  "Connections": [
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "6ac0b05b-6c9f-4040-a3c0-fedd2a7e3234",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "ea0748dc-1536-47c9-b9e7-d6cad5d66dff"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "7041811a-d532-4a55-a464-62d8f8097d82",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "6ac0b05b-6c9f-4040-a3c0-fedd2a7e3234"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "4c95d9ca-ca92-4d5b-9b96-fd5d81421561",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "6ac0b05b-6c9f-4040-a3c0-fedd2a7e3234"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "162e3ea0-2cd7-4254-b084-fb9f6a3ee197",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "6ac0b05b-6c9f-4040-a3c0-fedd2a7e3234"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "2db16ac6-8755-497e-a25a-5ca57028497e",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "6ac0b05b-6c9f-4040-a3c0-fedd2a7e3234"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "32f9109c-0253-4e44-93d8-6b7df445610c",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "6ac0b05b-6c9f-4040-a3c0-fedd2a7e3234"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "0d0fa462-ef93-4024-aed7-4e64cebe164a",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "6ac0b05b-6c9f-4040-a3c0-fedd2a7e3234"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "9cc6ffb4-16f9-40cd-b693-51687c861b97",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "6ac0b05b-6c9f-4040-a3c0-fedd2a7e3234"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "145ad58a-c80f-40b2-a5fe-c32b28b0aae2",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "6ac0b05b-6c9f-4040-a3c0-fedd2a7e3234"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "e2ecc0c8-dec6-4a9b-bc30-3846b8f861ce",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "6ac0b05b-6c9f-4040-a3c0-fedd2a7e3234"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "8728478b-f953-4ca6-9bc7-66595c110855",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "6ac0b05b-6c9f-4040-a3c0-fedd2a7e3234"
    }
  ]
}