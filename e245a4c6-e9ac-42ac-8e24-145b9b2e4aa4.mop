{
  "Name": "SKRadialCellSlash",
  "_id": "e245a4c6-e9ac-42ac-8e24-145b9b2e4aa4",
  "Namespace": "user.tenfour",
  "Description": "divides into rings and transforms",
  "Inputs": [
    {
      "Name": "Code",
      "MetaInstanceID": "ed27b6a3-bc66-4e8c-8bcb-d057d5135f22",
      "DefaultValue": {
        "Type": "Text",
        "Value": [
          "//>>> _common parameters\r",
          "float4x4 objectToWorldMatrix;",
          "float4x4 worldToCameraMatrix;",
          "float4x4 projMatrix;",
          "Texture2D txDiffuse;",
          "float2 RenderTargetSize;",
          "//<<< _common parameters\r",
          "\r",
          "//>>> _parameters\r",
          "Texture2D Image;",
          "float RingSize;",
          "float RingPhase;",
          "float RandomSeed;",
          "float RingRotation;",
          "float RingRotationRandomAmt;",
          "float Translate;",
          "float RotationAlternation;",
          "float2 ShadeAmt;",
          "float CellShape;",
          "//<<< _parameters\r",
          "\r",
          "static const float PI = atan(1.)*4.;\r",
          "static const float PI2 = atan(1.)*8.;\r",
          "\r",
          "#define iResolution RenderTargetSize\r",
          "\r",
          "//>>> _setup\r",
          "SamplerState samLinear",
          "{",
          "    Filter = MIN_MAG_MIP_LINEAR;",
          "    AddressU = Clamp;",
          "    AddressV = Clamp;",
          "};",
          "//<<< _setup\r",
          "\r",
          "SamplerState samLinearWrap\r",
          "{\r",
          "    Filter = MIN_MAG_MIP_LINEAR;\r",
          "    AddressU = Wrap;\r",
          "    AddressV = Wrap;\r",
          "};\r",
          "\r",
          "//>>> _declarations\r",
          "struct VS_IN",
          "{",
          "    float4 pos : POSITION;",
          "    float2 texCoord : TEXCOORD;",
          "};",
          "",
          "struct PS_IN",
          "{",
          "    float4 pos : SV_POSITION;",
          "    float2 texCoord: TEXCOORD0;",
          "};",
          "//<<< _declarations\r",
          "\r",
          "//>>> _GS\r",
          "",
          "//<<< _GS\r",
          "\r",
          "//>>> _VS \r",
          "PS_IN VS( VS_IN input )",
          "{",
          "    PS_IN output = (PS_IN)0;",
          "",
          "    output.pos = mul(input.pos, worldToCameraMatrix);",
          "    output.pos = mul(output.pos, projMatrix);",
          "    output.texCoord = input.texCoord;",
          "",
          "    return output;",
          "}",
          "//<<< _VS\r",
          "\r",
          "float4x4 transformMatrix;\r",
          "\r",
          "//>>> PS\r",
          "/*\r",
          "void rot2D(inout float2 uv, float r){\r",
          "    float s = sin(r), c = cos(r);\r",
          "    uv = mul(uv, float2x2(c, -s, s, c));\r",
          "}\r",
          "*/\r",
          "// cell small template\r",
          "float4 hash42(float2 p)\r",
          "{\r",
          "\tfloat4 p4 = frac(p.xyxy * float4(.1031, .1030, .0973, .1099));\r",
          "    p4 += dot(p4, p4.wzxy+33.33);\r",
          "    return frac((p4.xxyz+p4.yzzw)*p4.zywx);\r",
          "}\r",
          "\r",
          "\r",
          "float4 PS( PS_IN input ) : SV_Target\r",
          "{\r",
          "    float2 uv = input.texCoord.xy - .5;\r",
          "    float2 R = RenderTargetSize.xy;\r",
          "    uv.x *= R.x / R.y;\r",
          "    \r",
          "    uv = sign(uv) * pow(abs(uv), CellShape);\r",
          "    \r",
          "    float a = (atan2(uv.y, uv.x));// -pi to pi\r",
          "    float r = length(uv);\r",
          "    \r",
          "    float ringID = floor((r/RingSize) - RingPhase);// integral\r",
          "    float ringRadOrig = ringID * RingSize;\r",
          "    float ringPos = frac((r/RingSize) - RingPhase);\r",
          "    \r",
          "    float4 h = hash42(float2(ringID, ringID) + 1e4 + RandomSeed);\r",
          "    \r",
          "    a += (h.x - .5) * PI2 * RingRotationRandomAmt;\r",
          "    \r",
          "    float ringParity = sign(frac(ringID / 1.8) - .5);// cheap alternating -1, 1\r",
          "    if (RotationAlternation == 0) ringParity = 1;\r",
          "    a += ringParity * RingRotation;\r",
          "    \r",
          "    //r -= ringRadOrig;\r",
          "    //r += Translate * RingSize;\r",
          "    //r = r % RingSize;\r",
          "    //r += ringRadOrig;\r",
          "\r",
          "    // convert back to texcoords\r",
          "    float2 newUV = float2(cos(a), sin(a)) * r;\r",
          "    // undo previous transformations\r",
          "    newUV.x /= R.x / R.y;\r",
          "    newUV += .5;\r",
          "    float4 ret = Image.Sample(samLinearWrap, newUV);\r",
          "    ret.rgb *= lerp(1, ringPos, ShadeAmt.x);\r",
          "    ret.rgb *= lerp(1, 1.-ringPos, ShadeAmt.y);\r",
          "    return ret;\r",
          "}\r",
          "\r",
          "//<<< PS\r",
          "\r",
          "\r",
          "//>>> _technique\r",
          "technique10 Render",
          "{",
          "    pass P0",
          "    {",
          "        SetGeometryShader( 0 );",
          "        SetVertexShader( CompileShader( vs_4_0, VS() ) );",
          "        SetPixelShader( CompileShader( ps_4_0, PS() ) );",
          "    }",
          "}",
          "//<<< _technique\r",
          ""
        ]
      },
      "MetaID": "c522a66e-3260-4692-b3e3-79fd0361fa3d",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Image",
      "MetaInstanceID": "6e4fdabf-7126-4c0a-a8a6-40642d77c35c",
      "DefaultValue": {
        "Type": "Image",
        "Value": "Framefield.Core.Image"
      },
      "MetaID": "9848060d-fd84-45b0-b658-d0d531c61dab",
      "IsMultiInput": "False",
      "Relevance": "Required",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "RandomSeed",
      "MetaInstanceID": "f43af5db-d38b-48de-94f3-2dfcc5d8cd64",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "RingSize",
      "MetaInstanceID": "95a5c450-2adb-449b-bf8b-6e2d1c9eb004",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.2"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0.001",
      "Max": "100000",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "RingPhase",
      "MetaInstanceID": "6722bb17-d912-4326-9100-440f3c18cf96",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "RingRotation",
      "MetaInstanceID": "757cdaf2-16bd-45b0-982e-cab33dfcef53",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.001",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "RingRotationRandomAmt",
      "MetaInstanceID": "897d14af-8610-4fbc-b08f-101eed926a12",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Translate",
      "MetaInstanceID": "5a5853c1-adf6-4e27-91b1-345654be909e",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.001",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "RotationAlternation",
      "MetaInstanceID": "4993c066-e15f-4368-8bd1-8f5addcfbc59",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": [
        {
          "Name": "No",
          "Value": "0"
        },
        {
          "Name": "Yes",
          "Value": "1"
        }
      ]
    },
    {
      "Name": "ShadeAmt.X",
      "MetaInstanceID": "8b8391c8-28be-48cb-9495-28e10806637b",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "ShadeAmt.Y",
      "MetaInstanceID": "cda5992a-3ec8-42bf-84d9-e2b11b4e6dbc",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "CellShape",
      "MetaInstanceID": "8125968f-41a4-4cff-bdb8-6d1db1e0e4df",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    }
  ],
  "Outputs": [
    {
      "Name": "Image",
      "MetaInstanceID": "a4a7aa92-1854-47fb-9567-b348b08f727b",
      "MetaID": "9848060d-fd84-45b0-b658-d0d531c61dab"
    }
  ],
  "OperatorParts": [
    {
      "MetaInstanceID": "6c0261dc-53f8-4430-ab29-7e3816582599",
      "MetaID": "b07b1d43-2f46-443a-992d-fb95d8c694bd",
      "Name": "SKRadialCellSlashFunc",
      "Version": "4af43bf5-5418-42f0-b56a-1f15df98160c",
      "Type": "Float",
      "IsMultiInput": "True",
      "Script": [
        "//>>> _using",
        "using System;",
        "using System.Collections.Generic;",
        "using System.Linq;",
        "using System.Text;",
        "using SharpDX;",
        "using SharpDX.Direct3D11;",
        "using SharpDX.Windows;",
        "//<<< _using",
        "",
        "namespace Framefield.Core.IDb07b1d43_2f46_443a_992d_fb95d8c694bd",
        "{",
        "    public class Class_SKRadialCellSlash : FXImageFunction, Framefield.Core.OperatorPartTraits.ITimeAccessor",
        "    {",
        "        //>>> _inputids",
        "        private enum InputId",
        "        {",
        "            Code = 0,",
        "            Image = 1,",
        "            RingSize = 2,",
        "            RingPhase = 3,",
        "            RandomSeed = 4,",
        "            RingRotation = 5,",
        "            RingRotationRandomAmt = 6,",
        "            Translate = 7,",
        "            RotationAlternation = 8,",
        "            ShadeAmtX = 9,",
        "            CellShape = 10,",
        "            ShadeAmtY = 11",
        "        }",
        "        //<<< _inputids",
        "        ",
        "        public override OperatorPartContext Eval(OperatorPartContext context, List<OperatorPart> inputs, int outputIdx) {",
        "            //>>> _params",
        "            var Code = inputs[(int)InputId.Code].Eval(context).Text;",
        "            var Image = inputs[(int)InputId.Image].Eval(context).Image; // Needs to be checked for null!",
        "            var RingSize = inputs[(int)InputId.RingSize].Eval(context).Value;",
        "            var RingPhase = inputs[(int)InputId.RingPhase].Eval(context).Value;",
        "            var RandomSeed = inputs[(int)InputId.RandomSeed].Eval(context).Value;",
        "            var RingRotation = inputs[(int)InputId.RingRotation].Eval(context).Value;",
        "            var RingRotationRandomAmt = inputs[(int)InputId.RingRotationRandomAmt].Eval(context).Value;",
        "            var Translate = inputs[(int)InputId.Translate].Eval(context).Value;",
        "            var RotationAlternation = (int) inputs[(int)InputId.RotationAlternation].Eval(context).Value;",
        "            var ShadeAmtX = inputs[(int)InputId.ShadeAmtX].Eval(context).Value;",
        "            var ShadeAmtY = inputs[(int)InputId.ShadeAmtY].Eval(context).Value;",
        "            var ShadeAmt = new Vector2(ShadeAmtX, ShadeAmtY);",
        "            var CellShape = inputs[(int)InputId.CellShape].Eval(context).Value;",
        "            //<<< _params",
        "            ",
        "            return PrepareAndEvalOnChange(context, () => {",
        "                ClearRenderTarget(context, new SharpDX.Color4(0, 0, 0, 0));",
        "                if (Image == null) {",
        "                    return;",
        "                }",
        "",
        "                //>>> _setup",
        "                using (var ImageView = new ShaderResourceView(context.D3DDevice, Image))",
        "                {",
        "                    _effect.GetVariableByName(\"RenderTargetSize\").AsVector().Set(new Vector2(_usedViewport.Width, _usedViewport.Height));",
        "                    _effect.GetVariableByName(\"Image\").AsShaderResource().SetResource(ImageView);",
        "                    _effect.GetVariableByName(\"RingSize\").AsScalar().Set(RingSize);",
        "                    _effect.GetVariableByName(\"RingPhase\").AsScalar().Set(RingPhase);",
        "                    _effect.GetVariableByName(\"RandomSeed\").AsScalar().Set(RandomSeed);",
        "                    _effect.GetVariableByName(\"RingRotation\").AsScalar().Set(RingRotation);",
        "                    _effect.GetVariableByName(\"RingRotationRandomAmt\").AsScalar().Set(RingRotationRandomAmt);",
        "                    _effect.GetVariableByName(\"Translate\").AsScalar().Set(Translate);",
        "                    _effect.GetVariableByName(\"RotationAlternation\").AsScalar().Set(RotationAlternation);",
        "                    _effect.GetVariableByName(\"ShadeAmt\").AsVector().Set(new Vector2(ShadeAmtX, ShadeAmtY));",
        "                    _effect.GetVariableByName(\"CellShape\").AsScalar().Set(CellShape);",
        "                //<<< _setup",
        "                ",
        "                //Pivot /= CellCount;",
        "                //Translate /= CellCount;",
        "                ",
        "                /*var _transform = Matrix.Transformation2D(",
        "                    Pivot, 0,// scaling center, scalingrotation",
        "                    Scale,// scaling",
        "                    Pivot,// rot center",
        "                    Rotation,// rotation",
        "                    Translate);",
        "",
        "                _effect.GetVariableByName(\"transformMatrix\").AsMatrix().SetMatrix(_transform);",
        "*/",
        "",
        "                Render(context);",
        "",
        "                //>>> _cleanup",
        "                }",
        "                //<<< _cleanup",
        "            });",
        "        }",
        "",
        "    }",
        "}",
        "",
        "",
        "",
        ""
      ],
      "AdditionalAssemblies": [
        "LibToollTenfour.dll"
      ]
    }
  ],
  "Operators": [],
  "Connections": [
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "6c0261dc-53f8-4430-ab29-7e3816582599",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "a4a7aa92-1854-47fb-9567-b348b08f727b"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "ed27b6a3-bc66-4e8c-8bcb-d057d5135f22",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "6c0261dc-53f8-4430-ab29-7e3816582599"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "6e4fdabf-7126-4c0a-a8a6-40642d77c35c",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "6c0261dc-53f8-4430-ab29-7e3816582599"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "95a5c450-2adb-449b-bf8b-6e2d1c9eb004",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "6c0261dc-53f8-4430-ab29-7e3816582599"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "6722bb17-d912-4326-9100-440f3c18cf96",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "6c0261dc-53f8-4430-ab29-7e3816582599"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "f43af5db-d38b-48de-94f3-2dfcc5d8cd64",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "6c0261dc-53f8-4430-ab29-7e3816582599"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "757cdaf2-16bd-45b0-982e-cab33dfcef53",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "6c0261dc-53f8-4430-ab29-7e3816582599"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "897d14af-8610-4fbc-b08f-101eed926a12",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "6c0261dc-53f8-4430-ab29-7e3816582599"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "5a5853c1-adf6-4e27-91b1-345654be909e",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "6c0261dc-53f8-4430-ab29-7e3816582599"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "4993c066-e15f-4368-8bd1-8f5addcfbc59",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "6c0261dc-53f8-4430-ab29-7e3816582599"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "8b8391c8-28be-48cb-9495-28e10806637b",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "6c0261dc-53f8-4430-ab29-7e3816582599"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "8125968f-41a4-4cff-bdb8-6d1db1e0e4df",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "6c0261dc-53f8-4430-ab29-7e3816582599"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "cda5992a-3ec8-42bf-84d9-e2b11b4e6dbc",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "6c0261dc-53f8-4430-ab29-7e3816582599"
    }
  ]
}