{
  "Name": "BlendImagesFillAlpha",
  "_id": "ffe93a73-a6a3-42a3-85ca-783fa677194a",
  "Namespace": "user.tenfour",
  "Description": "Composes two images on top of each other.",
  "Inputs": [
    {
      "Name": "Code",
      "MetaInstanceID": "193de239-71fb-4f7d-ac10-eccf797c36b1",
      "DefaultValue": {
        "Type": "Text",
        "Value": [
          "//>>> _common parameters\r",
          "float4x4 objectToWorldMatrix;",
          "float4x4 worldToCameraMatrix;",
          "float4x4 projMatrix;",
          "Texture2D txDiffuse;",
          "float2 RenderTargetSize;",
          "//<<< _common parameters\r",
          "\r",
          "//>>> _parameters\r",
          "Texture2D ImageA;",
          "Texture2D ImageB;",
          "//<<< _parameters\r",
          " \r",
          "//>>> setup\r",
          "SamplerState samNearest\r",
          "{\r",
          "    Filter = MIN_MAG_MIP_LINEAR;\r",
          "    AddressU = Clamp;\r",
          "    AddressV = Clamp;\r",
          "};\r",
          "//<<< setup\r",
          "\r",
          "//>>> declarations\r",
          "struct VS_IN\r",
          "{\r",
          "    float4 pos : POSITION;\r",
          "    float2 texCoord : TEXCOORD;\r",
          "};\r",
          "\r",
          "struct PS_IN\r",
          "{\r",
          "    float4 pos : SV_POSITION;\r",
          "    float2 texCoord: TEXCOORD0;\t    \r",
          "    float3 worldTViewPos: TEXCOORD1;\r",
          "    float3 worldTViewDir: TEXCOORD2;\r",
          "};\r",
          "//<<< declarations\r",
          "\r",
          "//>>> _GS\r",
          "",
          "//<<< _GS\r",
          "\r",
          "//>>> _VS \r",
          "PS_IN VS( VS_IN input )",
          "{",
          "    PS_IN output = (PS_IN)0;",
          "",
          "    output.pos = mul(input.pos, worldToCameraMatrix);",
          "    output.pos = mul(output.pos, projMatrix);",
          "    output.texCoord = input.texCoord;",
          "",
          "    return output;",
          "}",
          "//<<< _VS\r",
          "\r",
          "//>>> PS\r",
          "\r",
          "\r",
          "float4 PS( PS_IN input ) : SV_Target\r",
          "{\r",
          "    float4 a = ImageA.Sample(samNearest, input.texCoord); \r",
          "    float4 b = ImageB.Sample(samNearest, input.texCoord);    \r",
          "    return lerp(a, b, 1.-a.a);\r",
          "}\r",
          "//<<< PS\r",
          "\r",
          "//>>> _technique\r",
          "technique10 Render",
          "{",
          "    pass P0",
          "    {",
          "        SetGeometryShader( 0 );",
          "        SetVertexShader( CompileShader( vs_4_0, VS() ) );",
          "        SetPixelShader( CompileShader( ps_4_0, PS() ) );",
          "    }",
          "}",
          "//<<< _technique\r",
          ""
        ]
      },
      "MetaID": "c522a66e-3260-4692-b3e3-79fd0361fa3d",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "ImageA",
      "MetaInstanceID": "5a7ad421-c4ad-4fb4-bade-c8f0f8ef5850",
      "DefaultValue": {
        "Type": "Image",
        "Value": "Framefield.Core.Image"
      },
      "MetaID": "9848060d-fd84-45b0-b658-d0d531c61dab",
      "IsMultiInput": "False",
      "Relevance": "Required",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "ImageB",
      "MetaInstanceID": "84fc3426-b1b3-4805-bc8a-10d4d4f0adf5",
      "DefaultValue": {
        "Type": "Image",
        "Value": "Framefield.Core.Image"
      },
      "MetaID": "9848060d-fd84-45b0-b658-d0d531c61dab",
      "IsMultiInput": "False",
      "Relevance": "Required",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    }
  ],
  "Outputs": [
    {
      "Name": "Image",
      "MetaInstanceID": "68a6bdb5-9c75-403a-bd97-5dace5ab4928",
      "MetaID": "9848060d-fd84-45b0-b658-d0d531c61dab"
    }
  ],
  "OperatorParts": [
    {
      "MetaInstanceID": "c2f52762-4418-4c1a-80b9-fa42996916ec",
      "MetaID": "d770ce08-5454-4e04-8662-81e89aece5b5",
      "Name": "BlendImagesFillAlphaFunc",
      "Version": "ad9ef6c1-add4-490b-8e00-6d42adf8bcd5",
      "Type": "Float",
      "IsMultiInput": "True",
      "Script": [
        "//>>> _using",
        "using System;",
        "using System.Collections.Generic;",
        "using System.Linq;",
        "using System.Text;",
        "using SharpDX;",
        "using SharpDX.Direct3D11;",
        "using SharpDX.Windows;",
        "//<<< _using",
        "",
        "namespace Framefield.Core.IDd770ce08_5454_4e04_8662_81e89aece5b5",
        "{",
        "    public class Class_BlendImages : FXImageFunction",
        "    {",
        "        //>>> _inputids",
        "        private enum InputId",
        "        {",
        "            Code = 0,",
        "            ImageA = 1,",
        "            ImageB = 2",
        "        }",
        "        //<<< _inputids",
        "",
        "        public override OperatorPartContext Eval(OperatorPartContext context, List<OperatorPart> inputs, int outputIdx)",
        "        {",
        "            return PrepareAndEvalOnChange(context, () =>",
        "            {",
        "                //>>> _params",
        "                var Code = inputs[(int)InputId.Code].Eval(context).Text;",
        "                var ImageA = inputs[(int)InputId.ImageA].Eval(context).Image; // Needs to be checked for null!",
        "                var ImageB = inputs[(int)InputId.ImageB].Eval(context).Image; // Needs to be checked for null!",
        "                //<<< _params",
        "",
        "                ClearRenderTarget(context, new SharpDX.Color4(0, 0, 0, 0));",
        "                if(ImageA == null || ImageB ==null) {",
        "                    Logger.Warn(this, \"BlendImages requires two images\");",
        "                }",
        "",
        "                //>>> _setup",
        "                using (var ImageAView = new ShaderResourceView(context.D3DDevice, ImageA))",
        "                using (var ImageBView = new ShaderResourceView(context.D3DDevice, ImageB))",
        "                {",
        "                    _effect.GetVariableByName(\"RenderTargetSize\").AsVector().Set(new Vector2(_usedViewport.Width, _usedViewport.Height));",
        "                    _effect.GetVariableByName(\"ImageA\").AsShaderResource().SetResource(ImageAView);",
        "                    _effect.GetVariableByName(\"ImageB\").AsShaderResource().SetResource(ImageBView);",
        "                //<<< _setup",
        "",
        "                Render(context);",
        "",
        "                //>>> _cleanup",
        "                }",
        "                //<<< _cleanup",
        "            });",
        "        }",
        "",
        "    }",
        "}",
        "",
        ""
      ],
      "AdditionalAssemblies": []
    }
  ],
  "Operators": [],
  "Connections": [
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "c2f52762-4418-4c1a-80b9-fa42996916ec",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "68a6bdb5-9c75-403a-bd97-5dace5ab4928"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "193de239-71fb-4f7d-ac10-eccf797c36b1",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "c2f52762-4418-4c1a-80b9-fa42996916ec"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "5a7ad421-c4ad-4fb4-bade-c8f0f8ef5850",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "c2f52762-4418-4c1a-80b9-fa42996916ec"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "84fc3426-b1b3-4805-bc8a-10d4d4f0adf5",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "c2f52762-4418-4c1a-80b9-fa42996916ec"
    }
  ]
}