{
  "Name": "SH_AmplitudeModulation",
  "_id": "6e1b775f-8b9e-430a-8ed3-347831ef2886",
  "Namespace": "user.tenfour.shaders",
  "Description": "this effect is best when you input a very blurry image\r\n",
  "Inputs": [
    {
      "Name": "Code",
      "MetaInstanceID": "16c9fd7e-51bc-43e9-8a8e-3ea6b892a5ea",
      "DefaultValue": {
        "Type": "Text",
        "Value": [
          "//>>> _common parameters\r",
          "float4x4 objectToWorldMatrix;",
          "float4x4 worldToCameraMatrix;",
          "float4x4 projMatrix;",
          "Texture2D txDiffuse;",
          "float2 RenderTargetSize;",
          "//<<< _common parameters\r",
          "\r",
          "//>>> _parameters\r",
          "Texture2D Image;",
          "float2 Position;",
          "float3 Tint;",
          "float2 WaveAmplitude;",
          "float WavePeriod;",
          "float WaveSpacing;",
          "float Burn;",
          "float DTOA;",
          "//<<< _parameters\r",
          "\r",
          "const float Iterations;\r",
          "\r",
          "const float iBPM;\r",
          "const float iProgram;\r",
          "const float iTime;\r",
          "const float iBeat;\r",
          "static const float PI = atan(1.)*4.;\r",
          "static const float PI2 = atan(1.)*8.;\r",
          "\r",
          "#define iResolution RenderTargetSize\r",
          "#define vec2 float2\r",
          "#define vec3 float3\r",
          "#define vec4 float4\r",
          "#define mat2(a,b,c,d) float2x2(a,c,b,d)\r",
          "#define fract frac\r",
          "#define mod fmod\r",
          "#define mix lerp\r",
          "#define vec20 (float2(0,0))\r",
          "#define vec30 (float3(0,0,0))\r",
          "#define vec40 (float4(0,0,0,0))\r",
          "#define vec21 (float2(1,1))\r",
          "#define vec31 (float3(1,1,1))\r",
          "#define vec41 (float4(1,1,1,1))\r",
          "#define vec2x(x) (float2((x),(x)))\r",
          "#define vec3x(x) (float3((x),(x),(x)))\r",
          "#define vec4x(x) (float4((x),(x),(x),(x)))\r",
          "\r",
          "//>>> _setup\r",
          "SamplerState samLinear",
          "{",
          "    Filter = MIN_MAG_MIP_LINEAR;",
          "    AddressU = Clamp;",
          "    AddressV = Clamp;",
          "};",
          "//<<< _setup\r",
          "\r",
          "//>>> _declarations\r",
          "struct VS_IN",
          "{",
          "    float4 pos : POSITION;",
          "    float2 texCoord : TEXCOORD;",
          "};",
          "",
          "struct PS_IN",
          "{",
          "    float4 pos : SV_POSITION;",
          "    float2 texCoord: TEXCOORD0;",
          "};",
          "//<<< _declarations\r",
          "\r",
          "//>>> _GS\r",
          "",
          "//<<< _GS\r",
          "\r",
          "//>>> _VS \r",
          "PS_IN VS( VS_IN input )",
          "{",
          "    PS_IN output = (PS_IN)0;",
          "",
          "    output.pos = mul(input.pos, worldToCameraMatrix);",
          "    output.pos = mul(output.pos, projMatrix);",
          "    output.texCoord = input.texCoord;",
          "",
          "    return output;",
          "}",
          "//<<< _VS\r",
          "\r",
          "//>>> PS\r",
          "\r",
          "//static const float waveHeight = .23;\r",
          "//static const float waveAmp = 7.;\r",
          "//static const float waveAmpOffset = WaveMin;\r",
          "\r",
          "vec3 dtoa(float d, in vec3 amount){\r",
          "    return 1. / clamp(d*amount, amount/amount, amount);\r",
          "}\r",
          "\r",
          "float udCos(float2 uv, float a, float b, float c, float d) {\r",
          "    float y = a + b*cos((c*uv.x)+d);\r",
          "    return abs(uv.y - y);\r",
          "}\r",
          "\r",
          "void mainImage( out vec4 o, vec2 C, vec2 texCoord)\r",
          "{\r",
          "    vec2 R = iResolution.xy;\r",
          "    vec2 N2 = C/R;\r",
          "    vec2 N = C/R-.5;\r",
          "    vec2 uv = N;\r",
          "    uv.x *= R.x/R.y;\r",
          "    //float t = iTime  *.5;\r",
          "    float t = Position.x;\r",
          "    \r",
          "    uv *= 4.;\r",
          "\r",
          "    float a2 = 1e5;\r",
          "    vec2 uvsq = uv;\r",
          "    \r",
          "    float4 samp = Image.Sample(samLinear, texCoord);\r",
          "    float a = (samp.x + samp.y + samp.z) / 3;\r",
          "    a = 1.-a;\r",
          "    a = clamp(a,0,1);\r",
          "    \r",
          "    vec2 uv2 = uv;\r",
          "\r",
          "    uv.y = fmod(uv.y+Position.y, WaveSpacing) - WaveSpacing*.5;\r",
          "    \r",
          "    for (float i = -Iterations; i <= Iterations; ++ i) {\r",
          "    \tvec2 uvwave = vec2(uv2.x, uv.y + i * WaveSpacing);\r",
          "        float b = (smoothstep(1., -1.,a)*WaveAmplitude.y)+ WaveAmplitude.x;\r",
          "    \ta2 = min(a2, udCos(uvwave, 0., b, WavePeriod, t));// a + b*cos(cx+d)\r",
          "    }\r",
          "    \r",
          "    o.rgb = dtoa(mix(a2, a-Burn, .5), DTOA*Tint);\r",
          "    //o.a = 0;\r",
          "    //o = vec4x(a);\r",
          "    o = 1.-o;\r",
          "    //o *= 1.-dot(N,N);\r",
          "    //o = vec4x(0);\r",
          "}\r",
          "\r",
          "\r",
          "\r",
          "\r",
          "",
          "//<<< PS\r",
          "\r",
          "\r",
          "float4 PS( PS_IN input ) : SV_Target\r",
          "{\r",
          "    float4 o;\r",
          "    mainImage(o, input.pos.xy, input.texCoord);\r",
          "    o = clamp(o,0.,1.);\r",
          "    o.a = 1.0;\r",
          "    return o;\r",
          "}\r",
          "\r",
          "\r",
          "//>>> _technique\r",
          "technique10 Render",
          "{",
          "    pass P0",
          "    {",
          "        SetGeometryShader( 0 );",
          "        SetVertexShader( CompileShader( vs_4_0, VS() ) );",
          "        SetPixelShader( CompileShader( ps_4_0, PS() ) );",
          "    }",
          "}",
          "//<<< _technique\r",
          ""
        ]
      },
      "MetaID": "c522a66e-3260-4692-b3e3-79fd0361fa3d",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Image",
      "MetaInstanceID": "46cf4ec1-1ea3-4d31-857c-1cda93712bac",
      "DefaultValue": {
        "Type": "Image",
        "Value": "Framefield.Core.Image"
      },
      "MetaID": "9848060d-fd84-45b0-b658-d0d531c61dab",
      "IsMultiInput": "False",
      "Relevance": "Relevant",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Position.Y",
      "MetaInstanceID": "bab2824f-049f-4778-9b53-eb051834fd7b",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Position.X",
      "MetaInstanceID": "a43291bd-b804-4489-9827-e99b11873907",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Tint.X",
      "MetaInstanceID": "4f69e2a6-6558-46da-ab8c-406f35ea2691",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1.5"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Tint.Y",
      "MetaInstanceID": "72114df6-b7af-4a2a-966b-4e2bede10eb6",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.6"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Tint.Z",
      "MetaInstanceID": "8e585dbc-8082-4009-9487-71fec92e191a",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.45"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "WaveAmplitude.Min",
      "MetaInstanceID": "417789d4-c325-4f21-b625-9f15f11b8755",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.05"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "WaveAmplitude.Max",
      "MetaInstanceID": "119f62f7-9bc1-4ac0-8010-3b4b8b43efee",
      "DefaultValue": {
        "Type": "Float",
        "Value": "3"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "WavePeriod",
      "MetaInstanceID": "7daf5185-e684-44cf-a01d-cb089ae26c9b",
      "DefaultValue": {
        "Type": "Float",
        "Value": "3"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "WaveSpacing",
      "MetaInstanceID": "9e8d0db4-8da8-4dfc-83b9-4a06f497fc65",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.23"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Burn",
      "MetaInstanceID": "0afb589b-eae3-496c-a557-ac7a19b7a91e",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.5"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "DTOA",
      "MetaInstanceID": "74dda055-1f62-4a0f-9b7a-b5be675a202d",
      "DefaultValue": {
        "Type": "Float",
        "Value": "40"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "1",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    }
  ],
  "Outputs": [
    {
      "Name": "Image",
      "MetaInstanceID": "38329698-026e-4cfa-a15f-e8e555d8b010",
      "MetaID": "9848060d-fd84-45b0-b658-d0d531c61dab"
    }
  ],
  "OperatorParts": [
    {
      "MetaInstanceID": "386acca5-260c-4af8-9b98-f0b3ab0e8f4b",
      "MetaID": "c442ac06-a539-4dc8-8eab-d3daa9e1fa5e",
      "Name": "SH_AmplitudeModulationFunc",
      "Version": "2f65105a-ba32-4eea-a616-407c2df28433",
      "Type": "Float",
      "IsMultiInput": "True",
      "Script": [
        "//>>> _using",
        "using System;",
        "using System.Collections.Generic;",
        "using System.Linq;",
        "using System.Text;",
        "using SharpDX;",
        "using SharpDX.Direct3D11;",
        "using SharpDX.Windows;",
        "//<<< _using",
        "",
        "namespace Framefield.Core.IDc442ac06_a539_4dc8_8eab_d3daa9e1fa5e",
        "{",
        "    public class Class_SH_AmplitudeModulation : FXImageFunction, Framefield.Core.OperatorPartTraits.ITimeAccessor",
        "    {",
        "        //>>> _inputids",
        "        private enum InputId",
        "        {",
        "            Code = 0,",
        "            Image = 1,",
        "            PositionX = 2,",
        "            TintX = 3,",
        "            TintY = 4,",
        "            TintZ = 5,",
        "            WaveAmplitudeMin = 6,",
        "            WavePeriod = 7,",
        "            WaveSpacing = 8,",
        "            WaveAmplitudeMax = 9,",
        "            Burn = 10,",
        "            DTOA = 11,",
        "            PositionY = 12",
        "        }",
        "        //<<< _inputids",
        "",
        "        public override OperatorPartContext Eval(OperatorPartContext context, List<OperatorPart> inputs, int outputIdx) {",
        "            //>>> _params",
        "            var Code = inputs[(int)InputId.Code].Eval(context).Text;",
        "            var Image = inputs[(int)InputId.Image].Eval(context).Image; // Needs to be checked for null!",
        "            var PositionX = inputs[(int)InputId.PositionX].Eval(context).Value;",
        "            var PositionY = inputs[(int)InputId.PositionY].Eval(context).Value;",
        "            var Position = new Vector2(PositionX, PositionY);",
        "            var TintX = inputs[(int)InputId.TintX].Eval(context).Value;",
        "            var TintY = inputs[(int)InputId.TintY].Eval(context).Value;",
        "            var TintZ = inputs[(int)InputId.TintZ].Eval(context).Value;",
        "            var Tint = new Vector3(TintX, TintY, TintZ);",
        "            var WaveAmplitudeMin = inputs[(int)InputId.WaveAmplitudeMin].Eval(context).Value;",
        "            var WaveAmplitudeMax = inputs[(int)InputId.WaveAmplitudeMax].Eval(context).Value;",
        "            var WaveAmplitude = new Vector2(WaveAmplitudeMin, WaveAmplitudeMax);",
        "            var WavePeriod = inputs[(int)InputId.WavePeriod].Eval(context).Value;",
        "            var WaveSpacing = inputs[(int)InputId.WaveSpacing].Eval(context).Value;",
        "            var Burn = inputs[(int)InputId.Burn].Eval(context).Value;",
        "            var DTOA = inputs[(int)InputId.DTOA].Eval(context).Value;",
        "            //<<< _params",
        "            ",
        "            return PrepareAndEvalOnChange(context, () => {",
        "                ClearRenderTarget(context, new SharpDX.Color4(0, 0, 0, 0));",
        "",
        "                // correct this yea.",
        "                WaveAmplitudeMax -= WaveAmplitudeMin;",
        "",
        "                //>>> _setup",
        "                using (var ImageView = new ShaderResourceView(context.D3DDevice, Image))",
        "                {",
        "                    _effect.GetVariableByName(\"RenderTargetSize\").AsVector().Set(new Vector2(_usedViewport.Width, _usedViewport.Height));",
        "                    _effect.GetVariableByName(\"Image\").AsShaderResource().SetResource(ImageView);",
        "                    _effect.GetVariableByName(\"Position\").AsVector().Set(new Vector2(PositionX, PositionY));",
        "                    _effect.GetVariableByName(\"Tint\").AsVector().Set(new Vector3(TintX, TintY, TintZ));",
        "                    _effect.GetVariableByName(\"WaveAmplitude\").AsVector().Set(new Vector2(WaveAmplitudeMin, WaveAmplitudeMax));",
        "                    _effect.GetVariableByName(\"WavePeriod\").AsScalar().Set(WavePeriod);",
        "                    _effect.GetVariableByName(\"WaveSpacing\").AsScalar().Set(WaveSpacing);",
        "                    _effect.GetVariableByName(\"Burn\").AsScalar().Set(Burn);",
        "                    _effect.GetVariableByName(\"DTOA\").AsScalar().Set(DTOA);",
        "                //<<< _setup",
        "",
        "                _effect.GetVariableByName(\"Iterations\").AsScalar().Set((WaveAmplitudeMax / WaveSpacing / 2) + 1);",
        "                _effect.GetVariableByName(\"iTime\").AsScalar().Set(context.Time);",
        "                Render(context);",
        "",
        "                //>>> _cleanup",
        "                }",
        "                //<<< _cleanup",
        "            });",
        "        }",
        "",
        "    }",
        "}",
        "",
        "",
        "",
        ""
      ],
      "AdditionalAssemblies": [
        "LibToollTenfour.dll"
      ]
    }
  ],
  "Operators": [],
  "Connections": [
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "386acca5-260c-4af8-9b98-f0b3ab0e8f4b",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "38329698-026e-4cfa-a15f-e8e555d8b010"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "16c9fd7e-51bc-43e9-8a8e-3ea6b892a5ea",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "386acca5-260c-4af8-9b98-f0b3ab0e8f4b"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "46cf4ec1-1ea3-4d31-857c-1cda93712bac",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "386acca5-260c-4af8-9b98-f0b3ab0e8f4b"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "a43291bd-b804-4489-9827-e99b11873907",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "386acca5-260c-4af8-9b98-f0b3ab0e8f4b"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "4f69e2a6-6558-46da-ab8c-406f35ea2691",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "386acca5-260c-4af8-9b98-f0b3ab0e8f4b"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "72114df6-b7af-4a2a-966b-4e2bede10eb6",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "386acca5-260c-4af8-9b98-f0b3ab0e8f4b"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "8e585dbc-8082-4009-9487-71fec92e191a",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "386acca5-260c-4af8-9b98-f0b3ab0e8f4b"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "417789d4-c325-4f21-b625-9f15f11b8755",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "386acca5-260c-4af8-9b98-f0b3ab0e8f4b"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "7daf5185-e684-44cf-a01d-cb089ae26c9b",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "386acca5-260c-4af8-9b98-f0b3ab0e8f4b"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "9e8d0db4-8da8-4dfc-83b9-4a06f497fc65",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "386acca5-260c-4af8-9b98-f0b3ab0e8f4b"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "119f62f7-9bc1-4ac0-8010-3b4b8b43efee",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "386acca5-260c-4af8-9b98-f0b3ab0e8f4b"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "0afb589b-eae3-496c-a557-ac7a19b7a91e",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "386acca5-260c-4af8-9b98-f0b3ab0e8f4b"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "74dda055-1f62-4a0f-9b7a-b5be675a202d",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "386acca5-260c-4af8-9b98-f0b3ab0e8f4b"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "bab2824f-049f-4778-9b53-eb051834fd7b",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "386acca5-260c-4af8-9b98-f0b3ab0e8f4b"
    }
  ]
}