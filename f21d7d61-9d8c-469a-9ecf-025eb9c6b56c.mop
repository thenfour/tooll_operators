{
  "Name": "HardColorKey",
  "_id": "f21d7d61-9d8c-469a-9ecf-025eb9c6b56c",
  "Namespace": "user.tenfour",
  "Description": "\tfill",
  "Inputs": [
    {
      "Name": "Code",
      "MetaInstanceID": "13774498-566e-44bf-b9f0-2004851c7480",
      "DefaultValue": {
        "Type": "Text",
        "Value": [
          "//>>> _common parameters\r",
          "float4x4 objectToWorldMatrix;",
          "float4x4 worldToCameraMatrix;",
          "float4x4 projMatrix;",
          "Texture2D txDiffuse;",
          "float2 RenderTargetSize;",
          "//<<< _common parameters\r",
          "\r",
          "//>>> _parameters\r",
          "Texture2D Image;",
          "float4 Color;",
          "float Tolerance;",
          "float ConvenientMultiply;",
          "float4 ConvenienceMultiplyColor;",
          "//<<< _parameters\r",
          "\r",
          "const float iBPM;\r",
          "const float iProgram;\r",
          "const float iTime;\r",
          "const float iBeat;\r",
          "static const float PI = atan(1.)*4.;\r",
          "static const float PI2 = atan(1.)*8.;\r",
          "\r",
          "#define iResolution RenderTargetSize\r",
          "#define vec2 float2\r",
          "#define vec3 float3\r",
          "#define vec4 float4\r",
          "#define mat2 float2x2\r",
          "#define fract frac\r",
          "#define mod fmod\r",
          "#define mix lerp\r",
          "#define vec20 (float2(0,0))\r",
          "#define vec30 (float3(0,0,0))\r",
          "#define vec40 (float4(0,0,0,0))\r",
          "#define vec21 (float2(1,1))\r",
          "#define vec31 (float3(1,1,1))\r",
          "#define vec41 (float4(1,1,1,1))\r",
          "#define vec2x(x) (float2((x),(x)))\r",
          "#define vec3x(x) (float3((x),(x),(x)))\r",
          "#define vec4x(x) (float4((x),(x),(x),(x)))\r",
          "\r",
          "//>>> _setup\r",
          "SamplerState samLinear",
          "{",
          "    Filter = MIN_MAG_MIP_LINEAR;",
          "    AddressU = Clamp;",
          "    AddressV = Clamp;",
          "};",
          "//<<< _setup\r",
          "\r",
          "//>>> _declarations\r",
          "struct VS_IN",
          "{",
          "    float4 pos : POSITION;",
          "    float2 texCoord : TEXCOORD;",
          "};",
          "",
          "struct PS_IN",
          "{",
          "    float4 pos : SV_POSITION;",
          "    float2 texCoord: TEXCOORD0;",
          "};",
          "//<<< _declarations\r",
          "\r",
          "//>>> _GS\r",
          "",
          "//<<< _GS\r",
          "\r",
          "//>>> _VS \r",
          "PS_IN VS( VS_IN input )",
          "{",
          "    PS_IN output = (PS_IN)0;",
          "",
          "    output.pos = mul(input.pos, worldToCameraMatrix);",
          "    output.pos = mul(output.pos, projMatrix);",
          "    output.texCoord = input.texCoord;",
          "",
          "    return output;",
          "}",
          "//<<< _VS\r",
          "\r",
          "//>>> PS\r",
          "\r",
          "float4 PS( PS_IN input ) : SV_Target\r",
          "{\r",
          "    float4 t = Image.Sample(samLinear, input.texCoord);\r",
          "    float keya = smoothstep(length(t.rgb - Color.rgb), 0, Tolerance);\r",
          "    return float4(t.rgb, min(keya, t.a)) * ConvenientMultiply * ConvenienceMultiplyColor;\r",
          "}\r",
          "\r",
          "//<<< PS\r",
          "\r",
          "\r",
          "//>>> _technique\r",
          "technique10 Render",
          "{",
          "    pass P0",
          "    {",
          "        SetGeometryShader( 0 );",
          "        SetVertexShader( CompileShader( vs_4_0, VS() ) );",
          "        SetPixelShader( CompileShader( ps_4_0, PS() ) );",
          "    }",
          "}",
          "//<<< _technique\r",
          ""
        ]
      },
      "MetaID": "c522a66e-3260-4692-b3e3-79fd0361fa3d",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Image",
      "MetaInstanceID": "f08c56c5-2c33-4e86-9470-08ae4710e198",
      "DefaultValue": {
        "Type": "Image",
        "Value": "Framefield.Core.Image"
      },
      "MetaID": "9848060d-fd84-45b0-b658-d0d531c61dab",
      "IsMultiInput": "False",
      "Relevance": "Required",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Color.R",
      "MetaInstanceID": "05e1bcb4-e820-4f9c-83e6-9e546dd5b75e",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Color.G",
      "MetaInstanceID": "bd3f0e7b-9a27-4a5e-9c0f-0338e0001bae",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Color.B",
      "MetaInstanceID": "81555dad-b2f5-4c2e-baaf-ba312e4fc0ee",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Color.A",
      "MetaInstanceID": "d56b3f58-e2c0-4d27-ab40-954b9d3fe9ab",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Tolerance",
      "MetaInstanceID": "010622c0-f521-47fc-b846-db2cb993e602",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.001"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "ConvenientMultiply",
      "MetaInstanceID": "5ca294cf-c19f-49f1-9bbb-c3518f4593fd",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "ConvenienceMultiplyColor.R",
      "MetaInstanceID": "d2b204b5-9f3d-43a5-880f-719d713b8d0c",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "ConvenienceMultiplyColor.G",
      "MetaInstanceID": "2bf76649-ae2f-43cb-970c-b74c3d2eb4c6",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "ConvenienceMultiplyColor.B",
      "MetaInstanceID": "c620ea0c-587d-4a8f-904e-cc3c3291d7d6",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "ConvenienceMultiplyColor.A",
      "MetaInstanceID": "90da2bda-3005-4bdd-b610-213e5c10b831",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    }
  ],
  "Outputs": [
    {
      "Name": "Image",
      "MetaInstanceID": "2e3e0035-9820-491b-8fb4-acaf154f1869",
      "MetaID": "9848060d-fd84-45b0-b658-d0d531c61dab"
    }
  ],
  "OperatorParts": [
    {
      "MetaInstanceID": "30ed0f06-e095-48cc-ad36-75ae033b59d2",
      "MetaID": "955846bb-6cc8-4e95-ae4a-4695b92a3b72",
      "Name": "HardColorKeyFunc",
      "Version": "30de1754-736c-4944-8d2a-cb7408c3c48b",
      "Type": "Float",
      "IsMultiInput": "True",
      "Script": [
        "//>>> _using",
        "using System;",
        "using System.Collections.Generic;",
        "using System.Linq;",
        "using System.Text;",
        "using SharpDX;",
        "using SharpDX.Direct3D11;",
        "using SharpDX.Windows;",
        "//<<< _using",
        "",
        "namespace Framefield.Core.ID955846bb_6cc8_4e95_ae4a_4695b92a3b72",
        "{",
        "    public class Class_HardColorKey : FXImageFunction, Framefield.Core.OperatorPartTraits.ITimeAccessor",
        "    {",
        "        //>>> _inputids",
        "        private enum InputId",
        "        {",
        "            Code = 0,",
        "            Image = 1,",
        "            ColorR = 2,",
        "            ColorG = 3,",
        "            ColorB = 4,",
        "            ColorA = 5,",
        "            Tolerance = 6,",
        "            ConvenientMultiply = 7,",
        "            ConvenienceMultiplyColorR = 8,",
        "            ConvenienceMultiplyColorG = 9,",
        "            ConvenienceMultiplyColorB = 10,",
        "            ConvenienceMultiplyColorA = 11",
        "        }",
        "        //<<< _inputids",
        "",
        "        public override OperatorPartContext Eval(OperatorPartContext context, List<OperatorPart> inputs, int outputIdx) {",
        "            //>>> _params",
        "            var Code = inputs[(int)InputId.Code].Eval(context).Text;",
        "            var Image = inputs[(int)InputId.Image].Eval(context).Image; // Needs to be checked for null!",
        "            var ColorR = inputs[(int)InputId.ColorR].Eval(context).Value;",
        "            var ColorG = inputs[(int)InputId.ColorG].Eval(context).Value;",
        "            var ColorB = inputs[(int)InputId.ColorB].Eval(context).Value;",
        "            var ColorA = inputs[(int)InputId.ColorA].Eval(context).Value;",
        "            var Color = new Color4(ColorR, ColorG, ColorB, ColorA);",
        "            var Tolerance = inputs[(int)InputId.Tolerance].Eval(context).Value;",
        "            var ConvenientMultiply = inputs[(int)InputId.ConvenientMultiply].Eval(context).Value;",
        "            var ConvenienceMultiplyColorR = inputs[(int)InputId.ConvenienceMultiplyColorR].Eval(context).Value;",
        "            var ConvenienceMultiplyColorG = inputs[(int)InputId.ConvenienceMultiplyColorG].Eval(context).Value;",
        "            var ConvenienceMultiplyColorB = inputs[(int)InputId.ConvenienceMultiplyColorB].Eval(context).Value;",
        "            var ConvenienceMultiplyColorA = inputs[(int)InputId.ConvenienceMultiplyColorA].Eval(context).Value;",
        "            var ConvenienceMultiplyColor = new Color4(ConvenienceMultiplyColorR, ConvenienceMultiplyColorG, ConvenienceMultiplyColorB, ConvenienceMultiplyColorA);",
        "            //<<< _params",
        "            ",
        "            return PrepareAndEvalOnChange(context, () => {",
        "                ClearRenderTarget(context, new SharpDX.Color4(0, 0, 0, 0));",
        "",
        "                if (Image == null) {",
        "                    return;",
        "                }",
        "",
        "                //>>> _setup",
        "                using (var ImageView = new ShaderResourceView(context.D3DDevice, Image))",
        "                {",
        "                    _effect.GetVariableByName(\"RenderTargetSize\").AsVector().Set(new Vector2(_usedViewport.Width, _usedViewport.Height));",
        "                    _effect.GetVariableByName(\"Image\").AsShaderResource().SetResource(ImageView);",
        "                    _effect.GetVariableByName(\"Color\").AsVector().Set(new Vector4(ColorR, ColorG, ColorB, ColorA));",
        "                    _effect.GetVariableByName(\"Tolerance\").AsScalar().Set(Tolerance);",
        "                    _effect.GetVariableByName(\"ConvenientMultiply\").AsScalar().Set(ConvenientMultiply);",
        "                    _effect.GetVariableByName(\"ConvenienceMultiplyColor\").AsVector().Set(new Vector4(ConvenienceMultiplyColorR, ConvenienceMultiplyColorG, ConvenienceMultiplyColorB, ConvenienceMultiplyColorA));",
        "                //<<< _setup",
        "",
        "                if (context.Objects.ContainsKey(\"SKPlayerState\")) {",
        "                  var skstate = (SlashKickPerformer.SKPlayerState)context.Objects[\"SKPlayerState\"];",
        "                    _effect.GetVariableByName(\"iBPM\").AsScalar().Set((float)skstate.BPM);",
        "                    _effect.GetVariableByName(\"iProgram\").AsScalar().Set(skstate.ProgramIndex);",
        "                    _effect.GetVariableByName(\"iBeat\").AsScalar().Set((float)skstate.Beat);",
        "                }",
        "",
        "                _effect.GetVariableByName(\"iTime\").AsScalar().Set(context.Time);",
        "                Render(context);",
        "",
        "                //>>> _cleanup",
        "                }",
        "                //<<< _cleanup",
        "            });",
        "        }",
        "",
        "    }",
        "}",
        "",
        "",
        "",
        ""
      ],
      "AdditionalAssemblies": [
        "LibToollTenfour.dll"
      ]
    }
  ],
  "Operators": [],
  "Connections": [
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "30ed0f06-e095-48cc-ad36-75ae033b59d2",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "2e3e0035-9820-491b-8fb4-acaf154f1869"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "13774498-566e-44bf-b9f0-2004851c7480",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "30ed0f06-e095-48cc-ad36-75ae033b59d2"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "f08c56c5-2c33-4e86-9470-08ae4710e198",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "30ed0f06-e095-48cc-ad36-75ae033b59d2"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "05e1bcb4-e820-4f9c-83e6-9e546dd5b75e",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "30ed0f06-e095-48cc-ad36-75ae033b59d2"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "bd3f0e7b-9a27-4a5e-9c0f-0338e0001bae",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "30ed0f06-e095-48cc-ad36-75ae033b59d2"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "81555dad-b2f5-4c2e-baaf-ba312e4fc0ee",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "30ed0f06-e095-48cc-ad36-75ae033b59d2"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "d56b3f58-e2c0-4d27-ab40-954b9d3fe9ab",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "30ed0f06-e095-48cc-ad36-75ae033b59d2"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "010622c0-f521-47fc-b846-db2cb993e602",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "30ed0f06-e095-48cc-ad36-75ae033b59d2"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "5ca294cf-c19f-49f1-9bbb-c3518f4593fd",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "30ed0f06-e095-48cc-ad36-75ae033b59d2"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "d2b204b5-9f3d-43a5-880f-719d713b8d0c",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "30ed0f06-e095-48cc-ad36-75ae033b59d2"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "2bf76649-ae2f-43cb-970c-b74c3d2eb4c6",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "30ed0f06-e095-48cc-ad36-75ae033b59d2"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "c620ea0c-587d-4a8f-904e-cc3c3291d7d6",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "30ed0f06-e095-48cc-ad36-75ae033b59d2"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "90da2bda-3005-4bdd-b610-213e5c10b831",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "30ed0f06-e095-48cc-ad36-75ae033b59d2"
    }
  ]
}