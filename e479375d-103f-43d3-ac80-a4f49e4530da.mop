{
  "Name": "SH_TestPattern",
  "_id": "e479375d-103f-43d3-ac80-a4f49e4530da",
  "Namespace": "user.tenfour.shaders",
  "Description": "",
  "Inputs": [
    {
      "Name": "Code",
      "MetaInstanceID": "2ea2c07b-06aa-4145-a62b-e00d2dd29f76",
      "DefaultValue": {
        "Type": "Text",
        "Value": [
          "//>>> _common parameters\r",
          "float4x4 objectToWorldMatrix;",
          "float4x4 worldToCameraMatrix;",
          "float4x4 projMatrix;",
          "Texture2D txDiffuse;",
          "float2 RenderTargetSize;",
          "//<<< _common parameters\r",
          "\r",
          "//>>> _parameters\r",
          "float BandSize;",
          "float GridCellSizePixels;",
          "float GridLineSizePixels;",
          "//<<< _parameters\r",
          "\r",
          "//>>> _setup\r",
          "SamplerState samLinear",
          "{",
          "    Filter = MIN_MAG_MIP_LINEAR;",
          "    AddressU = Clamp;",
          "    AddressV = Clamp;",
          "};",
          "//<<< _setup\r",
          "\r",
          "//>>> _declarations\r",
          "struct VS_IN",
          "{",
          "    float4 pos : POSITION;",
          "    float2 texCoord : TEXCOORD;",
          "};",
          "",
          "struct PS_IN",
          "{",
          "    float4 pos : SV_POSITION;",
          "    float2 texCoord: TEXCOORD0;",
          "};",
          "//<<< _declarations\r",
          "\r",
          "//>>> _GS\r",
          "",
          "//<<< _GS\r",
          "\r",
          "//>>> _VS \r",
          "PS_IN VS( VS_IN input )",
          "{",
          "    PS_IN output = (PS_IN)0;",
          "",
          "    output.pos = mul(input.pos, worldToCameraMatrix);",
          "    output.pos = mul(output.pos, projMatrix);",
          "    output.texCoord = input.texCoord;",
          "",
          "    return output;",
          "}",
          "//<<< _VS\r",
          "\r",
          "//>>> PS\r",
          "\r",
          "\r",
          "#define q(x,y) (floor(x/y)*y)\r",
          "\r",
          "\r",
          "float par(float x, float p) {\r",
          "    return clamp(sign(frac(x * p)-.5),0,1);\r",
          "}\r",
          "\r",
          "float4 PS( PS_IN input ) : SV_Target\r",
          "{\r",
          "    float bandSize = BandSize;\r",
          "    if ((input.texCoord.y % (1-bandSize)) < bandSize) {\r",
          "        return float4(q(input.texCoord.xxx*1.25, .25), 1);\r",
          "    }\r",
          "    if ((input.texCoord.y % (1-bandSize*2.)) < bandSize*2.) {\r",
          "        float r = par(input.texCoord.x, 1.);\r",
          "        float g = par(input.texCoord.x, 2.);\r",
          "        float b = par(input.texCoord.x, 4.);\r",
          "        return float4(r,g,b, 1);\r",
          "    }\r",
          "    if ((input.texCoord.y % (1-bandSize*3.)) < bandSize*3.) {\r",
          "        float r = par(input.texCoord.x, 1.) * .5;\r",
          "        float g = par(input.texCoord.x, 2.) * .5;\r",
          "        float b = par(input.texCoord.x, 4.) * .5;\r",
          "        return float4(r,g,b, 1);\r",
          "    }\r",
          "    \r",
          "    float2 g = abs(fmod(input.pos.xy-GridCellSizePixels*.5, GridCellSizePixels));\r",
          "    if ((g.x) < GridLineSizePixels || (g.y) < GridLineSizePixels)\r",
          "    {\r",
          "        return float4(float3(1,1,1)*.2,1);\r",
          "    }\r",
          "    \r",
          "    return float4(0,0,0,0);\r",
          "}\r",
          "\r",
          "\r",
          "",
          "//<<< PS\r",
          "\r",
          "//>>> _technique\r",
          "technique10 Render",
          "{",
          "    pass P0",
          "    {",
          "        SetGeometryShader( 0 );",
          "        SetVertexShader( CompileShader( vs_4_0, VS() ) );",
          "        SetPixelShader( CompileShader( ps_4_0, PS() ) );",
          "    }",
          "}",
          "//<<< _technique\r",
          ""
        ]
      },
      "MetaID": "c522a66e-3260-4692-b3e3-79fd0361fa3d",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "BandSize",
      "MetaInstanceID": "35c3ad9e-dc51-47b8-830d-e99b04d0c587",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "GridCellSizePixels",
      "MetaInstanceID": "cf3d3919-49fc-478e-ad53-281b84825a9c",
      "DefaultValue": {
        "Type": "Float",
        "Value": "75"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "GridLineSizePixels",
      "MetaInstanceID": "609dae73-7732-460f-89e1-ae3fa4a409cf",
      "DefaultValue": {
        "Type": "Float",
        "Value": "3"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "1",
      "ScaleType": "Linear",
      "EnumValues": []
    }
  ],
  "Outputs": [
    {
      "Name": "Image",
      "MetaInstanceID": "9bde27f8-7a02-4f34-b0db-862d2fdf1d7a",
      "MetaID": "9848060d-fd84-45b0-b658-d0d531c61dab"
    }
  ],
  "OperatorParts": [
    {
      "MetaInstanceID": "5e3c6cfb-6a51-454a-aa5e-5ec39fe13581",
      "MetaID": "174edc50-55f1-4a48-930b-4220ad85748d",
      "Name": "SH_TestPatternFunc",
      "Version": "7cdc075e-596b-4904-bc14-a052fa3bda73",
      "Type": "Float",
      "IsMultiInput": "True",
      "Script": [
        "//>>> _using",
        "using System;",
        "using System.Collections.Generic;",
        "using System.Linq;",
        "using System.Text;",
        "using SharpDX;",
        "using SharpDX.Direct3D11;",
        "using SharpDX.Windows;",
        "//<<< _using",
        "",
        "namespace Framefield.Core.ID174edc50_55f1_4a48_930b_4220ad85748d",
        "{",
        "    public class Class_SH_TestPattern : FXImageFunction, Framefield.Core.OperatorPartTraits.ITimeAccessor",
        "    {",
        "        //>>> _inputids",
        "        private enum InputId",
        "        {",
        "            Code = 0,",
        "            BandSize = 1,",
        "            GridCellSizePixels = 2,",
        "            GridLineSizePixels = 3",
        "        }",
        "        //<<< _inputids",
        "",
        "        public override OperatorPartContext Eval(OperatorPartContext context, List<OperatorPart> inputs, int outputIdx) {",
        "            //>>> _params",
        "            var Code = inputs[(int)InputId.Code].Eval(context).Text;",
        "            var BandSize = inputs[(int)InputId.BandSize].Eval(context).Value;",
        "            var GridCellSizePixels = inputs[(int)InputId.GridCellSizePixels].Eval(context).Value;",
        "            var GridLineSizePixels = inputs[(int)InputId.GridLineSizePixels].Eval(context).Value;",
        "            //<<< _params",
        "            ",
        "            return PrepareAndEvalOnChange(context, () => {",
        "                ClearRenderTarget(context, new SharpDX.Color4(0, 0, 0, 0));",
        "",
        "                //>>> _setup",
        "                {",
        "                    _effect.GetVariableByName(\"RenderTargetSize\").AsVector().Set(new Vector2(_usedViewport.Width, _usedViewport.Height));",
        "                    _effect.GetVariableByName(\"BandSize\").AsScalar().Set(BandSize);",
        "                    _effect.GetVariableByName(\"GridCellSizePixels\").AsScalar().Set(GridCellSizePixels);",
        "                    _effect.GetVariableByName(\"GridLineSizePixels\").AsScalar().Set(GridLineSizePixels);",
        "                //<<< _setup",
        "",
        "                Render(context);",
        "",
        "                //>>> _cleanup",
        "                }",
        "                //<<< _cleanup",
        "            });",
        "        }",
        "",
        "    }",
        "}",
        "",
        "",
        "",
        ""
      ],
      "AdditionalAssemblies": [
        "LibToollTenfour.dll"
      ]
    }
  ],
  "Operators": [],
  "Connections": [
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "5e3c6cfb-6a51-454a-aa5e-5ec39fe13581",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "9bde27f8-7a02-4f34-b0db-862d2fdf1d7a"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "2ea2c07b-06aa-4145-a62b-e00d2dd29f76",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "5e3c6cfb-6a51-454a-aa5e-5ec39fe13581"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "35c3ad9e-dc51-47b8-830d-e99b04d0c587",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "5e3c6cfb-6a51-454a-aa5e-5ec39fe13581"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "cf3d3919-49fc-478e-ad53-281b84825a9c",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "5e3c6cfb-6a51-454a-aa5e-5ec39fe13581"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "609dae73-7732-460f-89e1-ae3fa4a409cf",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "5e3c6cfb-6a51-454a-aa5e-5ec39fe13581"
    }
  ]
}