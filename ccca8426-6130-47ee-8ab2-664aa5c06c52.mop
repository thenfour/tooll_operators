{
  "Name": "SH_GlowCellsExperiment",
  "_id": "ccca8426-6130-47ee-8ab2-664aa5c06c52",
  "Namespace": "user.tenfour.shaders",
  "Description": "fork of glowcells that works in some kind of linear fashion\r\n\r\nin fact now basically it can do everything the original GlowCells can do, but more.",
  "Inputs": [
    {
      "Name": "Code",
      "MetaInstanceID": "5b98f87b-e608-4237-959f-7d0372f2a316",
      "DefaultValue": {
        "Type": "Text",
        "Value": [
          "//>>> _common parameters\r",
          "float4x4 objectToWorldMatrix;",
          "float4x4 worldToCameraMatrix;",
          "float4x4 projMatrix;",
          "Texture2D txDiffuse;",
          "float2 RenderTargetSize;",
          "//<<< _common parameters\r",
          "\r",
          "//>>> _parameters\r",
          "float2 Position;",
          "float MaxIterations;",
          "float Bias;",
          "float Zoom;",
          "float Exponent;",
          "float Animate;",
          "float PointStrength;",
          "float Density;",
          "float CellShape;",
          "float ColorSaturation;",
          "float OutputQuantization;",
          "float LevelQuantization;",
          "float InitialCellSize;",
          "float CellRotationAmt;",
          "float CellScale;",
          "float4 BackgroundColor;",
          "//<<< _parameters\r",
          "\r",
          "static const float PI = atan(1.)*4.;\r",
          "static const float PI2 = atan(1.)*8.;\r",
          "\r",
          "\r",
          "//>>> _setup\r",
          "SamplerState samLinear",
          "{",
          "    Filter = MIN_MAG_MIP_LINEAR;",
          "    AddressU = Clamp;",
          "    AddressV = Clamp;",
          "};",
          "//<<< _setup\r",
          "SamplerState samLinearWrap\r",
          "{\r",
          "    Filter = MIN_MAG_MIP_POINT;\r",
          "    AddressU = Wrap;\r",
          "    AddressV = Wrap;\r",
          "};\r",
          "\r",
          "//>>> _declarations\r",
          "struct VS_IN",
          "{",
          "    float4 pos : POSITION;",
          "    float2 texCoord : TEXCOORD;",
          "};",
          "",
          "struct PS_IN",
          "{",
          "    float4 pos : SV_POSITION;",
          "    float2 texCoord: TEXCOORD0;",
          "};",
          "//<<< _declarations\r",
          "\r",
          "//>>> _GS\r",
          "",
          "//<<< _GS\r",
          "\r",
          "//>>> _VS \r",
          "PS_IN VS( VS_IN input )",
          "{",
          "    PS_IN output = (PS_IN)0;",
          "",
          "    output.pos = mul(input.pos, worldToCameraMatrix);",
          "    output.pos = mul(output.pos, projMatrix);",
          "    output.texCoord = input.texCoord;",
          "",
          "    return output;",
          "}",
          "//<<< _VS\r",
          "\r",
          "//>>> PS\r",
          "float2x2 rot2D(float r){\r",
          "    return float2x2(cos(r), -sin(r), sin(r), cos(r));\r",
          "}\r",
          "\r",
          "\r",
          "float4 hash42(float2 p)\r",
          "{\r",
          "\tfloat4 p4 = frac(p.xyxy * float4(.1031, .1030, .0973, .1099));\r",
          "    p4 += dot(p4, p4.wzxy+33.33);\r",
          "    return frac((p4.xxyz+p4.yzzw)*p4.zywx);\r",
          "}\r",
          "\r",
          "\r",
          "float4 PS( PS_IN input ) : SV_Target\r",
          "{\r",
          "    float2 uv = input.texCoord;\r",
          "    float2 R = RenderTargetSize;\r",
          "\r",
          "    uv -= .5;// always center zoom\r",
          "    uv *= Zoom;\r",
          "    uv += Position;\r",
          "\r",
          "    float2 cellSize = float2(InitialCellSize,InitialCellSize);\r",
          "    cellSize.x /= R.x / R.y;\r",
          "    float globalSD = 1e5;\r",
          "    float4 color = float4(0,0,0,0);\r",
          "    float2 cellID = float2(0,0);\r",
          "    float2 cellPos1 = float2(0,0);\r",
          "    \r",
          "    for (float i = 0; i < MaxIterations; ++ i) {\r",
          "        cellID = floor(uv / cellSize);\r",
          "        float4 h = hash42(cellID + 1e3);\r",
          "        float4 h2 = hash42(cellID - 1e2);\r",
          "        cellID *= cellSize;\r",
          "        cellPos1 = (frac(uv / cellSize) - .5) * 2.;// -1 to 1\r",
          "        \r",
          "        cellPos1 *= CellScale;\r",
          "        cellPos1 = mul(cellPos1, rot2D((h2.z - .5) * CellRotationAmt));\r",
          "\r",
          "        // sd.\r",
          "        cellPos1 = sign(cellPos1)*pow(abs(cellPos1),CellShape);\r",
          "        float cellSD = 1.-length(cellPos1);\r",
          "        \r",
          "        float3 cellColor = h.rgb;\r",
          "\r",
          "        // blink.\r",
          "        float4 rowH = hash42(cellID.yy + 123.33);\r",
          "        float a;\r",
          "\r",
          "        a = sin((Animate * h2.x) + 1e2 * h2.y)*.5+.5;\r",
          "        \r",
          "        a = smoothstep(Density,.0,a);\r",
          "        \r",
          "        //cellColor *= a;\r",
          "        \r",
          "        if (h.w < Bias || (i == MaxIterations - 1)) {\r",
          "            color = float4(cellColor, a);\r",
          "            globalSD = cellSD;\r",
          "            break;\r",
          "        }\r",
          "        cellSize /= 2;\r",
          "    }\r",
          "    \r",
          "    globalSD = pow(max(0,globalSD), Exponent);\r",
          "    globalSD *= PointStrength;\r",
          "    \r",
          "    color.rgb = lerp((color.r+color.g+color.b)/3, color.rgb, ColorSaturation);\r",
          "    color = clamp(color, 0, 1);\r",
          "    \r",
          "    if (LevelQuantization > 0.001) {\r",
          "        color.rgb = floor(color.rgb / LevelQuantization) * LevelQuantization;\r",
          "    }\r",
          "    color = clamp(color, 0, 1);\r",
          "    \r",
          "    //float4 ret = lerp(BackgroundColor, float4(color, 1), globalSD);\r",
          "    color = lerp(BackgroundColor, color, color.a);\r",
          "    float4 ret = lerp(BackgroundColor, float4(color.rgb, 1), globalSD);\r",
          "    if (OutputQuantization > 0.001) {\r",
          "        ret.rgb = floor(ret.rgb / OutputQuantization) * OutputQuantization;\r",
          "    }\r",
          "    return clamp(ret, 0, 1);\r",
          "}\r",
          "\r",
          "//<<< PS\r",
          "\r",
          "//>>> _technique\r",
          "technique10 Render",
          "{",
          "    pass P0",
          "    {",
          "        SetGeometryShader( 0 );",
          "        SetVertexShader( CompileShader( vs_4_0, VS() ) );",
          "        SetPixelShader( CompileShader( ps_4_0, PS() ) );",
          "    }",
          "}",
          "//<<< _technique\r",
          ""
        ]
      },
      "MetaID": "c522a66e-3260-4692-b3e3-79fd0361fa3d",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Position.X",
      "MetaInstanceID": "4597dfd2-0653-45ae-8ba1-9bfe3798471c",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.5"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Position.Y",
      "MetaInstanceID": "c29a737d-74a6-4922-8632-ad21ffe55ade",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.5"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "MaxIterations",
      "MetaInstanceID": "12434283-00d7-4a26-9f30-3ddc966eb455",
      "DefaultValue": {
        "Type": "Float",
        "Value": "3"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "1",
      "Max": "30",
      "Scale": "1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Bias",
      "MetaInstanceID": "70f4ea1d-0c03-4c4c-aeac-7e48d8c076be",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.5"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.001",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Zoom",
      "MetaInstanceID": "f088a7f1-ec21-4b8a-be88-3219469b7e48",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0.1",
      "Max": "10000",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "InitialCellSize",
      "MetaInstanceID": "47930213-4f6e-4f2d-abff-de6d4b8990e6",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.2"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0.001",
      "Max": "5",
      "Scale": "0.001",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "CellShape",
      "MetaInstanceID": "5a4a5ac4-87b4-43b4-85e0-987790335cee",
      "DefaultValue": {
        "Type": "Float",
        "Value": "7"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "10",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Animate",
      "MetaInstanceID": "55487e38-cc4d-4bc2-84dc-5a47fb2710fa",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Required",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Density",
      "MetaInstanceID": "891b4ebe-d673-44c5-8203-3cd195da6a37",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.5"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "2",
      "Scale": "0.001",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Exponent",
      "MetaInstanceID": "0b9d081d-9d1f-4877-8de0-b01090638fe6",
      "DefaultValue": {
        "Type": "Float",
        "Value": "3"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "10000",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "PointStrength",
      "MetaInstanceID": "530a1e9a-24ba-41ab-9907-63bfdc05b5fc",
      "DefaultValue": {
        "Type": "Float",
        "Value": "5"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "10000",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "ColorSaturation",
      "MetaInstanceID": "8e8bc9c1-fa80-46a8-a1c6-a44fead78edd",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "OutputQuantization",
      "MetaInstanceID": "29d849fe-4a1c-42b4-b59a-0ecdfcac3aa9",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "LevelQuantization",
      "MetaInstanceID": "b44e6349-7d09-4117-8d9f-ce0ec0e4b610",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "CellRotationAmt",
      "MetaInstanceID": "8f24049b-e301-4fb6-bb45-bc263b28b9c7",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "CellScale",
      "MetaInstanceID": "726b0211-a7e1-4301-a42a-16b4570a1002",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "BackgroundColor.R",
      "MetaInstanceID": "988887dd-4bc0-4637-80eb-7bd608378813",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "BackgroundColor.G",
      "MetaInstanceID": "bc43d51c-59a2-4516-be0c-490fb99a735f",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "BackgroundColor.B",
      "MetaInstanceID": "b6697244-d1cb-4449-b6f1-83a52d7b8dc2",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "BackgroundColor.A",
      "MetaInstanceID": "b3f17930-2db8-4912-80d6-02d0d8615471",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    }
  ],
  "Outputs": [
    {
      "Name": "Image",
      "MetaInstanceID": "941227dc-c7b3-47e3-a879-e762f445908e",
      "MetaID": "9848060d-fd84-45b0-b658-d0d531c61dab"
    }
  ],
  "OperatorParts": [
    {
      "MetaInstanceID": "e063f93d-febe-4cf8-beda-673ba087c6fe",
      "MetaID": "870a0ae8-2497-4740-8096-d2108585f0b0",
      "Name": "SH_GlowCellsExperimentFunc",
      "Version": "37419737-bd51-4aad-8c92-4a956f190576",
      "Type": "Float",
      "IsMultiInput": "True",
      "Script": [
        "//>>> _using",
        "using System;",
        "using System.Collections.Generic;",
        "using System.Linq;",
        "using System.Text;",
        "using SharpDX;",
        "using SharpDX.Direct3D11;",
        "using SharpDX.Windows;",
        "//<<< _using",
        "",
        "namespace Framefield.Core.ID870a0ae8_2497_4740_8096_d2108585f0b0",
        "{",
        "    public class Class_SH_GlowCellsExperiment : FXImageFunction, Framefield.Core.OperatorPartTraits.ITimeAccessor",
        "    {",
        "        //>>> _inputids",
        "        private enum InputId",
        "        {",
        "            Code = 0,",
        "            PositionX = 1,",
        "            PositionY = 2,",
        "            MaxIterations = 3,",
        "            Bias = 4,",
        "            Zoom = 5,",
        "            Exponent = 6,",
        "            Animate = 7,",
        "            PointStrength = 8,",
        "            Density = 9,",
        "            CellShape = 10,",
        "            ColorSaturation = 11,",
        "            OutputQuantization = 12,",
        "            LevelQuantization = 13,",
        "            InitialCellSize = 14,",
        "            CellRotationAmt = 15,",
        "            CellScale = 16,",
        "            BackgroundColorR = 17,",
        "            BackgroundColorG = 18,",
        "            BackgroundColorB = 19,",
        "            BackgroundColorA = 20",
        "        }",
        "        //<<< _inputids",
        "",
        "        public override OperatorPartContext Eval(OperatorPartContext context, List<OperatorPart> inputs, int outputIdx) {",
        "            //>>> _params",
        "            var Code = inputs[(int)InputId.Code].Eval(context).Text;",
        "            var PositionX = inputs[(int)InputId.PositionX].Eval(context).Value;",
        "            var PositionY = inputs[(int)InputId.PositionY].Eval(context).Value;",
        "            var Position = new Vector2(PositionX, PositionY);",
        "            var MaxIterations = inputs[(int)InputId.MaxIterations].Eval(context).Value;",
        "            var Bias = inputs[(int)InputId.Bias].Eval(context).Value;",
        "            var Zoom = inputs[(int)InputId.Zoom].Eval(context).Value;",
        "            var Exponent = inputs[(int)InputId.Exponent].Eval(context).Value;",
        "            var Animate = inputs[(int)InputId.Animate].Eval(context).Value;",
        "            var PointStrength = inputs[(int)InputId.PointStrength].Eval(context).Value;",
        "            var Density = inputs[(int)InputId.Density].Eval(context).Value;",
        "            var CellShape = inputs[(int)InputId.CellShape].Eval(context).Value;",
        "            var ColorSaturation = inputs[(int)InputId.ColorSaturation].Eval(context).Value;",
        "            var OutputQuantization = inputs[(int)InputId.OutputQuantization].Eval(context).Value;",
        "            var LevelQuantization = inputs[(int)InputId.LevelQuantization].Eval(context).Value;",
        "            var InitialCellSize = inputs[(int)InputId.InitialCellSize].Eval(context).Value;",
        "            var CellRotationAmt = inputs[(int)InputId.CellRotationAmt].Eval(context).Value;",
        "            var CellScale = inputs[(int)InputId.CellScale].Eval(context).Value;",
        "            var BackgroundColorR = inputs[(int)InputId.BackgroundColorR].Eval(context).Value;",
        "            var BackgroundColorG = inputs[(int)InputId.BackgroundColorG].Eval(context).Value;",
        "            var BackgroundColorB = inputs[(int)InputId.BackgroundColorB].Eval(context).Value;",
        "            var BackgroundColorA = inputs[(int)InputId.BackgroundColorA].Eval(context).Value;",
        "            var BackgroundColor = new Color4(BackgroundColorR, BackgroundColorG, BackgroundColorB, BackgroundColorA);",
        "            //<<< _params",
        "            ",
        "            return PrepareAndEvalOnChange(context, () => {",
        "                ClearRenderTarget(context, new SharpDX.Color4(0, 0, 0, 0));",
        "",
        "                //>>> _setup",
        "                {",
        "                    _effect.GetVariableByName(\"RenderTargetSize\").AsVector().Set(new Vector2(_usedViewport.Width, _usedViewport.Height));",
        "                    _effect.GetVariableByName(\"Position\").AsVector().Set(new Vector2(PositionX, PositionY));",
        "                    _effect.GetVariableByName(\"MaxIterations\").AsScalar().Set(MaxIterations);",
        "                    _effect.GetVariableByName(\"Bias\").AsScalar().Set(Bias);",
        "                    _effect.GetVariableByName(\"Zoom\").AsScalar().Set(Zoom);",
        "                    _effect.GetVariableByName(\"Exponent\").AsScalar().Set(Exponent);",
        "                    _effect.GetVariableByName(\"Animate\").AsScalar().Set(Animate);",
        "                    _effect.GetVariableByName(\"PointStrength\").AsScalar().Set(PointStrength);",
        "                    _effect.GetVariableByName(\"Density\").AsScalar().Set(Density);",
        "                    _effect.GetVariableByName(\"CellShape\").AsScalar().Set(CellShape);",
        "                    _effect.GetVariableByName(\"ColorSaturation\").AsScalar().Set(ColorSaturation);",
        "                    _effect.GetVariableByName(\"OutputQuantization\").AsScalar().Set(OutputQuantization);",
        "                    _effect.GetVariableByName(\"LevelQuantization\").AsScalar().Set(LevelQuantization);",
        "                    _effect.GetVariableByName(\"InitialCellSize\").AsScalar().Set(InitialCellSize);",
        "                    _effect.GetVariableByName(\"CellRotationAmt\").AsScalar().Set(CellRotationAmt);",
        "                    _effect.GetVariableByName(\"CellScale\").AsScalar().Set(CellScale);",
        "                    _effect.GetVariableByName(\"BackgroundColor\").AsVector().Set(new Vector4(BackgroundColorR, BackgroundColorG, BackgroundColorB, BackgroundColorA));",
        "                //<<< _setup",
        "",
        "                Render(context);",
        "",
        "                //>>> _cleanup",
        "                }",
        "                //<<< _cleanup",
        "            });",
        "        }",
        "",
        "    }",
        "}",
        "",
        "",
        "",
        ""
      ],
      "AdditionalAssemblies": [
        "LibToollTenfour.dll"
      ]
    }
  ],
  "Operators": [],
  "Connections": [
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "e063f93d-febe-4cf8-beda-673ba087c6fe",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "941227dc-c7b3-47e3-a879-e762f445908e"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "5b98f87b-e608-4237-959f-7d0372f2a316",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e063f93d-febe-4cf8-beda-673ba087c6fe"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "4597dfd2-0653-45ae-8ba1-9bfe3798471c",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e063f93d-febe-4cf8-beda-673ba087c6fe"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "c29a737d-74a6-4922-8632-ad21ffe55ade",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e063f93d-febe-4cf8-beda-673ba087c6fe"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "12434283-00d7-4a26-9f30-3ddc966eb455",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e063f93d-febe-4cf8-beda-673ba087c6fe"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "70f4ea1d-0c03-4c4c-aeac-7e48d8c076be",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e063f93d-febe-4cf8-beda-673ba087c6fe"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "f088a7f1-ec21-4b8a-be88-3219469b7e48",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e063f93d-febe-4cf8-beda-673ba087c6fe"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "0b9d081d-9d1f-4877-8de0-b01090638fe6",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e063f93d-febe-4cf8-beda-673ba087c6fe"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "55487e38-cc4d-4bc2-84dc-5a47fb2710fa",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e063f93d-febe-4cf8-beda-673ba087c6fe"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "530a1e9a-24ba-41ab-9907-63bfdc05b5fc",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e063f93d-febe-4cf8-beda-673ba087c6fe"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "891b4ebe-d673-44c5-8203-3cd195da6a37",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e063f93d-febe-4cf8-beda-673ba087c6fe"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "5a4a5ac4-87b4-43b4-85e0-987790335cee",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e063f93d-febe-4cf8-beda-673ba087c6fe"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "8e8bc9c1-fa80-46a8-a1c6-a44fead78edd",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e063f93d-febe-4cf8-beda-673ba087c6fe"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "29d849fe-4a1c-42b4-b59a-0ecdfcac3aa9",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e063f93d-febe-4cf8-beda-673ba087c6fe"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "b44e6349-7d09-4117-8d9f-ce0ec0e4b610",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e063f93d-febe-4cf8-beda-673ba087c6fe"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "47930213-4f6e-4f2d-abff-de6d4b8990e6",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e063f93d-febe-4cf8-beda-673ba087c6fe"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "8f24049b-e301-4fb6-bb45-bc263b28b9c7",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e063f93d-febe-4cf8-beda-673ba087c6fe"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "726b0211-a7e1-4301-a42a-16b4570a1002",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e063f93d-febe-4cf8-beda-673ba087c6fe"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "988887dd-4bc0-4637-80eb-7bd608378813",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e063f93d-febe-4cf8-beda-673ba087c6fe"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "bc43d51c-59a2-4516-be0c-490fb99a735f",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e063f93d-febe-4cf8-beda-673ba087c6fe"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "b6697244-d1cb-4449-b6f1-83a52d7b8dc2",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e063f93d-febe-4cf8-beda-673ba087c6fe"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "b3f17930-2db8-4912-80d6-02d0d8615471",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e063f93d-febe-4cf8-beda-673ba087c6fe"
    }
  ]
}