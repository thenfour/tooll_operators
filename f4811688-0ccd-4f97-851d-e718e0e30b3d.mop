{
  "Name": "SH_GlowCellsHard",
  "_id": "f4811688-0ccd-4f97-851d-e718e0e30b3d",
  "Namespace": "user.tenfour.shaders",
  "Description": "fork of glowcells that works in some kind of linear fashion\r\n\r\nin fact now basically it can do everything the original GlowCells can do, but more.",
  "Inputs": [
    {
      "Name": "Code",
      "MetaInstanceID": "06bf0605-1bcf-4904-8a6d-0f47b4a52548",
      "DefaultValue": {
        "Type": "Text",
        "Value": [
          "//>>> _common parameters\r",
          "float4x4 objectToWorldMatrix;",
          "float4x4 worldToCameraMatrix;",
          "float4x4 projMatrix;",
          "Texture2D txDiffuse;",
          "float2 RenderTargetSize;",
          "//<<< _common parameters\r",
          "\r",
          "//>>> _parameters\r",
          "float2 Position;",
          "float MaxIterations;",
          "float Bias;",
          "float Zoom;",
          "float Animate;",
          "float PointStrength;",
          "float Density;",
          "float ColorSaturation;",
          "float InitialCellSize;",
          "float CellRotationAmt;",
          "float CellScale;",
          "//<<< _parameters\r",
          "\r",
          "static const float PI = atan(1.)*4.;\r",
          "static const float PI2 = atan(1.)*8.;\r",
          "\r",
          "\r",
          "//>>> _setup\r",
          "SamplerState samLinear",
          "{",
          "    Filter = MIN_MAG_MIP_LINEAR;",
          "    AddressU = Clamp;",
          "    AddressV = Clamp;",
          "};",
          "//<<< _setup\r",
          "SamplerState samLinearWrap\r",
          "{\r",
          "    Filter = MIN_MAG_MIP_POINT;\r",
          "    AddressU = Wrap;\r",
          "    AddressV = Wrap;\r",
          "};\r",
          "\r",
          "//>>> _declarations\r",
          "struct VS_IN",
          "{",
          "    float4 pos : POSITION;",
          "    float2 texCoord : TEXCOORD;",
          "};",
          "",
          "struct PS_IN",
          "{",
          "    float4 pos : SV_POSITION;",
          "    float2 texCoord: TEXCOORD0;",
          "};",
          "//<<< _declarations\r",
          "\r",
          "//>>> _GS\r",
          "",
          "//<<< _GS\r",
          "\r",
          "//>>> _VS \r",
          "PS_IN VS( VS_IN input )",
          "{",
          "    PS_IN output = (PS_IN)0;",
          "",
          "    output.pos = mul(input.pos, worldToCameraMatrix);",
          "    output.pos = mul(output.pos, projMatrix);",
          "    output.texCoord = input.texCoord;",
          "",
          "    return output;",
          "}",
          "//<<< _VS\r",
          "\r",
          "//>>> PS\r",
          "float2x2 rot2D(float r){\r",
          "    return float2x2(cos(r), -sin(r), sin(r), cos(r));\r",
          "}\r",
          "\r",
          "\r",
          "float4 hash42(float2 p)\r",
          "{\r",
          "\tfloat4 p4 = frac(p.xyxy * float4(.1031, .1030, .0973, .1099));\r",
          "    p4 += dot(p4, p4.wzxy+33.33);\r",
          "    return frac((p4.xxyz+p4.yzzw)*p4.zywx);\r",
          "}\r",
          "\r",
          "float sdSquare(float2 p, float2 s) {\r",
          "    float2 b = abs(p) - s;\r",
          "\treturn max(b.x,b.y);    \r",
          "}\r",
          "\r",
          "float4 PS( PS_IN input ) : SV_Target\r",
          "{\r",
          "    float2 uv = input.texCoord;\r",
          "    float2 R = RenderTargetSize;\r",
          "\r",
          "    uv -= .5;// always center zoom\r",
          "    uv *= Zoom;\r",
          "\r",
          "    float2 cellSize = float2(InitialCellSize,InitialCellSize);\r",
          "    cellSize.x /= R.x / R.y;\r",
          "    float globalSD = 1e5;\r",
          "    float3 color = float3(0,0,0);\r",
          "    float2 cellID = float2(0,0);\r",
          "    float2 cellPos1 = float2(0,0);\r",
          "    float s = 1;\r",
          "    \r",
          "    // parity.\r",
          "    uv.y += Position.y;\r",
          "    float2 p = abs(floor(uv / cellSize));\r",
          "    p %= 2;\r",
          "    p -= .5;\r",
          "    s *= sign(p.y);\r",
          "    \r",
          "    uv.x += Position.x * float2(s, 1);\r",
          "    \r",
          "    for (float i = 0; i < MaxIterations; ++ i) {\r",
          "        cellID = floor(uv / cellSize);\r",
          "        float4 h = hash42(cellID + 1e3);\r",
          "        float4 h2 = hash42(cellID - 1e2);\r",
          "        cellID *= cellSize;\r",
          "        cellPos1 = (frac(uv / cellSize) - .5) * 2.;// -1 to 1\r",
          "        \r",
          "        cellPos1 *= CellScale;\r",
          "        cellPos1 = mul(cellPos1, rot2D((h2.z - .5) * CellRotationAmt));\r",
          "\r",
          "        // sd.\r",
          "        cellPos1 = sign(cellPos1)*abs(cellPos1);\r",
          "        //float cellSD = 1.-length(cellPos1);\r",
          "        float cellSD = sdSquare(cellPos1,cellSize);\r",
          "        \r",
          "        float3 cellColor = h.rgb;\r",
          "\r",
          "        // blink.\r",
          "        float4 rowH = hash42(cellID.yy + 123.33);\r",
          "        float a;\r",
          "\r",
          "            a = sin((Animate * h2.x) + 1e2 * h2.y)*.5+.5;\r",
          "        \r",
          "        a = smoothstep(Density,.0,a);\r",
          "        \r",
          "        cellColor *= a;\r",
          "        \r",
          "        if (h.w < Bias || (i == MaxIterations - 1)) {\r",
          "            color = cellColor;\r",
          "            globalSD = cellSD;\r",
          "            break;\r",
          "        }\r",
          "        //uv *= 2;\r",
          "        cellSize /= 2;\r",
          "    }\r",
          "    \r",
          "    //globalSD = pow(max(0,globalSD), Exponent);\r",
          "    //globalSD *= PointStrength;\r",
          "    \r",
          "    color = lerp((color.r+color.g+color.b)/3, color, ColorSaturation);\r",
          "    color = clamp(color, 0, 1);\r",
          "    \r",
          "    color = clamp(color, 0, 1);\r",
          "    \r",
          "    //float4 ret = float4(globalSD * color,1);\r",
          "    float4 ret = float4(color * smoothstep(1.1,.9,globalSD), 1);\r",
          "    return clamp(ret, 0, 1);\r",
          "}\r",
          "\r",
          "//<<< PS\r",
          "\r",
          "//>>> _technique\r",
          "technique10 Render",
          "{",
          "    pass P0",
          "    {",
          "        SetGeometryShader( 0 );",
          "        SetVertexShader( CompileShader( vs_4_0, VS() ) );",
          "        SetPixelShader( CompileShader( ps_4_0, PS() ) );",
          "    }",
          "}",
          "//<<< _technique\r",
          ""
        ]
      },
      "MetaID": "c522a66e-3260-4692-b3e3-79fd0361fa3d",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Position.X",
      "MetaInstanceID": "aacae88b-91fd-40a7-a216-61000e0d9fab",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.5"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Position.Y",
      "MetaInstanceID": "67d4edaa-835b-419c-9abf-852d1bb6cb80",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.5"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "MaxIterations",
      "MetaInstanceID": "2796dae1-2d62-4694-933e-b5a495d01da9",
      "DefaultValue": {
        "Type": "Float",
        "Value": "3"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "1",
      "Max": "30",
      "Scale": "1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Bias",
      "MetaInstanceID": "e5e25c6f-6db8-4439-9e44-9d671e342196",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.5"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.001",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Zoom",
      "MetaInstanceID": "65014e30-cae2-42bb-956c-7d859122dad2",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0.1",
      "Max": "10000",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "InitialCellSize",
      "MetaInstanceID": "9d2cebb4-8271-403c-b73d-a50240025b9f",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.2"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0.001",
      "Max": "5",
      "Scale": "0.001",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Animate",
      "MetaInstanceID": "99c2ab35-8b26-4edd-bcd2-d00bb19337d3",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Required",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Density",
      "MetaInstanceID": "15a93b1c-400b-492e-be47-b90ec0cec076",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.5"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "2",
      "Scale": "0.001",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "PointStrength",
      "MetaInstanceID": "27ed610f-9a02-49d1-88d8-4153718b2fe1",
      "DefaultValue": {
        "Type": "Float",
        "Value": "5"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "10000",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "ColorSaturation",
      "MetaInstanceID": "a94992b2-27e0-422a-b9e9-24c9cec3b51d",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "CellRotationAmt",
      "MetaInstanceID": "67102a92-1e1c-412b-af45-498e9a98ca43",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "CellScale",
      "MetaInstanceID": "27e92fb0-a5f6-4c40-abe0-41c5be2350c8",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    }
  ],
  "Outputs": [
    {
      "Name": "Image",
      "MetaInstanceID": "af4c232b-6181-4557-a1dc-783fb8b435a7",
      "MetaID": "9848060d-fd84-45b0-b658-d0d531c61dab"
    }
  ],
  "OperatorParts": [
    {
      "MetaInstanceID": "3253c559-b16f-4adc-94de-072cfeb0cd30",
      "MetaID": "8c98ddc7-48cf-4407-a46e-5ee7ce2d8426",
      "Name": "SH_GlowCellsHardFunc",
      "Version": "ecdcc264-8aae-4f32-8945-d2853e5dafea",
      "Type": "Float",
      "IsMultiInput": "True",
      "Script": [
        "//>>> _using",
        "using System;",
        "using System.Collections.Generic;",
        "using System.Linq;",
        "using System.Text;",
        "using SharpDX;",
        "using SharpDX.Direct3D11;",
        "using SharpDX.Windows;",
        "//<<< _using",
        "",
        "namespace Framefield.Core.ID8c98ddc7_48cf_4407_a46e_5ee7ce2d8426",
        "{",
        "    public class Class_SH_GlowCellsHard : FXImageFunction, Framefield.Core.OperatorPartTraits.ITimeAccessor",
        "    {",
        "        //>>> _inputids",
        "        private enum InputId",
        "        {",
        "            Code = 0,",
        "            PositionX = 1,",
        "            PositionY = 2,",
        "            MaxIterations = 3,",
        "            Bias = 4,",
        "            Zoom = 5,",
        "            Animate = 6,",
        "            PointStrength = 7,",
        "            Density = 8,",
        "            ColorSaturation = 9,",
        "            InitialCellSize = 10,",
        "            CellRotationAmt = 11,",
        "            CellScale = 12",
        "        }",
        "        //<<< _inputids",
        "",
        "        public override OperatorPartContext Eval(OperatorPartContext context, List<OperatorPart> inputs, int outputIdx) {",
        "            //>>> _params",
        "            var Code = inputs[(int)InputId.Code].Eval(context).Text;",
        "            var PositionX = inputs[(int)InputId.PositionX].Eval(context).Value;",
        "            var PositionY = inputs[(int)InputId.PositionY].Eval(context).Value;",
        "            var Position = new Vector2(PositionX, PositionY);",
        "            var MaxIterations = inputs[(int)InputId.MaxIterations].Eval(context).Value;",
        "            var Bias = inputs[(int)InputId.Bias].Eval(context).Value;",
        "            var Zoom = inputs[(int)InputId.Zoom].Eval(context).Value;",
        "            var Animate = inputs[(int)InputId.Animate].Eval(context).Value;",
        "            var PointStrength = inputs[(int)InputId.PointStrength].Eval(context).Value;",
        "            var Density = inputs[(int)InputId.Density].Eval(context).Value;",
        "            var ColorSaturation = inputs[(int)InputId.ColorSaturation].Eval(context).Value;",
        "            var InitialCellSize = inputs[(int)InputId.InitialCellSize].Eval(context).Value;",
        "            var CellRotationAmt = inputs[(int)InputId.CellRotationAmt].Eval(context).Value;",
        "            var CellScale = inputs[(int)InputId.CellScale].Eval(context).Value;",
        "            //<<< _params",
        "            ",
        "            return PrepareAndEvalOnChange(context, () => {",
        "                ClearRenderTarget(context, new SharpDX.Color4(0, 0, 0, 0));",
        "",
        "                //>>> _setup",
        "                {",
        "                    _effect.GetVariableByName(\"RenderTargetSize\").AsVector().Set(new Vector2(_usedViewport.Width, _usedViewport.Height));",
        "                    _effect.GetVariableByName(\"Position\").AsVector().Set(new Vector2(PositionX, PositionY));",
        "                    _effect.GetVariableByName(\"MaxIterations\").AsScalar().Set(MaxIterations);",
        "                    _effect.GetVariableByName(\"Bias\").AsScalar().Set(Bias);",
        "                    _effect.GetVariableByName(\"Zoom\").AsScalar().Set(Zoom);",
        "                    _effect.GetVariableByName(\"Animate\").AsScalar().Set(Animate);",
        "                    _effect.GetVariableByName(\"PointStrength\").AsScalar().Set(PointStrength);",
        "                    _effect.GetVariableByName(\"Density\").AsScalar().Set(Density);",
        "                    _effect.GetVariableByName(\"ColorSaturation\").AsScalar().Set(ColorSaturation);",
        "                    _effect.GetVariableByName(\"InitialCellSize\").AsScalar().Set(InitialCellSize);",
        "                    _effect.GetVariableByName(\"CellRotationAmt\").AsScalar().Set(CellRotationAmt);",
        "                    _effect.GetVariableByName(\"CellScale\").AsScalar().Set(CellScale);",
        "                //<<< _setup",
        "",
        "                Render(context);",
        "",
        "                //>>> _cleanup",
        "                }",
        "                //<<< _cleanup",
        "            });",
        "        }",
        "",
        "    }",
        "}",
        "",
        "",
        "",
        ""
      ],
      "AdditionalAssemblies": [
        "LibToollTenfour.dll"
      ]
    }
  ],
  "Operators": [],
  "Connections": [
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "3253c559-b16f-4adc-94de-072cfeb0cd30",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "af4c232b-6181-4557-a1dc-783fb8b435a7"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "06bf0605-1bcf-4904-8a6d-0f47b4a52548",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "3253c559-b16f-4adc-94de-072cfeb0cd30"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "aacae88b-91fd-40a7-a216-61000e0d9fab",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "3253c559-b16f-4adc-94de-072cfeb0cd30"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "67d4edaa-835b-419c-9abf-852d1bb6cb80",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "3253c559-b16f-4adc-94de-072cfeb0cd30"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "2796dae1-2d62-4694-933e-b5a495d01da9",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "3253c559-b16f-4adc-94de-072cfeb0cd30"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "e5e25c6f-6db8-4439-9e44-9d671e342196",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "3253c559-b16f-4adc-94de-072cfeb0cd30"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "65014e30-cae2-42bb-956c-7d859122dad2",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "3253c559-b16f-4adc-94de-072cfeb0cd30"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "99c2ab35-8b26-4edd-bcd2-d00bb19337d3",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "3253c559-b16f-4adc-94de-072cfeb0cd30"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "27ed610f-9a02-49d1-88d8-4153718b2fe1",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "3253c559-b16f-4adc-94de-072cfeb0cd30"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "15a93b1c-400b-492e-be47-b90ec0cec076",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "3253c559-b16f-4adc-94de-072cfeb0cd30"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "a94992b2-27e0-422a-b9e9-24c9cec3b51d",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "3253c559-b16f-4adc-94de-072cfeb0cd30"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "9d2cebb4-8271-403c-b73d-a50240025b9f",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "3253c559-b16f-4adc-94de-072cfeb0cd30"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "67102a92-1e1c-412b-af45-498e9a98ca43",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "3253c559-b16f-4adc-94de-072cfeb0cd30"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "27e92fb0-a5f6-4c40-abe0-41c5be2350c8",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "3253c559-b16f-4adc-94de-072cfeb0cd30"
    }
  ]
}