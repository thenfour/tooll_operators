{
  "Name": "SH_MoonWaves",
  "_id": "caa83941-5b33-4ba6-8545-d3952237bf3c",
  "Namespace": "user.tenfour.shaders",
  "Description": "",
  "Inputs": [
    {
      "Name": "Code",
      "MetaInstanceID": "deda7296-397f-4623-8acb-655ef238b3f2",
      "DefaultValue": {
        "Type": "Text",
        "Value": [
          "//>>> _common parameters\r",
          "float4x4 objectToWorldMatrix;",
          "float4x4 worldToCameraMatrix;",
          "float4x4 projMatrix;",
          "Texture2D txDiffuse;",
          "float2 RenderTargetSize;",
          "//<<< _common parameters\r",
          "\r",
          "//>>> _parameters\r",
          "float Zoom;",
          "float2 Position;",
          "float K;",
          "float Offset;",
          "float2 RotationRange;",
          "float Iterations;",
          "float LayerDistance;",
          "float LayerScale;",
          "float Waviness;",
          "float2 Radii;",
          "float4 DTOA;",
          "float LayerShade;",
          "float Saturation;",
          "float BorderSize;",
          "float DTOAMul;",
          "float WavinessPhase;",
          "float RotationPhase;",
          "//<<< _parameters\r",
          "float iTime;\r",
          "static const float PI = atan(1.)*4.;\r",
          "static const float PI2 = atan(1.)*8.;\r",
          "\r",
          "//>>> _setup\r",
          "SamplerState samLinear",
          "{",
          "    Filter = MIN_MAG_MIP_LINEAR;",
          "    AddressU = Clamp;",
          "    AddressV = Clamp;",
          "};",
          "//<<< _setup\r",
          "\r",
          "//>>> _declarations\r",
          "struct VS_IN",
          "{",
          "    float4 pos : POSITION;",
          "    float2 texCoord : TEXCOORD;",
          "};",
          "",
          "struct PS_IN",
          "{",
          "    float4 pos : SV_POSITION;",
          "    float2 texCoord: TEXCOORD0;",
          "};",
          "//<<< _declarations\r",
          "\r",
          "//>>> _GS\r",
          "",
          "//<<< _GS\r",
          "\r",
          "//>>> _VS \r",
          "PS_IN VS( VS_IN input )",
          "{",
          "    PS_IN output = (PS_IN)0;",
          "",
          "    output.pos = mul(input.pos, worldToCameraMatrix);",
          "    output.pos = mul(output.pos, projMatrix);",
          "    output.texCoord = input.texCoord;",
          "",
          "    return output;",
          "}",
          "//<<< _VS\r",
          "\r",
          "//>>> PS\r",
          "// http://www.iquilezles.org/www/articles/distfunctions2d/distfunctions2d.htm\r",
          "\r",
          "float2x2 rot2D(float r){\r",
          "    return float2x2(cos(r), -sin(r), sin(r), cos(r));\r",
          "}\r",
          "\r",
          "//----------------------------------------------------------------------------------------\r",
          "// 4 out, 2 in...\r",
          "float4 hash42(float2 p)\r",
          "{\r",
          "\tfloat4 p4 = frac(p.xyxy * float4(.1031, .1030, .0973, .1099));\r",
          "    p4 += dot(p4, p4.wzxy+33.33);\r",
          "    return frac((p4.xxyz+p4.yzzw)*p4.zywx);\r",
          "}\r",
          "\r",
          "\r",
          "// polynomial smooth min (k = 0.1);\r",
          "float smin( float a, float b, float k )\r",
          "{\r",
          "    float h = clamp( 0.5+0.5*(b-a)/k, 0.0, 1.0 );\r",
          "    return lerp( b, a, h ) - k*h*(1.0-h);\r",
          "}\r",
          "float smax(float a, float b, float k) {\r",
          "    return -smin(-a, -b, k);\r",
          "}\r",
          "\r",
          "//static const float k = .1;\r",
          "float opSmoothSubtraction( float d1, float d2 ) { return smax(-d1,d2, K); }\r",
          "float opSmoothIntersection( float d1, float d2 ) { return smax(d1,d2, K); }\r",
          "float opSmoothUnion( float d1, float d2 ) { return smin(d1,d2, K); }\r",
          "\r",
          "float opUnion( float d1, float d2 ) { return min(d1,d2); }\r",
          "float opSubtraction( float d1, float d2 ) { return max(-d1,d2); }\r",
          "float opIntersection( float d1, float d2 ) { return max(d1,d2); }\r",
          "float opXor(float lhs, float rhs) {\r",
          "    return opUnion(opIntersection(lhs, -(rhs)), opIntersection(rhs, -(lhs)));\r",
          "}\r",
          "float opSmoothXor(float lhs, float rhs) {\r",
          "    return opSmoothUnion(opSmoothIntersection(lhs, -(rhs)), opSmoothIntersection(rhs, -(lhs)));\r",
          "}\r",
          "\r",
          "#define dtoa(d, amount) (1. / clamp((d)*(amount), 1., (amount)))\r",
          "\r",
          "\r",
          "float3 pal( in float t, in float3 a, in float3 b, in float3 c, in float3 d )\r",
          "{\r",
          "    return a + b*cos( PI2*(c*t+d) );\r",
          "}\r",
          "\r",
          "\r",
          "float sdTriangle( in float2 p, in float2 p0, in float2 p1, in float2 p2 )\r",
          "{\r",
          "    float2 e0 = p1-p0, e1 = p2-p1, e2 = p0-p2;\r",
          "    float2 v0 = p -p0, v1 = p -p1, v2 = p -p2;\r",
          "    float2 pq0 = v0 - e0*clamp( dot(v0,e0)/dot(e0,e0), 0.0, 1.0 );\r",
          "    float2 pq1 = v1 - e1*clamp( dot(v1,e1)/dot(e1,e1), 0.0, 1.0 );\r",
          "    float2 pq2 = v2 - e2*clamp( dot(v2,e2)/dot(e2,e2), 0.0, 1.0 );\r",
          "    float s = sign( e0.x*e2.y - e0.y*e2.x );\r",
          "    float2 d = min(min(float2(dot(pq0,pq0), s*(v0.x*e0.y-v0.y*e0.x)),\r",
          "                     float2(dot(pq1,pq1), s*(v1.x*e1.y-v1.y*e1.x))),\r",
          "                     float2(dot(pq2,pq2), s*(v2.x*e2.y-v2.y*e2.x)));\r",
          "    return -sqrt(d.x)*sign(d.y);\r",
          "}\r",
          "float sdLine( in float2 p, in float2 a, in float2 b )\r",
          "{\r",
          "    float2 pa = p-a, ba = b-a;\r",
          "    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\r",
          "    return length( pa - ba*h );\r",
          "}\r",
          "\r",
          "float sdEquilateralTriangle( in float2 p )\r",
          "{\r",
          "    const float k = sqrt(3.0);\r",
          "    p.x = abs(p.x) - 1.0;\r",
          "    p.y = p.y + 1.0/k;\r",
          "    if( p.x+k*p.y>0.0 ) p = float2(p.x-k*p.y,-k*p.x-p.y)/2.0;\r",
          "    p.x -= clamp( p.x, -2.0, 0.0 );\r",
          "    return -length(p)*sign(p.y);\r",
          "}\r",
          "\r",
          "\r",
          "float sdBox( in float2 p, in float2 b )\r",
          "{\r",
          "    float2 d = abs(p)-b;\r",
          "    return length(max(d,float2(0,0))) + min(max(d.x,d.y),0.0);\r",
          "}\r",
          "\r",
          "float rsin(float x, float low, float high)\r",
          "{\r",
          "    return (sin(x)*.5+.5) * (high-low) + low;\r",
          "}\r",
          "\r",
          "void DoRow(inout float4 o, float2 uv, float xo)\r",
          "{\r",
          "    float s = .5;\r",
          "    float2 originalUV = uv;\r",
          "\r",
          "    for (float i = Iterations; i > 0; -- i)\r",
          "    {\r",
          "        uv.y -= LayerDistance;\r",
          "        uv /= LayerScale;\r",
          "        uv.x += 13.1;\r",
          "        uv.x += Position.x * s;\r",
          "        uv.x += sin(originalUV.y*.2+WavinessPhase+i)*Waviness;\r",
          "        s = -s;\r",
          "        float2 tuv = uv;\r",
          "        \r",
          "        tuv.x = frac(tuv.x)-.5;\r",
          "        \r",
          "        float4 h = hash42(floor(uv.xx+12)*13);\r",
          "        float sd = length(tuv)-Radii.x;\r",
          "        float2 cp2 = tuv;\r",
          "        float a = rsin(RotationPhase + uv.x,RotationRange.x,RotationRange.y);\r",
          "        cp2 += float2(sin(a),cos(a))*Offset;//*sin(uv.x)*.2;\r",
          "        sd = opSmoothSubtraction(length(cp2)-Radii.y, sd);\r",
          "\r",
          "        float4 h2 = hash42(h.xy);\r",
          "        //sd = abs(sd);\r",
          "\r",
          "        float shade = 1-pow(max(0,i/Iterations), LayerShade);\r",
          "        float4 alph = dtoa(sd, DTOA * DTOAMul) * shade;\r",
          "        h.rgb = lerp((h.r+h.g+h.b)/3,h.rgb,Saturation);\r",
          "        o = lerp(o, float4(h.rgb,1), alph);\r",
          "        o = clamp(o,0,1);\r",
          "        \r",
          "        float sdBorder = abs(sd-BorderSize)-BorderSize;\r",
          "        \r",
          "        alph = dtoa(sdBorder, DTOA * DTOAMul) * shade;\r",
          "        h2.rgb = lerp((h.r+h.g+h.b)/3,h2.rgb,Saturation);\r",
          "        o = lerp(o, float4(h2.rgb,1), alph);\r",
          "        o = clamp(o,0,1);\r",
          "    }\r",
          "}\r",
          "\r",
          "float4 PS( PS_IN input ) : SV_Target\r",
          "{\r",
          "    float4 o = float4(0,0,0,0);\r",
          "    float2 uv = input.texCoord.xy;\r",
          "    float2 R = RenderTargetSize.xy;\r",
          "    uv -= .5;\r",
          "    uv.x *= R.x / R.y;\r",
          "    uv *= Zoom;\r",
          "    uv += Position;\r",
          "\r",
          "    // todo: figure out how to draw 3 adjascent cells to avoid sharp artifacts around cells.\r",
          "    DoRow(o, uv, 0);\r",
          "\r",
          "    return o;\r",
          "}\r",
          "\r",
          "",
          "//<<< PS\r",
          "\r",
          "\r",
          "//>>> _technique\r",
          "technique10 Render",
          "{",
          "    pass P0",
          "    {",
          "        SetGeometryShader( 0 );",
          "        SetVertexShader( CompileShader( vs_4_0, VS() ) );",
          "        SetPixelShader( CompileShader( ps_4_0, PS() ) );",
          "    }",
          "}",
          "//<<< _technique\r",
          ""
        ]
      },
      "MetaID": "c522a66e-3260-4692-b3e3-79fd0361fa3d",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-100000",
      "Max": "100000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Zoom",
      "MetaInstanceID": "1440087c-9b15-473f-b8f7-2ba310deb0a3",
      "DefaultValue": {
        "Type": "Float",
        "Value": "10"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0.001",
      "Max": "10000",
      "Scale": "0.01",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Position.X",
      "MetaInstanceID": "9937debd-176d-4fa6-aac4-1074952966a6",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Position.Y",
      "MetaInstanceID": "df7142c1-e626-4530-8382-58b999417440",
      "DefaultValue": {
        "Type": "Float",
        "Value": "2.5"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "K",
      "MetaInstanceID": "dbf9583f-d5be-401e-ba86-477f0b7b3c94",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.05"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Offset",
      "MetaInstanceID": "55a46a0a-21f5-4068-8e1f-283265a539ca",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.3"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "RotationRange.X",
      "MetaInstanceID": "7619e6bf-9f9e-4f6e-ae6a-7c910b0ee1af",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.5"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "RotationRange.Y",
      "MetaInstanceID": "4659ea89-af41-470b-8824-47a6b8b7c44b",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1.5"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Waviness",
      "MetaInstanceID": "ee9d0d5e-9b89-4bf4-865d-a79949685835",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.05"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Radii.X",
      "MetaInstanceID": "55fff6aa-f0a3-4292-8633-5d28bad0c510",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.4"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "10000",
      "Scale": "0.005",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Radii.Y",
      "MetaInstanceID": "d53e7306-b57c-4055-b965-788b8ad53a3a",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.4"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "10000",
      "Scale": "0.005",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Iterations",
      "MetaInstanceID": "194049c7-c334-4a63-80ea-67868df3d996",
      "DefaultValue": {
        "Type": "Float",
        "Value": "15"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "LayerDistance",
      "MetaInstanceID": "90efa20b-b8fd-4b6d-9387-409492b78ed4",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.2"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "LayerScale",
      "MetaInstanceID": "8f959137-ec28-44c4-b26e-78c89f919ce6",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1.1"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "LayerShade",
      "MetaInstanceID": "615a8144-a909-4714-a609-d4340de5f74f",
      "DefaultValue": {
        "Type": "Float",
        "Value": "2"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "BorderSize",
      "MetaInstanceID": "f3823f44-73d8-4b78-8799-f17a45b28079",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.05"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.005",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "DTOA.R",
      "MetaInstanceID": "29f7bc60-ecd5-4aba-92ff-5ed73e7cad3f",
      "DefaultValue": {
        "Type": "Float",
        "Value": "90"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "1",
      "Max": "1000",
      "Scale": "5",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "DTOA.G",
      "MetaInstanceID": "49d015b0-041f-44a7-854b-308d2d787bd6",
      "DefaultValue": {
        "Type": "Float",
        "Value": "40"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "1",
      "Max": "1000",
      "Scale": "5",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "DTOA.B",
      "MetaInstanceID": "b7038fc3-ce6b-48bc-b367-8ce596771afb",
      "DefaultValue": {
        "Type": "Float",
        "Value": "1000"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1000",
      "Scale": "5",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "DTOA.A",
      "MetaInstanceID": "cb385938-bc22-4208-8569-8c8a2d528c72",
      "DefaultValue": {
        "Type": "Float",
        "Value": "100"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "1",
      "Max": "1000",
      "Scale": "5",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "DTOAMul",
      "MetaInstanceID": "d3ad2993-6db9-4118-86d5-930b5e440b79",
      "DefaultValue": {
        "Type": "Float",
        "Value": "2"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0.01",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "Saturation",
      "MetaInstanceID": "46d1a452-511f-4539-b814-f6e5411664d2",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0.5"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "0",
      "Max": "1",
      "Scale": "0.05",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "WavinessPhase",
      "MetaInstanceID": "5c13df90-1e29-4391-b1e0-31654e83107b",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    },
    {
      "Name": "RotationPhase",
      "MetaInstanceID": "b3391074-0d1d-473e-9392-079dc4c288b9",
      "DefaultValue": {
        "Type": "Float",
        "Value": "0"
      },
      "MetaID": "3f76dee3-3897-44ac-82d6-25ce9f53a506",
      "IsMultiInput": "False",
      "Relevance": "Optional",
      "Description": "",
      "Min": "-10000",
      "Max": "10000",
      "Scale": "0.1",
      "ScaleType": "Linear",
      "EnumValues": []
    }
  ],
  "Outputs": [
    {
      "Name": "Image",
      "MetaInstanceID": "e71a8f52-bb1f-45d0-92a6-294d228d0578",
      "MetaID": "9848060d-fd84-45b0-b658-d0d531c61dab"
    }
  ],
  "OperatorParts": [
    {
      "MetaInstanceID": "bf36e0b4-547a-4947-982e-1d87318e8cc9",
      "MetaID": "62d3cd16-b9ad-4406-9b24-c388ab29b2cd",
      "Name": "SH_MoonWavesFunc",
      "Version": "b14d3524-1927-4ad6-a751-5ff716c89139",
      "Type": "Float",
      "IsMultiInput": "True",
      "Script": [
        "//>>> _using",
        "using System;",
        "using System.Collections.Generic;",
        "using System.Linq;",
        "using System.Text;",
        "using SharpDX;",
        "using SharpDX.Direct3D11;",
        "using SharpDX.Windows;",
        "//<<< _using",
        "",
        "namespace Framefield.Core.ID62d3cd16_b9ad_4406_9b24_c388ab29b2cd",
        "{",
        "    public class Class_SH_MoonWaves : FXImageFunction, Framefield.Core.OperatorPartTraits.ITimeAccessor",
        "    {",
        "        //>>> _inputids",
        "        private enum InputId",
        "        {",
        "            Code = 0,",
        "            Zoom = 1,",
        "            PositionX = 2,",
        "            PositionY = 3,",
        "            K = 4,",
        "            Offset = 5,",
        "            RotationRangeX = 6,",
        "            RotationRangeY = 7,",
        "            Iterations = 8,",
        "            LayerDistance = 9,",
        "            LayerScale = 10,",
        "            Waviness = 11,",
        "            RadiiX = 12,",
        "            RadiiY = 13,",
        "            DTOAR = 14,",
        "            DTOAG = 15,",
        "            DTOAB = 16,",
        "            DTOAA = 17,",
        "            LayerShade = 18,",
        "            Saturation = 19,",
        "            BorderSize = 20,",
        "            DTOAMul = 21,",
        "            WavinessPhase = 22,",
        "            RotationPhase = 23",
        "        }",
        "        //<<< _inputids",
        "",
        "        public override OperatorPartContext Eval(OperatorPartContext context, List<OperatorPart> inputs, int outputIdx) {",
        "            //>>> _params",
        "            var Code = inputs[(int)InputId.Code].Eval(context).Text;",
        "            var Zoom = inputs[(int)InputId.Zoom].Eval(context).Value;",
        "            var PositionX = inputs[(int)InputId.PositionX].Eval(context).Value;",
        "            var PositionY = inputs[(int)InputId.PositionY].Eval(context).Value;",
        "            var Position = new Vector2(PositionX, PositionY);",
        "            var K = inputs[(int)InputId.K].Eval(context).Value;",
        "            var Offset = inputs[(int)InputId.Offset].Eval(context).Value;",
        "            var RotationRangeX = inputs[(int)InputId.RotationRangeX].Eval(context).Value;",
        "            var RotationRangeY = inputs[(int)InputId.RotationRangeY].Eval(context).Value;",
        "            var RotationRange = new Vector2(RotationRangeX, RotationRangeY);",
        "            var Iterations = inputs[(int)InputId.Iterations].Eval(context).Value;",
        "            var LayerDistance = inputs[(int)InputId.LayerDistance].Eval(context).Value;",
        "            var LayerScale = inputs[(int)InputId.LayerScale].Eval(context).Value;",
        "            var Waviness = inputs[(int)InputId.Waviness].Eval(context).Value;",
        "            var RadiiX = inputs[(int)InputId.RadiiX].Eval(context).Value;",
        "            var RadiiY = inputs[(int)InputId.RadiiY].Eval(context).Value;",
        "            var Radii = new Vector2(RadiiX, RadiiY);",
        "            var DTOAR = inputs[(int)InputId.DTOAR].Eval(context).Value;",
        "            var DTOAG = inputs[(int)InputId.DTOAG].Eval(context).Value;",
        "            var DTOAB = inputs[(int)InputId.DTOAB].Eval(context).Value;",
        "            var DTOAA = inputs[(int)InputId.DTOAA].Eval(context).Value;",
        "            var DTOA = new Color4(DTOAR, DTOAG, DTOAB, DTOAA);",
        "            var LayerShade = inputs[(int)InputId.LayerShade].Eval(context).Value;",
        "            var Saturation = inputs[(int)InputId.Saturation].Eval(context).Value;",
        "            var BorderSize = inputs[(int)InputId.BorderSize].Eval(context).Value;",
        "            var DTOAMul = inputs[(int)InputId.DTOAMul].Eval(context).Value;",
        "            var WavinessPhase = inputs[(int)InputId.WavinessPhase].Eval(context).Value;",
        "            var RotationPhase = inputs[(int)InputId.RotationPhase].Eval(context).Value;",
        "            //<<< _params",
        "            ",
        "            return PrepareAndEvalOnChange(context, () => {",
        "                ClearRenderTarget(context, new SharpDX.Color4(0, 0, 0, 0));",
        "",
        "                //>>> _setup",
        "                {",
        "                    _effect.GetVariableByName(\"RenderTargetSize\").AsVector().Set(new Vector2(_usedViewport.Width, _usedViewport.Height));",
        "                    _effect.GetVariableByName(\"Zoom\").AsScalar().Set(Zoom);",
        "                    _effect.GetVariableByName(\"Position\").AsVector().Set(new Vector2(PositionX, PositionY));",
        "                    _effect.GetVariableByName(\"K\").AsScalar().Set(K);",
        "                    _effect.GetVariableByName(\"Offset\").AsScalar().Set(Offset);",
        "                    _effect.GetVariableByName(\"RotationRange\").AsVector().Set(new Vector2(RotationRangeX, RotationRangeY));",
        "                    _effect.GetVariableByName(\"Iterations\").AsScalar().Set(Iterations);",
        "                    _effect.GetVariableByName(\"LayerDistance\").AsScalar().Set(LayerDistance);",
        "                    _effect.GetVariableByName(\"LayerScale\").AsScalar().Set(LayerScale);",
        "                    _effect.GetVariableByName(\"Waviness\").AsScalar().Set(Waviness);",
        "                    _effect.GetVariableByName(\"Radii\").AsVector().Set(new Vector2(RadiiX, RadiiY));",
        "                    _effect.GetVariableByName(\"DTOA\").AsVector().Set(new Vector4(DTOAR, DTOAG, DTOAB, DTOAA));",
        "                    _effect.GetVariableByName(\"LayerShade\").AsScalar().Set(LayerShade);",
        "                    _effect.GetVariableByName(\"Saturation\").AsScalar().Set(Saturation);",
        "                    _effect.GetVariableByName(\"BorderSize\").AsScalar().Set(BorderSize);",
        "                    _effect.GetVariableByName(\"DTOAMul\").AsScalar().Set(DTOAMul);",
        "                    _effect.GetVariableByName(\"WavinessPhase\").AsScalar().Set(WavinessPhase);",
        "                    _effect.GetVariableByName(\"RotationPhase\").AsScalar().Set(RotationPhase);",
        "                //<<< _setup",
        "",
        "                _effect.GetVariableByName(\"iTime\").AsScalar().Set(context.Time);",
        "                Render(context);",
        "",
        "                //>>> _cleanup",
        "                }",
        "                //<<< _cleanup",
        "            });",
        "        }",
        "",
        "    }",
        "}",
        "",
        "",
        "",
        ""
      ],
      "AdditionalAssemblies": [
        "LibToollTenfour.dll"
      ]
    }
  ],
  "Operators": [],
  "Connections": [
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "bf36e0b4-547a-4947-982e-1d87318e8cc9",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "e71a8f52-bb1f-45d0-92a6-294d228d0578"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "deda7296-397f-4623-8acb-655ef238b3f2",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "bf36e0b4-547a-4947-982e-1d87318e8cc9"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "1440087c-9b15-473f-b8f7-2ba310deb0a3",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "bf36e0b4-547a-4947-982e-1d87318e8cc9"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "9937debd-176d-4fa6-aac4-1074952966a6",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "bf36e0b4-547a-4947-982e-1d87318e8cc9"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "df7142c1-e626-4530-8382-58b999417440",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "bf36e0b4-547a-4947-982e-1d87318e8cc9"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "dbf9583f-d5be-401e-ba86-477f0b7b3c94",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "bf36e0b4-547a-4947-982e-1d87318e8cc9"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "55a46a0a-21f5-4068-8e1f-283265a539ca",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "bf36e0b4-547a-4947-982e-1d87318e8cc9"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "7619e6bf-9f9e-4f6e-ae6a-7c910b0ee1af",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "bf36e0b4-547a-4947-982e-1d87318e8cc9"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "4659ea89-af41-470b-8824-47a6b8b7c44b",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "bf36e0b4-547a-4947-982e-1d87318e8cc9"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "194049c7-c334-4a63-80ea-67868df3d996",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "bf36e0b4-547a-4947-982e-1d87318e8cc9"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "90efa20b-b8fd-4b6d-9387-409492b78ed4",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "bf36e0b4-547a-4947-982e-1d87318e8cc9"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "8f959137-ec28-44c4-b26e-78c89f919ce6",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "bf36e0b4-547a-4947-982e-1d87318e8cc9"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "ee9d0d5e-9b89-4bf4-865d-a79949685835",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "bf36e0b4-547a-4947-982e-1d87318e8cc9"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "55fff6aa-f0a3-4292-8633-5d28bad0c510",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "bf36e0b4-547a-4947-982e-1d87318e8cc9"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "d53e7306-b57c-4055-b965-788b8ad53a3a",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "bf36e0b4-547a-4947-982e-1d87318e8cc9"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "29f7bc60-ecd5-4aba-92ff-5ed73e7cad3f",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "bf36e0b4-547a-4947-982e-1d87318e8cc9"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "49d015b0-041f-44a7-854b-308d2d787bd6",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "bf36e0b4-547a-4947-982e-1d87318e8cc9"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "b7038fc3-ce6b-48bc-b367-8ce596771afb",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "bf36e0b4-547a-4947-982e-1d87318e8cc9"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "cb385938-bc22-4208-8569-8c8a2d528c72",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "bf36e0b4-547a-4947-982e-1d87318e8cc9"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "615a8144-a909-4714-a609-d4340de5f74f",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "bf36e0b4-547a-4947-982e-1d87318e8cc9"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "46d1a452-511f-4539-b814-f6e5411664d2",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "bf36e0b4-547a-4947-982e-1d87318e8cc9"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "f3823f44-73d8-4b78-8799-f17a45b28079",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "bf36e0b4-547a-4947-982e-1d87318e8cc9"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "d3ad2993-6db9-4118-86d5-930b5e440b79",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "bf36e0b4-547a-4947-982e-1d87318e8cc9"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "5c13df90-1e29-4391-b1e0-31654e83107b",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "bf36e0b4-547a-4947-982e-1d87318e8cc9"
    },
    {
      "SourceOp": "00000000-0000-0000-0000-000000000000",
      "SourceOpPart": "b3391074-0d1d-473e-9392-079dc4c288b9",
      "TargetOp": "00000000-0000-0000-0000-000000000000",
      "TargetOpPart": "bf36e0b4-547a-4947-982e-1d87318e8cc9"
    }
  ]
}